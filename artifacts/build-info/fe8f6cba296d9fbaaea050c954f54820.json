{
	"id": "fe8f6cba296d9fbaaea050c954f54820",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"SyntheticAssetToken_flattened.sol": {
				"content": "\n// File: @chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\n\n\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: SyntheticAssetToken.sol\n\n\npragma solidity ^0.8.18;\n\n// Import Chainlink's price feed interface and OpenZeppelin ERC20 library\n\n\n\n// Our token contract\ncontract SyntheticAssetToken is ERC20 {\n    // Chainlink Aggregator interfaces for price feeds\n    AggregatorV3Interface internal ethUsdPriceFeed;\n    AggregatorV3Interface internal btcUsdPriceFeed;\n    address public owner;\n    \n    constructor() ERC20(\"Synthetic Bitcoin\", \"sBTC\") {\n        owner = msg.sender;\n        // Initialize the Chainlink price feed contracts (addresses for Sepolia)\n        ethUsdPriceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\n        btcUsdPriceFeed = AggregatorV3Interface(0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43);\n    }\n    \n    // Function to get latest BTC price in USD (8 decimal places)\n    function getLatestBtcPrice() public view returns (int) {\n        (, int price,,,) = btcUsdPriceFeed.latestRoundData();\n        return price;  // price is scaled by 1e8 (Chainlink USD feeds have 8 decimals)\n    }\n    \n    // Mint new synthetic asset tokens by depositing ETH as collateral\n    function mintWithEther() external payable {\n        require(msg.value > 0, \"Must send ETH to mint tokens\");\n        // Fetch current prices from oracles\n        (, int ethPrice,,,) = ethUsdPriceFeed.latestRoundData();   // ETH price in USD (1e8 scale)\n        (, int btcPrice,,,) = btcUsdPriceFeed.latestRoundData();   // BTC price in USD (1e8 scale)\n        require(ethPrice > 0 && btcPrice > 0, \"Invalid oracle price\");\n        \n        // Convert int prices to uint for calculation\n        uint256 ethPriceUint = uint256(ethPrice);\n        uint256 btcPriceUint = uint256(btcPrice);\n        \n        // Calculate how many tokens to mint: (ETH_value_in_USD / BTC_price_in_USD)\n        // msg.value is the amount of ETH sent (in wei). To get its USD value:\n        // (msg.value * ethPrice) / 1e18 gives the USD value in terms of the 8-decimal price.\n        uint256 depositValueInUsd_scaled = (msg.value * ethPriceUint) / 1e18;\n        // Now calculate equivalent BTC amount (scaled to 8 decimals) by dividing by BTC price.\n        // This result will be in 8 decimals too, so multiply by 1e10 to convert to 18 decimals for token.\n        uint256 btcAmount_scaled = (depositValueInUsd_scaled * (10 ** 10)) / btcPriceUint;\n        \n        // Mint synthetic BTC tokens to the user\n        _mint(msg.sender, btcAmount_scaled);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"SyntheticAssetToken_flattened.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SyntheticAssetToken_flattened.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SyntheticAssetToken_flattened.sol\":{\"keccak256\":\"0x2118a669479810f254d32a19a123b24f375a195506250cb7af0699bb8d5754c5\",\"urls\":[\"bzz-raw://74420bb1f06681424c6e9c16c205fe9610d1fe676594f6c951342affb3b7eaf3\",\"dweb:/ipfs/QmUeBfQz7s2mKEJVEu7WjLKP41kwdZY1w7AaVdt8U2mco8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SyntheticAssetToken_flattened.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SyntheticAssetToken_flattened.sol\":{\"keccak256\":\"0x2118a669479810f254d32a19a123b24f375a195506250cb7af0699bb8d5754c5\",\"urls\":[\"bzz-raw://74420bb1f06681424c6e9c16c205fe9610d1fe676594f6c951342affb3b7eaf3\",\"dweb:/ipfs/QmUeBfQz7s2mKEJVEu7WjLKP41kwdZY1w7AaVdt8U2mco8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SyntheticAssetToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SyntheticAssetToken_flattened.sol\":{\"keccak256\":\"0x2118a669479810f254d32a19a123b24f375a195506250cb7af0699bb8d5754c5\",\"urls\":[\"bzz-raw://74420bb1f06681424c6e9c16c205fe9610d1fe676594f6c951342affb3b7eaf3\",\"dweb:/ipfs/QmUeBfQz7s2mKEJVEu7WjLKP41kwdZY1w7AaVdt8U2mco8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 324,
								"contract": "SyntheticAssetToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 330,
								"contract": "SyntheticAssetToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "SyntheticAssetToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 334,
								"contract": "SyntheticAssetToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 336,
								"contract": "SyntheticAssetToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SyntheticAssetToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SyntheticAssetToken_flattened.sol\":{\"keccak256\":\"0x2118a669479810f254d32a19a123b24f375a195506250cb7af0699bb8d5754c5\",\"urls\":[\"bzz-raw://74420bb1f06681424c6e9c16c205fe9610d1fe676594f6c951342affb3b7eaf3\",\"dweb:/ipfs/QmUeBfQz7s2mKEJVEu7WjLKP41kwdZY1w7AaVdt8U2mco8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SyntheticAssetToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SyntheticAssetToken_flattened.sol\":{\"keccak256\":\"0x2118a669479810f254d32a19a123b24f375a195506250cb7af0699bb8d5754c5\",\"urls\":[\"bzz-raw://74420bb1f06681424c6e9c16c205fe9610d1fe676594f6c951342affb3b7eaf3\",\"dweb:/ipfs/QmUeBfQz7s2mKEJVEu7WjLKP41kwdZY1w7AaVdt8U2mco8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SyntheticAssetToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SyntheticAssetToken_flattened.sol\":{\"keccak256\":\"0x2118a669479810f254d32a19a123b24f375a195506250cb7af0699bb8d5754c5\",\"urls\":[\"bzz-raw://74420bb1f06681424c6e9c16c205fe9610d1fe676594f6c951342affb3b7eaf3\",\"dweb:/ipfs/QmUeBfQz7s2mKEJVEu7WjLKP41kwdZY1w7AaVdt8U2mco8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SyntheticAssetToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SyntheticAssetToken_flattened.sol\":{\"keccak256\":\"0x2118a669479810f254d32a19a123b24f375a195506250cb7af0699bb8d5754c5\",\"urls\":[\"bzz-raw://74420bb1f06681424c6e9c16c205fe9610d1fe676594f6c951342affb3b7eaf3\",\"dweb:/ipfs/QmUeBfQz7s2mKEJVEu7WjLKP41kwdZY1w7AaVdt8U2mco8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SyntheticAssetToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SyntheticAssetToken_flattened.sol\":{\"keccak256\":\"0x2118a669479810f254d32a19a123b24f375a195506250cb7af0699bb8d5754c5\",\"urls\":[\"bzz-raw://74420bb1f06681424c6e9c16c205fe9610d1fe676594f6c951342affb3b7eaf3\",\"dweb:/ipfs/QmUeBfQz7s2mKEJVEu7WjLKP41kwdZY1w7AaVdt8U2mco8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SyntheticAssetToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestBtcPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintWithEther",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SyntheticAssetToken_flattened.sol\":22544:24830  contract SyntheticAssetToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"SyntheticAssetToken_flattened.sol\":22778:23129  constructor() ERC20(\"Synthetic Bitcoin\", \"sBTC\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"SyntheticAssetToken_flattened.sol\":13090:13203  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  0x53796e74686574696320426974636f696e000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x7342544300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"SyntheticAssetToken_flattened.sol\":13164:13169  name_ */\n  dup2\n    /* \"SyntheticAssetToken_flattened.sol\":13156:13161  _name */\n  0x03\n    /* \"SyntheticAssetToken_flattened.sol\":13156:13169  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"SyntheticAssetToken_flattened.sol\":13189:13196  symbol_ */\n  dup1\n    /* \"SyntheticAssetToken_flattened.sol\":13179:13186  _symbol */\n  0x04\n    /* \"SyntheticAssetToken_flattened.sol\":13179:13196  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"SyntheticAssetToken_flattened.sol\":13090:13203  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"SyntheticAssetToken_flattened.sol\":22845:22855  msg.sender */\n  caller\n    /* \"SyntheticAssetToken_flattened.sol\":22837:22842  owner */\n  0x07\n  0x00\n    /* \"SyntheticAssetToken_flattened.sol\":22837:22855  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SyntheticAssetToken_flattened.sol\":22986:23028  0x694AA1769357215DE4FAC081bf1f309aDC325306 */\n  0x694aa1769357215de4fac081bf1f309adc325306\n    /* \"SyntheticAssetToken_flattened.sol\":22946:22961  ethUsdPriceFeed */\n  0x05\n  0x00\n    /* \"SyntheticAssetToken_flattened.sol\":22946:23029  ethUsdPriceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SyntheticAssetToken_flattened.sol\":23079:23121  0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43 */\n  0x1b44f3514812d835eb1bdb0acb33d3fa3351ee43\n    /* \"SyntheticAssetToken_flattened.sol\":23039:23054  btcUsdPriceFeed */\n  0x06\n  0x00\n    /* \"SyntheticAssetToken_flattened.sol\":23039:23122  btcUsdPriceFeed = AggregatorV3Interface(0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SyntheticAssetToken_flattened.sol\":22544:24830  contract SyntheticAssetToken is ERC20 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"SyntheticAssetToken_flattened.sol\":22544:24830  contract SyntheticAssetToken is ERC20 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SyntheticAssetToken_flattened.sol\":22544:24830  contract SyntheticAssetToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b9629db\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x7b9629db\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbc4d2797\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"SyntheticAssetToken_flattened.sol\":13268:13357  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":15487:15673  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":14338:14435  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":16265:16509  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      revert(0x00, 0x00)\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":14196:14278  function decimals() public view virtual returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":14493:14609  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":23205:23416  function getLatestBtcPrice() public view returns (int) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      revert(0x00, 0x00)\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":22747:22767  address public owner */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":13470:13563  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":14804:14982  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      revert(0x00, 0x00)\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":23497:24828  function mintWithEther() external payable {... */\n    tag_12:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"SyntheticAssetToken_flattened.sol\":15040:15180  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      revert(0x00, 0x00)\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SyntheticAssetToken_flattened.sol\":13268:13357  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"SyntheticAssetToken_flattened.sol\":13313:13326  string memory */\n      0x60\n        /* \"SyntheticAssetToken_flattened.sol\":13345:13350  _name */\n      0x03\n        /* \"SyntheticAssetToken_flattened.sol\":13338:13350  return _name */\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_79\n      swap1\n      tag_78\n      jump\t// in\n    tag_79:\n      dup1\n      iszero\n      tag_80\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_81\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_80)\n    tag_81:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_82:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_82\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":13268:13357  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":15487:15673  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n        /* \"SyntheticAssetToken_flattened.sol\":15560:15564  bool */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":15576:15589  address owner */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":15592:15604  _msgSender() */\n      tag_84\n        /* \"SyntheticAssetToken_flattened.sol\":15592:15602  _msgSender */\n      tag_85\n        /* \"SyntheticAssetToken_flattened.sol\":15592:15604  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"SyntheticAssetToken_flattened.sol\":15576:15604  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":15614:15645  _approve(owner, spender, value) */\n      tag_86\n        /* \"SyntheticAssetToken_flattened.sol\":15623:15628  owner */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":15630:15637  spender */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":15639:15644  value */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":15614:15622  _approve */\n      tag_87\n        /* \"SyntheticAssetToken_flattened.sol\":15614:15645  _approve(owner, spender, value) */\n      jump\t// in\n    tag_86:\n        /* \"SyntheticAssetToken_flattened.sol\":15662:15666  true */\n      0x01\n        /* \"SyntheticAssetToken_flattened.sol\":15655:15666  return true */\n      swap2\n      pop\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":15487:15673  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":14338:14435  function totalSupply() public view virtual returns (uint256) {... */\n    tag_29:\n        /* \"SyntheticAssetToken_flattened.sol\":14390:14397  uint256 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":14416:14428  _totalSupply */\n      sload(0x02)\n        /* \"SyntheticAssetToken_flattened.sol\":14409:14428  return _totalSupply */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":14338:14435  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":16265:16509  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"SyntheticAssetToken_flattened.sol\":16352:16356  bool */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":16368:16383  address spender */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":16386:16398  _msgSender() */\n      tag_90\n        /* \"SyntheticAssetToken_flattened.sol\":16386:16396  _msgSender */\n      tag_85\n        /* \"SyntheticAssetToken_flattened.sol\":16386:16398  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"SyntheticAssetToken_flattened.sol\":16368:16398  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":16408:16445  _spendAllowance(from, spender, value) */\n      tag_91\n        /* \"SyntheticAssetToken_flattened.sol\":16424:16428  from */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":16430:16437  spender */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":16439:16444  value */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":16408:16423  _spendAllowance */\n      tag_92\n        /* \"SyntheticAssetToken_flattened.sol\":16408:16445  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_91:\n        /* \"SyntheticAssetToken_flattened.sol\":16455:16481  _transfer(from, to, value) */\n      tag_93\n        /* \"SyntheticAssetToken_flattened.sol\":16465:16469  from */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":16471:16473  to */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":16475:16480  value */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":16455:16464  _transfer */\n      tag_94\n        /* \"SyntheticAssetToken_flattened.sol\":16455:16481  _transfer(from, to, value) */\n      jump\t// in\n    tag_93:\n        /* \"SyntheticAssetToken_flattened.sol\":16498:16502  true */\n      0x01\n        /* \"SyntheticAssetToken_flattened.sol\":16491:16502  return true */\n      swap2\n      pop\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":16265:16509  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":14196:14278  function decimals() public view virtual returns (uint8) {... */\n    tag_40:\n        /* \"SyntheticAssetToken_flattened.sol\":14245:14250  uint8 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":14269:14271  18 */\n      0x12\n        /* \"SyntheticAssetToken_flattened.sol\":14262:14271  return 18 */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":14196:14278  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":14493:14609  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"SyntheticAssetToken_flattened.sol\":14558:14565  uint256 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":14584:14593  _balances */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":14584:14602  _balances[account] */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":14594:14601  account */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":14584:14602  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SyntheticAssetToken_flattened.sol\":14577:14602  return _balances[account] */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":14493:14609  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":23205:23416  function getLatestBtcPrice() public view returns (int) {... */\n    tag_51:\n        /* \"SyntheticAssetToken_flattened.sol\":23255:23258  int */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":23273:23282  int price */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":23289:23304  btcUsdPriceFeed */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":23289:23320  btcUsdPriceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"SyntheticAssetToken_flattened.sol\":23289:23322  btcUsdPriceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"SyntheticAssetToken_flattened.sol\":23270:23322  (, int price,,,) = btcUsdPriceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":23339:23344  price */\n      dup1\n        /* \"SyntheticAssetToken_flattened.sol\":23332:23344  return price */\n      swap2\n      pop\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":23205:23416  function getLatestBtcPrice() public view returns (int) {... */\n      swap1\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":22747:22767  address public owner */\n    tag_56:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":13470:13563  function symbol() public view virtual returns (string memory) {... */\n    tag_61:\n        /* \"SyntheticAssetToken_flattened.sol\":13517:13530  string memory */\n      0x60\n        /* \"SyntheticAssetToken_flattened.sol\":13549:13556  _symbol */\n      0x04\n        /* \"SyntheticAssetToken_flattened.sol\":13542:13556  return _symbol */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_78\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_78\n      jump\t// in\n    tag_104:\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":13470:13563  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":14804:14982  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"SyntheticAssetToken_flattened.sol\":14873:14877  bool */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":14889:14902  address owner */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":14905:14917  _msgSender() */\n      tag_109\n        /* \"SyntheticAssetToken_flattened.sol\":14905:14915  _msgSender */\n      tag_85\n        /* \"SyntheticAssetToken_flattened.sol\":14905:14917  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"SyntheticAssetToken_flattened.sol\":14889:14917  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":14927:14954  _transfer(owner, to, value) */\n      tag_110\n        /* \"SyntheticAssetToken_flattened.sol\":14937:14942  owner */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":14944:14946  to */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":14948:14953  value */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":14927:14936  _transfer */\n      tag_94\n        /* \"SyntheticAssetToken_flattened.sol\":14927:14954  _transfer(owner, to, value) */\n      jump\t// in\n    tag_110:\n        /* \"SyntheticAssetToken_flattened.sol\":14971:14975  true */\n      0x01\n        /* \"SyntheticAssetToken_flattened.sol\":14964:14975  return true */\n      swap2\n      pop\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":14804:14982  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":23497:24828  function mintWithEther() external payable {... */\n    tag_69:\n        /* \"SyntheticAssetToken_flattened.sol\":23569:23570  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":23557:23566  msg.value */\n      callvalue\n        /* \"SyntheticAssetToken_flattened.sol\":23557:23570  msg.value > 0 */\n      gt\n        /* \"SyntheticAssetToken_flattened.sol\":23549:23603  require(msg.value > 0, \"Must send ETH to mint tokens\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"SyntheticAssetToken_flattened.sol\":23661:23673  int ethPrice */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":23680:23695  ethUsdPriceFeed */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":23680:23711  ethUsdPriceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"SyntheticAssetToken_flattened.sol\":23680:23713  ethUsdPriceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_117:\n        /* \"SyntheticAssetToken_flattened.sol\":23658:23713  (, int ethPrice,,,) = ethUsdPriceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":23760:23772  int btcPrice */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":23779:23794  btcUsdPriceFeed */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":23779:23810  btcUsdPriceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"SyntheticAssetToken_flattened.sol\":23779:23812  btcUsdPriceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_120:\n        /* \"SyntheticAssetToken_flattened.sol\":23757:23812  (, int btcPrice,,,) = btcUsdPriceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":23875:23876  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":23864:23872  ethPrice */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":23864:23876  ethPrice > 0 */\n      sgt\n        /* \"SyntheticAssetToken_flattened.sol\":23864:23892  ethPrice > 0 && btcPrice > 0 */\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":23891:23892  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":23880:23888  btcPrice */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":23880:23892  btcPrice > 0 */\n      sgt\n        /* \"SyntheticAssetToken_flattened.sol\":23864:23892  ethPrice > 0 && btcPrice > 0 */\n    tag_121:\n        /* \"SyntheticAssetToken_flattened.sol\":23856:23917  require(ethPrice > 0 && btcPrice > 0, \"Invalid oracle price\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"SyntheticAssetToken_flattened.sol\":23990:24010  uint256 ethPriceUint */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":24021:24029  ethPrice */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":23990:24030  uint256 ethPriceUint = uint256(ethPrice) */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":24040:24060  uint256 btcPriceUint */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":24071:24079  btcPrice */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":24040:24080  uint256 btcPriceUint = uint256(btcPrice) */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":24356:24388  uint256 depositValueInUsd_scaled */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":24420:24424  1e18 */\n      0x0de0b6b3a7640000\n        /* \"SyntheticAssetToken_flattened.sol\":24404:24416  ethPriceUint */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":24392:24401  msg.value */\n      callvalue\n        /* \"SyntheticAssetToken_flattened.sol\":24392:24416  msg.value * ethPriceUint */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"SyntheticAssetToken_flattened.sol\":24391:24424  (msg.value * ethPriceUint) / 1e18 */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"SyntheticAssetToken_flattened.sol\":24356:24424  uint256 depositValueInUsd_scaled = (msg.value * ethPriceUint) / 1e18 */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":24637:24661  uint256 btcAmount_scaled */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":24706:24718  btcPriceUint */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":24693:24701  10 ** 10 */\n      0x02540be400\n        /* \"SyntheticAssetToken_flattened.sol\":24665:24689  depositValueInUsd_scaled */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":24665:24702  depositValueInUsd_scaled * (10 ** 10) */\n      tag_129\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_129:\n        /* \"SyntheticAssetToken_flattened.sol\":24664:24718  (depositValueInUsd_scaled * (10 ** 10)) / btcPriceUint */\n      tag_130\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_130:\n        /* \"SyntheticAssetToken_flattened.sol\":24637:24718  uint256 btcAmount_scaled = (depositValueInUsd_scaled * (10 ** 10)) / btcPriceUint */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":24786:24821  _mint(msg.sender, btcAmount_scaled) */\n      tag_131\n        /* \"SyntheticAssetToken_flattened.sol\":24792:24802  msg.sender */\n      caller\n        /* \"SyntheticAssetToken_flattened.sol\":24804:24820  btcAmount_scaled */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":24786:24791  _mint */\n      tag_132\n        /* \"SyntheticAssetToken_flattened.sol\":24786:24821  _mint(msg.sender, btcAmount_scaled) */\n      jump\t// in\n    tag_131:\n        /* \"SyntheticAssetToken_flattened.sol\":23539:24828  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":23497:24828  function mintWithEther() external payable {... */\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":15040:15180  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"SyntheticAssetToken_flattened.sol\":15120:15127  uint256 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":15146:15157  _allowances */\n      0x01\n        /* \"SyntheticAssetToken_flattened.sol\":15146:15164  _allowances[owner] */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":15158:15163  owner */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":15146:15164  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SyntheticAssetToken_flattened.sol\":15146:15173  _allowances[owner][spender] */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":15165:15172  spender */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":15146:15173  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SyntheticAssetToken_flattened.sol\":15139:15173  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":15040:15180  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":4816:4912  function _msgSender() internal view virtual returns (address) {... */\n    tag_85:\n        /* \"SyntheticAssetToken_flattened.sol\":4869:4876  address */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":4895:4905  msg.sender */\n      caller\n        /* \"SyntheticAssetToken_flattened.sol\":4888:4905  return msg.sender */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":4816:4912  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":20215:20343  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_87:\n        /* \"SyntheticAssetToken_flattened.sol\":20299:20336  _approve(owner, spender, value, true) */\n      tag_136\n        /* \"SyntheticAssetToken_flattened.sol\":20308:20313  owner */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":20315:20322  spender */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":20324:20329  value */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":20331:20335  true */\n      0x01\n        /* \"SyntheticAssetToken_flattened.sol\":20299:20307  _approve */\n      tag_137\n        /* \"SyntheticAssetToken_flattened.sol\":20299:20336  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_136:\n        /* \"SyntheticAssetToken_flattened.sol\":20215:20343  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":21904:22380  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_92:\n        /* \"SyntheticAssetToken_flattened.sol\":22003:22027  uint256 currentAllowance */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":22030:22055  allowance(owner, spender) */\n      tag_139\n        /* \"SyntheticAssetToken_flattened.sol\":22040:22045  owner */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":22047:22054  spender */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":22030:22039  allowance */\n      tag_74\n        /* \"SyntheticAssetToken_flattened.sol\":22030:22055  allowance(owner, spender) */\n      jump\t// in\n    tag_139:\n        /* \"SyntheticAssetToken_flattened.sol\":22003:22055  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":22088:22105  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"SyntheticAssetToken_flattened.sol\":22069:22085  currentAllowance */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":22069:22105  currentAllowance < type(uint256).max */\n      lt\n        /* \"SyntheticAssetToken_flattened.sol\":22065:22374  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":22144:22149  value */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":22125:22141  currentAllowance */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":22125:22149  currentAllowance < value */\n      lt\n        /* \"SyntheticAssetToken_flattened.sol\":22121:22251  if (currentAllowance < value) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":22203:22210  spender */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":22212:22228  currentAllowance */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":22230:22235  value */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":22176:22236  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SyntheticAssetToken_flattened.sol\":22121:22251  if (currentAllowance < value) {... */\n    tag_141:\n        /* \"SyntheticAssetToken_flattened.sol\":22292:22349  _approve(owner, spender, currentAllowance - value, false) */\n      tag_144\n        /* \"SyntheticAssetToken_flattened.sol\":22301:22306  owner */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":22308:22315  spender */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":22336:22341  value */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":22317:22333  currentAllowance */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":22317:22341  currentAllowance - value */\n      sub\n        /* \"SyntheticAssetToken_flattened.sol\":22343:22348  false */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":22292:22300  _approve */\n      tag_137\n        /* \"SyntheticAssetToken_flattened.sol\":22292:22349  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_144:\n        /* \"SyntheticAssetToken_flattened.sol\":22065:22374  if (currentAllowance < type(uint256).max) {... */\n    tag_140:\n        /* \"SyntheticAssetToken_flattened.sol\":21993:22380  {... */\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":21904:22380  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":16882:17182  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_94:\n        /* \"SyntheticAssetToken_flattened.sol\":16981:16982  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":16965:16983  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":16965:16969  from */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":16965:16983  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SyntheticAssetToken_flattened.sol\":16961:17047  if (from == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":17033:17034  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":17006:17036  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SyntheticAssetToken_flattened.sol\":16961:17047  if (from == address(0)) {... */\n    tag_146:\n        /* \"SyntheticAssetToken_flattened.sol\":17074:17075  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":17060:17076  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":17060:17062  to */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":17060:17076  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SyntheticAssetToken_flattened.sol\":17056:17142  if (to == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":17128:17129  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":17099:17131  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SyntheticAssetToken_flattened.sol\":17056:17142  if (to == address(0)) {... */\n    tag_148:\n        /* \"SyntheticAssetToken_flattened.sol\":17151:17175  _update(from, to, value) */\n      tag_150\n        /* \"SyntheticAssetToken_flattened.sol\":17159:17163  from */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":17165:17167  to */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":17169:17174  value */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":17151:17158  _update */\n      tag_151\n        /* \"SyntheticAssetToken_flattened.sol\":17151:17175  _update(from, to, value) */\n      jump\t// in\n    tag_150:\n        /* \"SyntheticAssetToken_flattened.sol\":16882:17182  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":18947:19155  function _mint(address account, uint256 value) internal {... */\n    tag_132:\n        /* \"SyntheticAssetToken_flattened.sol\":19036:19037  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":19017:19038  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":19017:19024  account */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":19017:19038  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SyntheticAssetToken_flattened.sol\":19013:19104  if (account == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":19090:19091  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":19061:19093  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SyntheticAssetToken_flattened.sol\":19013:19104  if (account == address(0)) {... */\n    tag_153:\n        /* \"SyntheticAssetToken_flattened.sol\":19113:19148  _update(address(0), account, value) */\n      tag_155\n        /* \"SyntheticAssetToken_flattened.sol\":19129:19130  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":19133:19140  account */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":19142:19147  value */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":19113:19120  _update */\n      tag_151\n        /* \"SyntheticAssetToken_flattened.sol\":19113:19148  _update(address(0), account, value) */\n      jump\t// in\n    tag_155:\n        /* \"SyntheticAssetToken_flattened.sol\":18947:19155  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":21190:21622  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_137:\n        /* \"SyntheticAssetToken_flattened.sol\":21319:21320  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":21302:21321  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":21302:21307  owner */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":21302:21321  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SyntheticAssetToken_flattened.sol\":21298:21387  if (owner == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":21373:21374  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":21344:21376  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SyntheticAssetToken_flattened.sol\":21298:21387  if (owner == address(0)) {... */\n    tag_157:\n        /* \"SyntheticAssetToken_flattened.sol\":21419:21420  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":21400:21421  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":21400:21407  spender */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":21400:21421  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SyntheticAssetToken_flattened.sol\":21396:21486  if (spender == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":21472:21473  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":21444:21475  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SyntheticAssetToken_flattened.sol\":21396:21486  if (spender == address(0)) {... */\n    tag_159:\n        /* \"SyntheticAssetToken_flattened.sol\":21525:21530  value */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":21495:21506  _allowances */\n      0x01\n        /* \"SyntheticAssetToken_flattened.sol\":21495:21513  _allowances[owner] */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":21507:21512  owner */\n      dup7\n        /* \"SyntheticAssetToken_flattened.sol\":21495:21513  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SyntheticAssetToken_flattened.sol\":21495:21522  _allowances[owner][spender] */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":21514:21521  spender */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":21495:21522  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SyntheticAssetToken_flattened.sol\":21495:21530  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":21544:21553  emitEvent */\n      dup1\n        /* \"SyntheticAssetToken_flattened.sol\":21540:21616  if (emitEvent) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":21590:21597  spender */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":21574:21605  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":21583:21588  owner */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":21574:21605  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"SyntheticAssetToken_flattened.sol\":21599:21604  value */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":21574:21605  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SyntheticAssetToken_flattened.sol\":21540:21616  if (emitEvent) {... */\n    tag_161:\n        /* \"SyntheticAssetToken_flattened.sol\":21190:21622  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SyntheticAssetToken_flattened.sol\":17497:18604  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_151:\n        /* \"SyntheticAssetToken_flattened.sol\":17602:17603  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":17586:17604  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":17586:17590  from */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":17586:17604  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SyntheticAssetToken_flattened.sol\":17582:18122  if (from == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":17738:17743  value */\n      dup1\n        /* \"SyntheticAssetToken_flattened.sol\":17722:17734  _totalSupply */\n      0x02\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":17722:17743  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":17582:18122  if (from == address(0)) {... */\n      jump(tag_167)\n    tag_164:\n        /* \"SyntheticAssetToken_flattened.sol\":17774:17793  uint256 fromBalance */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":17796:17805  _balances */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":17796:17811  _balances[from] */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":17806:17810  from */\n      dup6\n        /* \"SyntheticAssetToken_flattened.sol\":17796:17811  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SyntheticAssetToken_flattened.sol\":17774:17811  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":17843:17848  value */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":17829:17840  fromBalance */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":17829:17848  fromBalance < value */\n      lt\n        /* \"SyntheticAssetToken_flattened.sol\":17825:17940  if (fromBalance < value) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":17900:17904  from */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":17906:17917  fromBalance */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":17919:17924  value */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":17875:17925  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SyntheticAssetToken_flattened.sol\":17825:17940  if (fromBalance < value) {... */\n    tag_168:\n        /* \"SyntheticAssetToken_flattened.sol\":18092:18097  value */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":18078:18089  fromBalance */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":18078:18097  fromBalance - value */\n      sub\n        /* \"SyntheticAssetToken_flattened.sol\":18060:18069  _balances */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":18060:18075  _balances[from] */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":18070:18074  from */\n      dup7\n        /* \"SyntheticAssetToken_flattened.sol\":18060:18075  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SyntheticAssetToken_flattened.sol\":18060:18097  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":17760:18122  {... */\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":17582:18122  if (from == address(0)) {... */\n    tag_167:\n        /* \"SyntheticAssetToken_flattened.sol\":18150:18151  0 */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":18136:18152  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":18136:18138  to */\n      dup3\n        /* \"SyntheticAssetToken_flattened.sol\":18136:18152  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SyntheticAssetToken_flattened.sol\":18132:18557  if (to == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"SyntheticAssetToken_flattened.sol\":18315:18320  value */\n      dup1\n        /* \"SyntheticAssetToken_flattened.sol\":18299:18311  _totalSupply */\n      0x02\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":18299:18320  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":18132:18557  if (to == address(0)) {... */\n      jump(tag_171)\n    tag_170:\n        /* \"SyntheticAssetToken_flattened.sol\":18527:18532  value */\n      dup1\n        /* \"SyntheticAssetToken_flattened.sol\":18510:18519  _balances */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":18510:18523  _balances[to] */\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":18520:18522  to */\n      dup5\n        /* \"SyntheticAssetToken_flattened.sol\":18510:18523  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SyntheticAssetToken_flattened.sol\":18510:18532  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SyntheticAssetToken_flattened.sol\":18132:18557  if (to == address(0)) {... */\n    tag_171:\n        /* \"SyntheticAssetToken_flattened.sol\":18587:18589  to */\n      dup2\n        /* \"SyntheticAssetToken_flattened.sol\":18572:18597  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SyntheticAssetToken_flattened.sol\":18581:18585  from */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":18572:18597  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"SyntheticAssetToken_flattened.sol\":18591:18596  value */\n      dup4\n        /* \"SyntheticAssetToken_flattened.sol\":18572:18597  Transfer(from, to, value) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SyntheticAssetToken_flattened.sol\":17497:18604  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_173:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_174:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_175:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_176:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_177:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_215\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_173\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":711:782   */\n      tag_216\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_174\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_217\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_175\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":881:910   */\n      tag_218\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_176\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_19:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_220\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_177\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_179:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_181:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_182:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_226\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_181\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_183:\n        /* \"#utility.yul\":1876:1900   */\n      tag_228\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_182\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_229:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_184:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_231\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_183\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_185:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_186:\n        /* \"#utility.yul\":2232:2256   */\n      tag_234\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_185\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_235:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_187:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_237\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_186\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_23:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_240\n      tag_179\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2525:2644   */\n    tag_239:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_241\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_184\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_242\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_187\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_188:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_189:\n        /* \"#utility.yul\":3089:3110   */\n      tag_245\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_188\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_26:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_247\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_189\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_190:\n        /* \"#utility.yul\":3426:3450   */\n      tag_249\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_185\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_31:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_251\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_190\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_35:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_254\n      tag_179\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3801:3920   */\n    tag_253:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_255\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_184\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_256\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_184\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_257\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_187\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_191:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_192:\n        /* \"#utility.yul\":4491:4513   */\n      tag_260\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_191\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_42:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_262\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_192\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_46:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_265\n      tag_179\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4822:4941   */\n    tag_264:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_266\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_184\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5157   */\n    tag_193:\n        /* \"#utility.yul\":5117:5124   */\n      0x00\n        /* \"#utility.yul\":5146:5151   */\n      dup2\n        /* \"#utility.yul\":5135:5151   */\n      swap1\n      pop\n        /* \"#utility.yul\":5081:5157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5163:5278   */\n    tag_194:\n        /* \"#utility.yul\":5248:5271   */\n      tag_269\n        /* \"#utility.yul\":5265:5270   */\n      dup2\n        /* \"#utility.yul\":5248:5271   */\n      tag_193\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5243:5246   */\n      dup3\n        /* \"#utility.yul\":5236:5272   */\n      mstore\n        /* \"#utility.yul\":5163:5278   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5502   */\n    tag_53:\n        /* \"#utility.yul\":5375:5379   */\n      0x00\n        /* \"#utility.yul\":5413:5415   */\n      0x20\n        /* \"#utility.yul\":5402:5411   */\n      dup3\n        /* \"#utility.yul\":5398:5416   */\n      add\n        /* \"#utility.yul\":5390:5416   */\n      swap1\n      pop\n        /* \"#utility.yul\":5426:5495   */\n      tag_271\n        /* \"#utility.yul\":5492:5493   */\n      0x00\n        /* \"#utility.yul\":5481:5490   */\n      dup4\n        /* \"#utility.yul\":5477:5494   */\n      add\n        /* \"#utility.yul\":5468:5474   */\n      dup5\n        /* \"#utility.yul\":5426:5495   */\n      tag_194\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5284:5502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5508:5626   */\n    tag_195:\n        /* \"#utility.yul\":5595:5619   */\n      tag_273\n        /* \"#utility.yul\":5613:5618   */\n      dup2\n        /* \"#utility.yul\":5595:5619   */\n      tag_182\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5590:5593   */\n      dup3\n        /* \"#utility.yul\":5583:5620   */\n      mstore\n        /* \"#utility.yul\":5508:5626   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5632:5854   */\n    tag_58:\n        /* \"#utility.yul\":5725:5729   */\n      0x00\n        /* \"#utility.yul\":5763:5765   */\n      0x20\n        /* \"#utility.yul\":5752:5761   */\n      dup3\n        /* \"#utility.yul\":5748:5766   */\n      add\n        /* \"#utility.yul\":5740:5766   */\n      swap1\n      pop\n        /* \"#utility.yul\":5776:5847   */\n      tag_275\n        /* \"#utility.yul\":5844:5845   */\n      0x00\n        /* \"#utility.yul\":5833:5842   */\n      dup4\n        /* \"#utility.yul\":5829:5846   */\n      add\n        /* \"#utility.yul\":5820:5826   */\n      dup5\n        /* \"#utility.yul\":5776:5847   */\n      tag_195\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5632:5854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5860:6334   */\n    tag_73:\n        /* \"#utility.yul\":5928:5934   */\n      0x00\n        /* \"#utility.yul\":5936:5942   */\n      0x00\n        /* \"#utility.yul\":5985:5987   */\n      0x40\n        /* \"#utility.yul\":5973:5982   */\n      dup4\n        /* \"#utility.yul\":5964:5971   */\n      dup6\n        /* \"#utility.yul\":5960:5983   */\n      sub\n        /* \"#utility.yul\":5956:5988   */\n      slt\n        /* \"#utility.yul\":5953:6072   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":5991:6070   */\n      tag_278\n      tag_179\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5953:6072   */\n    tag_277:\n        /* \"#utility.yul\":6111:6112   */\n      0x00\n        /* \"#utility.yul\":6136:6189   */\n      tag_279\n        /* \"#utility.yul\":6181:6188   */\n      dup6\n        /* \"#utility.yul\":6172:6178   */\n      dup3\n        /* \"#utility.yul\":6161:6170   */\n      dup7\n        /* \"#utility.yul\":6157:6179   */\n      add\n        /* \"#utility.yul\":6136:6189   */\n      tag_184\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6126:6189   */\n      swap3\n      pop\n        /* \"#utility.yul\":6082:6199   */\n      pop\n        /* \"#utility.yul\":6238:6240   */\n      0x20\n        /* \"#utility.yul\":6264:6317   */\n      tag_280\n        /* \"#utility.yul\":6309:6316   */\n      dup6\n        /* \"#utility.yul\":6300:6306   */\n      dup3\n        /* \"#utility.yul\":6289:6298   */\n      dup7\n        /* \"#utility.yul\":6285:6307   */\n      add\n        /* \"#utility.yul\":6264:6317   */\n      tag_184\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6254:6317   */\n      swap2\n      pop\n        /* \"#utility.yul\":6209:6327   */\n      pop\n        /* \"#utility.yul\":5860:6334   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6340:6520   */\n    tag_196:\n        /* \"#utility.yul\":6388:6465   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6385:6386   */\n      0x00\n        /* \"#utility.yul\":6378:6466   */\n      mstore\n        /* \"#utility.yul\":6485:6489   */\n      0x22\n        /* \"#utility.yul\":6482:6483   */\n      0x04\n        /* \"#utility.yul\":6475:6490   */\n      mstore\n        /* \"#utility.yul\":6509:6513   */\n      0x24\n        /* \"#utility.yul\":6506:6507   */\n      0x00\n        /* \"#utility.yul\":6499:6514   */\n      revert\n        /* \"#utility.yul\":6526:6846   */\n    tag_78:\n        /* \"#utility.yul\":6570:6576   */\n      0x00\n        /* \"#utility.yul\":6607:6608   */\n      0x02\n        /* \"#utility.yul\":6601:6605   */\n      dup3\n        /* \"#utility.yul\":6597:6609   */\n      div\n        /* \"#utility.yul\":6587:6609   */\n      swap1\n      pop\n        /* \"#utility.yul\":6654:6655   */\n      0x01\n        /* \"#utility.yul\":6648:6652   */\n      dup3\n        /* \"#utility.yul\":6644:6656   */\n      and\n        /* \"#utility.yul\":6675:6693   */\n      dup1\n        /* \"#utility.yul\":6665:6746   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":6731:6735   */\n      0x7f\n        /* \"#utility.yul\":6723:6729   */\n      dup3\n        /* \"#utility.yul\":6719:6736   */\n      and\n        /* \"#utility.yul\":6709:6736   */\n      swap2\n      pop\n        /* \"#utility.yul\":6665:6746   */\n    tag_283:\n        /* \"#utility.yul\":6793:6795   */\n      0x20\n        /* \"#utility.yul\":6785:6791   */\n      dup3\n        /* \"#utility.yul\":6782:6796   */\n      lt\n        /* \"#utility.yul\":6762:6780   */\n      dup2\n        /* \"#utility.yul\":6759:6797   */\n      sub\n        /* \"#utility.yul\":6756:6840   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":6812:6830   */\n      tag_285\n      tag_196\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6756:6840   */\n    tag_284:\n        /* \"#utility.yul\":6577:6846   */\n      pop\n        /* \"#utility.yul\":6526:6846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6852:6957   */\n    tag_197:\n        /* \"#utility.yul\":6888:6895   */\n      0x00\n        /* \"#utility.yul\":6928:6950   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":6921:6926   */\n      dup3\n        /* \"#utility.yul\":6917:6951   */\n      and\n        /* \"#utility.yul\":6906:6951   */\n      swap1\n      pop\n        /* \"#utility.yul\":6852:6957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6963:7083   */\n    tag_198:\n        /* \"#utility.yul\":7035:7058   */\n      tag_288\n        /* \"#utility.yul\":7052:7057   */\n      dup2\n        /* \"#utility.yul\":7035:7058   */\n      tag_197\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7028:7033   */\n      dup2\n        /* \"#utility.yul\":7025:7059   */\n      eq\n        /* \"#utility.yul\":7015:7077   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":7073:7074   */\n      0x00\n        /* \"#utility.yul\":7070:7071   */\n      0x00\n        /* \"#utility.yul\":7063:7075   */\n      revert\n        /* \"#utility.yul\":7015:7077   */\n    tag_289:\n        /* \"#utility.yul\":6963:7083   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7089:7230   */\n    tag_199:\n        /* \"#utility.yul\":7145:7150   */\n      0x00\n        /* \"#utility.yul\":7176:7182   */\n      dup2\n        /* \"#utility.yul\":7170:7183   */\n      mload\n        /* \"#utility.yul\":7161:7183   */\n      swap1\n      pop\n        /* \"#utility.yul\":7192:7224   */\n      tag_291\n        /* \"#utility.yul\":7218:7223   */\n      dup2\n        /* \"#utility.yul\":7192:7224   */\n      tag_198\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7089:7230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7236:7356   */\n    tag_200:\n        /* \"#utility.yul\":7308:7331   */\n      tag_293\n        /* \"#utility.yul\":7325:7330   */\n      dup2\n        /* \"#utility.yul\":7308:7331   */\n      tag_193\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7301:7306   */\n      dup2\n        /* \"#utility.yul\":7298:7332   */\n      eq\n        /* \"#utility.yul\":7288:7350   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":7346:7347   */\n      0x00\n        /* \"#utility.yul\":7343:7344   */\n      0x00\n        /* \"#utility.yul\":7336:7348   */\n      revert\n        /* \"#utility.yul\":7288:7350   */\n    tag_294:\n        /* \"#utility.yul\":7236:7356   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7362:7503   */\n    tag_201:\n        /* \"#utility.yul\":7418:7423   */\n      0x00\n        /* \"#utility.yul\":7449:7455   */\n      dup2\n        /* \"#utility.yul\":7443:7456   */\n      mload\n        /* \"#utility.yul\":7434:7456   */\n      swap1\n      pop\n        /* \"#utility.yul\":7465:7497   */\n      tag_296\n        /* \"#utility.yul\":7491:7496   */\n      dup2\n        /* \"#utility.yul\":7465:7497   */\n      tag_200\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7362:7503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7509:7652   */\n    tag_202:\n        /* \"#utility.yul\":7566:7571   */\n      0x00\n        /* \"#utility.yul\":7597:7603   */\n      dup2\n        /* \"#utility.yul\":7591:7604   */\n      mload\n        /* \"#utility.yul\":7582:7604   */\n      swap1\n      pop\n        /* \"#utility.yul\":7613:7646   */\n      tag_298\n        /* \"#utility.yul\":7640:7645   */\n      dup2\n        /* \"#utility.yul\":7613:7646   */\n      tag_186\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7509:7652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7658:8629   */\n    tag_101:\n        /* \"#utility.yul\":7761:7767   */\n      0x00\n        /* \"#utility.yul\":7769:7775   */\n      0x00\n        /* \"#utility.yul\":7777:7783   */\n      0x00\n        /* \"#utility.yul\":7785:7791   */\n      0x00\n        /* \"#utility.yul\":7793:7799   */\n      0x00\n        /* \"#utility.yul\":7842:7845   */\n      0xa0\n        /* \"#utility.yul\":7830:7839   */\n      dup7\n        /* \"#utility.yul\":7821:7828   */\n      dup9\n        /* \"#utility.yul\":7817:7840   */\n      sub\n        /* \"#utility.yul\":7813:7846   */\n      slt\n        /* \"#utility.yul\":7810:7930   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":7849:7928   */\n      tag_301\n      tag_179\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7810:7930   */\n    tag_300:\n        /* \"#utility.yul\":7969:7970   */\n      0x00\n        /* \"#utility.yul\":7994:8057   */\n      tag_302\n        /* \"#utility.yul\":8049:8056   */\n      dup9\n        /* \"#utility.yul\":8040:8046   */\n      dup3\n        /* \"#utility.yul\":8029:8038   */\n      dup10\n        /* \"#utility.yul\":8025:8047   */\n      add\n        /* \"#utility.yul\":7994:8057   */\n      tag_199\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7984:8057   */\n      swap6\n      pop\n        /* \"#utility.yul\":7940:8067   */\n      pop\n        /* \"#utility.yul\":8106:8108   */\n      0x20\n        /* \"#utility.yul\":8132:8195   */\n      tag_303\n        /* \"#utility.yul\":8187:8194   */\n      dup9\n        /* \"#utility.yul\":8178:8184   */\n      dup3\n        /* \"#utility.yul\":8167:8176   */\n      dup10\n        /* \"#utility.yul\":8163:8185   */\n      add\n        /* \"#utility.yul\":8132:8195   */\n      tag_201\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":8122:8195   */\n      swap5\n      pop\n        /* \"#utility.yul\":8077:8205   */\n      pop\n        /* \"#utility.yul\":8244:8246   */\n      0x40\n        /* \"#utility.yul\":8270:8334   */\n      tag_304\n        /* \"#utility.yul\":8326:8333   */\n      dup9\n        /* \"#utility.yul\":8317:8323   */\n      dup3\n        /* \"#utility.yul\":8306:8315   */\n      dup10\n        /* \"#utility.yul\":8302:8324   */\n      add\n        /* \"#utility.yul\":8270:8334   */\n      tag_202\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8260:8334   */\n      swap4\n      pop\n        /* \"#utility.yul\":8215:8344   */\n      pop\n        /* \"#utility.yul\":8383:8385   */\n      0x60\n        /* \"#utility.yul\":8409:8473   */\n      tag_305\n        /* \"#utility.yul\":8465:8472   */\n      dup9\n        /* \"#utility.yul\":8456:8462   */\n      dup3\n        /* \"#utility.yul\":8445:8454   */\n      dup10\n        /* \"#utility.yul\":8441:8463   */\n      add\n        /* \"#utility.yul\":8409:8473   */\n      tag_202\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8399:8473   */\n      swap3\n      pop\n        /* \"#utility.yul\":8354:8483   */\n      pop\n        /* \"#utility.yul\":8522:8525   */\n      0x80\n        /* \"#utility.yul\":8549:8612   */\n      tag_306\n        /* \"#utility.yul\":8604:8611   */\n      dup9\n        /* \"#utility.yul\":8595:8601   */\n      dup3\n        /* \"#utility.yul\":8584:8593   */\n      dup10\n        /* \"#utility.yul\":8580:8602   */\n      add\n        /* \"#utility.yul\":8549:8612   */\n      tag_199\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8539:8612   */\n      swap2\n      pop\n        /* \"#utility.yul\":8493:8622   */\n      pop\n        /* \"#utility.yul\":7658:8629   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8635:8813   */\n    tag_203:\n        /* \"#utility.yul\":8775:8805   */\n      0x4d7573742073656e642045544820746f206d696e7420746f6b656e7300000000\n        /* \"#utility.yul\":8771:8772   */\n      0x00\n        /* \"#utility.yul\":8763:8769   */\n      dup3\n        /* \"#utility.yul\":8759:8773   */\n      add\n        /* \"#utility.yul\":8752:8806   */\n      mstore\n        /* \"#utility.yul\":8635:8813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8819:9185   */\n    tag_204:\n        /* \"#utility.yul\":8961:8964   */\n      0x00\n        /* \"#utility.yul\":8982:9049   */\n      tag_309\n        /* \"#utility.yul\":9046:9048   */\n      0x1c\n        /* \"#utility.yul\":9041:9044   */\n      dup4\n        /* \"#utility.yul\":8982:9049   */\n      tag_174\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8975:9049   */\n      swap2\n      pop\n        /* \"#utility.yul\":9058:9151   */\n      tag_310\n        /* \"#utility.yul\":9147:9150   */\n      dup3\n        /* \"#utility.yul\":9058:9151   */\n      tag_203\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9176:9178   */\n      0x20\n        /* \"#utility.yul\":9171:9174   */\n      dup3\n        /* \"#utility.yul\":9167:9179   */\n      add\n        /* \"#utility.yul\":9160:9179   */\n      swap1\n      pop\n        /* \"#utility.yul\":8819:9185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9191:9610   */\n    tag_114:\n        /* \"#utility.yul\":9357:9361   */\n      0x00\n        /* \"#utility.yul\":9395:9397   */\n      0x20\n        /* \"#utility.yul\":9384:9393   */\n      dup3\n        /* \"#utility.yul\":9380:9398   */\n      add\n        /* \"#utility.yul\":9372:9398   */\n      swap1\n      pop\n        /* \"#utility.yul\":9444:9453   */\n      dup2\n        /* \"#utility.yul\":9438:9442   */\n      dup2\n        /* \"#utility.yul\":9434:9454   */\n      sub\n        /* \"#utility.yul\":9430:9431   */\n      0x00\n        /* \"#utility.yul\":9419:9428   */\n      dup4\n        /* \"#utility.yul\":9415:9432   */\n      add\n        /* \"#utility.yul\":9408:9455   */\n      mstore\n        /* \"#utility.yul\":9472:9603   */\n      tag_312\n        /* \"#utility.yul\":9598:9602   */\n      dup2\n        /* \"#utility.yul\":9472:9603   */\n      tag_204\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":9464:9603   */\n      swap1\n      pop\n        /* \"#utility.yul\":9191:9610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9616:9786   */\n    tag_205:\n        /* \"#utility.yul\":9756:9778   */\n      0x496e76616c6964206f7261636c65207072696365000000000000000000000000\n        /* \"#utility.yul\":9752:9753   */\n      0x00\n        /* \"#utility.yul\":9744:9750   */\n      dup3\n        /* \"#utility.yul\":9740:9754   */\n      add\n        /* \"#utility.yul\":9733:9779   */\n      mstore\n        /* \"#utility.yul\":9616:9786   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9792:10158   */\n    tag_206:\n        /* \"#utility.yul\":9934:9937   */\n      0x00\n        /* \"#utility.yul\":9955:10022   */\n      tag_315\n        /* \"#utility.yul\":10019:10021   */\n      0x14\n        /* \"#utility.yul\":10014:10017   */\n      dup4\n        /* \"#utility.yul\":9955:10022   */\n      tag_174\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9948:10022   */\n      swap2\n      pop\n        /* \"#utility.yul\":10031:10124   */\n      tag_316\n        /* \"#utility.yul\":10120:10123   */\n      dup3\n        /* \"#utility.yul\":10031:10124   */\n      tag_205\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10149:10151   */\n      0x20\n        /* \"#utility.yul\":10144:10147   */\n      dup3\n        /* \"#utility.yul\":10140:10152   */\n      add\n        /* \"#utility.yul\":10133:10152   */\n      swap1\n      pop\n        /* \"#utility.yul\":9792:10158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10164:10583   */\n    tag_124:\n        /* \"#utility.yul\":10330:10334   */\n      0x00\n        /* \"#utility.yul\":10368:10370   */\n      0x20\n        /* \"#utility.yul\":10357:10366   */\n      dup3\n        /* \"#utility.yul\":10353:10371   */\n      add\n        /* \"#utility.yul\":10345:10371   */\n      swap1\n      pop\n        /* \"#utility.yul\":10417:10426   */\n      dup2\n        /* \"#utility.yul\":10411:10415   */\n      dup2\n        /* \"#utility.yul\":10407:10427   */\n      sub\n        /* \"#utility.yul\":10403:10404   */\n      0x00\n        /* \"#utility.yul\":10392:10401   */\n      dup4\n        /* \"#utility.yul\":10388:10405   */\n      add\n        /* \"#utility.yul\":10381:10428   */\n      mstore\n        /* \"#utility.yul\":10445:10576   */\n      tag_318\n        /* \"#utility.yul\":10571:10575   */\n      dup2\n        /* \"#utility.yul\":10445:10576   */\n      tag_206\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":10437:10576   */\n      swap1\n      pop\n        /* \"#utility.yul\":10164:10583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10589:10769   */\n    tag_207:\n        /* \"#utility.yul\":10637:10714   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10634:10635   */\n      0x00\n        /* \"#utility.yul\":10627:10715   */\n      mstore\n        /* \"#utility.yul\":10734:10738   */\n      0x11\n        /* \"#utility.yul\":10731:10732   */\n      0x04\n        /* \"#utility.yul\":10724:10739   */\n      mstore\n        /* \"#utility.yul\":10758:10762   */\n      0x24\n        /* \"#utility.yul\":10755:10756   */\n      0x00\n        /* \"#utility.yul\":10748:10763   */\n      revert\n        /* \"#utility.yul\":10775:11185   */\n    tag_126:\n        /* \"#utility.yul\":10815:10822   */\n      0x00\n        /* \"#utility.yul\":10838:10858   */\n      tag_321\n        /* \"#utility.yul\":10856:10857   */\n      dup3\n        /* \"#utility.yul\":10838:10858   */\n      tag_185\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":10833:10858   */\n      swap2\n      pop\n        /* \"#utility.yul\":10872:10892   */\n      tag_322\n        /* \"#utility.yul\":10890:10891   */\n      dup4\n        /* \"#utility.yul\":10872:10892   */\n      tag_185\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":10867:10892   */\n      swap3\n      pop\n        /* \"#utility.yul\":10927:10928   */\n      dup3\n        /* \"#utility.yul\":10924:10925   */\n      dup3\n        /* \"#utility.yul\":10920:10929   */\n      mul\n        /* \"#utility.yul\":10949:10979   */\n      tag_323\n        /* \"#utility.yul\":10967:10978   */\n      dup2\n        /* \"#utility.yul\":10949:10979   */\n      tag_185\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":10938:10979   */\n      swap2\n      pop\n        /* \"#utility.yul\":11128:11129   */\n      dup3\n        /* \"#utility.yul\":11119:11126   */\n      dup3\n        /* \"#utility.yul\":11115:11130   */\n      div\n        /* \"#utility.yul\":11112:11113   */\n      dup5\n        /* \"#utility.yul\":11109:11131   */\n      eq\n        /* \"#utility.yul\":11089:11090   */\n      dup4\n        /* \"#utility.yul\":11082:11091   */\n      iszero\n        /* \"#utility.yul\":11062:11145   */\n      or\n        /* \"#utility.yul\":11039:11178   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":11158:11176   */\n      tag_325\n      tag_207\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11039:11178   */\n    tag_324:\n        /* \"#utility.yul\":10823:11185   */\n      pop\n        /* \"#utility.yul\":10775:11185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11191:11371   */\n    tag_208:\n        /* \"#utility.yul\":11239:11316   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11236:11237   */\n      0x00\n        /* \"#utility.yul\":11229:11317   */\n      mstore\n        /* \"#utility.yul\":11336:11340   */\n      0x12\n        /* \"#utility.yul\":11333:11334   */\n      0x04\n        /* \"#utility.yul\":11326:11341   */\n      mstore\n        /* \"#utility.yul\":11360:11364   */\n      0x24\n        /* \"#utility.yul\":11357:11358   */\n      0x00\n        /* \"#utility.yul\":11350:11365   */\n      revert\n        /* \"#utility.yul\":11377:11562   */\n    tag_128:\n        /* \"#utility.yul\":11417:11418   */\n      0x00\n        /* \"#utility.yul\":11434:11454   */\n      tag_328\n        /* \"#utility.yul\":11452:11453   */\n      dup3\n        /* \"#utility.yul\":11434:11454   */\n      tag_185\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":11429:11454   */\n      swap2\n      pop\n        /* \"#utility.yul\":11468:11488   */\n      tag_329\n        /* \"#utility.yul\":11486:11487   */\n      dup4\n        /* \"#utility.yul\":11468:11488   */\n      tag_185\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":11463:11488   */\n      swap3\n      pop\n        /* \"#utility.yul\":11507:11508   */\n      dup3\n        /* \"#utility.yul\":11497:11532   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":11512:11530   */\n      tag_331\n      tag_208\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":11497:11532   */\n    tag_330:\n        /* \"#utility.yul\":11554:11555   */\n      dup3\n        /* \"#utility.yul\":11551:11552   */\n      dup3\n        /* \"#utility.yul\":11547:11556   */\n      div\n        /* \"#utility.yul\":11542:11556   */\n      swap1\n      pop\n        /* \"#utility.yul\":11377:11562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11568:12010   */\n    tag_143:\n        /* \"#utility.yul\":11717:11721   */\n      0x00\n        /* \"#utility.yul\":11755:11757   */\n      0x60\n        /* \"#utility.yul\":11744:11753   */\n      dup3\n        /* \"#utility.yul\":11740:11758   */\n      add\n        /* \"#utility.yul\":11732:11758   */\n      swap1\n      pop\n        /* \"#utility.yul\":11768:11839   */\n      tag_333\n        /* \"#utility.yul\":11836:11837   */\n      0x00\n        /* \"#utility.yul\":11825:11834   */\n      dup4\n        /* \"#utility.yul\":11821:11838   */\n      add\n        /* \"#utility.yul\":11812:11818   */\n      dup7\n        /* \"#utility.yul\":11768:11839   */\n      tag_195\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":11849:11921   */\n      tag_334\n        /* \"#utility.yul\":11917:11919   */\n      0x20\n        /* \"#utility.yul\":11906:11915   */\n      dup4\n        /* \"#utility.yul\":11902:11920   */\n      add\n        /* \"#utility.yul\":11893:11899   */\n      dup6\n        /* \"#utility.yul\":11849:11921   */\n      tag_190\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11931:12003   */\n      tag_335\n        /* \"#utility.yul\":11999:12001   */\n      0x40\n        /* \"#utility.yul\":11988:11997   */\n      dup4\n        /* \"#utility.yul\":11984:12002   */\n      add\n        /* \"#utility.yul\":11975:11981   */\n      dup5\n        /* \"#utility.yul\":11931:12003   */\n      tag_190\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":11568:12010   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12016:12207   */\n    tag_166:\n        /* \"#utility.yul\":12056:12059   */\n      0x00\n        /* \"#utility.yul\":12075:12095   */\n      tag_337\n        /* \"#utility.yul\":12093:12094   */\n      dup3\n        /* \"#utility.yul\":12075:12095   */\n      tag_185\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":12070:12095   */\n      swap2\n      pop\n        /* \"#utility.yul\":12109:12129   */\n      tag_338\n        /* \"#utility.yul\":12127:12128   */\n      dup4\n        /* \"#utility.yul\":12109:12129   */\n      tag_185\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":12104:12129   */\n      swap3\n      pop\n        /* \"#utility.yul\":12152:12153   */\n      dup3\n        /* \"#utility.yul\":12149:12150   */\n      dup3\n        /* \"#utility.yul\":12145:12154   */\n      add\n        /* \"#utility.yul\":12138:12154   */\n      swap1\n      pop\n        /* \"#utility.yul\":12173:12176   */\n      dup1\n        /* \"#utility.yul\":12170:12171   */\n      dup3\n        /* \"#utility.yul\":12167:12177   */\n      gt\n        /* \"#utility.yul\":12164:12200   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":12180:12198   */\n      tag_340\n      tag_207\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":12164:12200   */\n    tag_339:\n        /* \"#utility.yul\":12016:12207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fe2a6c45c2d86b721fab0b0039a3d3f6e4b3d885ee939a4a6c4dacada0669b7264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_353": {
									"entryPoint": null,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_852": {
									"entryPoint": null,
									"id": 852,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:1",
										"nodeType": "YulBlock",
										"src": "0:5231:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "140:152:1",
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:1",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:1",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nativeSrc": "150:88:1",
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nativeSrc": "150:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:1",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:1",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nativeSrc": "247:15:1",
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nativeSrc": "247:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:1",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nativeSrc": "271:15:1",
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nativeSrc": "271:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nativeSrc": "326:152:1",
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:1",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nativeSrc": "336:88:1",
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nativeSrc": "336:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:1",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:15:1",
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nativeSrc": "433:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:1",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nativeSrc": "457:15:1",
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nativeSrc": "457:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nativeSrc": "535:269:1",
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nativeSrc": "545:22:1",
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nativeSrc": "555:12:1",
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nativeSrc": "576:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nativeSrc": "602:12:1",
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:1",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:1",
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nativeSrc": "667:27:1",
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:1",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nativeSrc": "677:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nativeSrc": "626:26:1",
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nativeSrc": "623:81:1",
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nativeSrc": "756:42:1",
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nativeSrc": "770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nativeSrc": "770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:1",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nativeSrc": "740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nativeSrc": "717:38:1",
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nativeSrc": "714:84:1",
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:1",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:1",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nativeSrc": "864:87:1",
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nativeSrc": "874:11:1",
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:1",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nativeSrc": "895:14:1",
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nativeSrc": "895:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nativeSrc": "918:26:1",
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nativeSrc": "926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:1",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:1",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nativeSrc": "1001:49:1",
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nativeSrc": "1011:33:1",
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nativeSrc": "1025:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nativeSrc": "1021:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:1",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:1",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nativeSrc": "1109:54:1",
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nativeSrc": "1119:37:1",
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:1",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:1",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nativeSrc": "1245:317:1",
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nativeSrc": "1255:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nativeSrc": "1311:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:1",
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nativeSrc": "1429:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nativeSrc": "1477:30:1",
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nativeSrc": "1486:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nativeSrc": "1516:40:1",
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nativeSrc": "1536:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nativeSrc": "1526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:1",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:1",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:1",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:1",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nativeSrc": "1613:32:1",
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nativeSrc": "1623:16:1",
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:1",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:1",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:1",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nativeSrc": "1683:28:1",
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nativeSrc": "1693:12:1",
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:1",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:1",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nativeSrc": "1777:82:1",
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nativeSrc": "1787:66:1",
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nativeSrc": "1827:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nativeSrc": "1818:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nativeSrc": "1800:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:1",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nativeSrc": "1912:28:1",
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nativeSrc": "1922:12:1",
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:1",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:1",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:1",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nativeSrc": "2022:193:1",
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nativeSrc": "2032:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nativeSrc": "2056:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nativeSrc": "2145:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nativeSrc": "2166:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nativeSrc": "2117:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:105:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nativeSrc": "2104:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:1",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:1",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nativeSrc": "2270:24:1",
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nativeSrc": "2280:8:1",
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:1",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nativeSrc": "2353:136:1",
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nativeSrc": "2363:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nativeSrc": "2377:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nativeSrc": "2418:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nativeSrc": "2418:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:1",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:1",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nativeSrc": "2545:136:1",
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:1",
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nativeSrc": "2626:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nativeSrc": "2626:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nativeSrc": "2562:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nativeSrc": "2555:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:1",
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nativeSrc": "2579:22:1",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nativeSrc": "2588:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:1",
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:1",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:1",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nativeSrc": "2766:464:1",
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:1",
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nativeSrc": "2806:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nativeSrc": "2822:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:1",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nativeSrc": "2906:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nativeSrc": "2892:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:1",
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:1",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nativeSrc": "3074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nativeSrc": "3071:49:1",
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nativeSrc": "3189:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nativeSrc": "3175:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nativeSrc": "3133:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nativeSrc": "3133:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nativeSrc": "2777:446:1",
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:1",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:1",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:1",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nativeSrc": "3299:54:1",
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nativeSrc": "3309:37:1",
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nativeSrc": "3330:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:1",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:1",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nativeSrc": "3410:118:1",
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nativeSrc": "3420:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nativeSrc": "3465:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nativeSrc": "3480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nativeSrc": "3436:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nativeSrc": "3432:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:1",
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nativeSrc": "3507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:1",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:1",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:1",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nativeSrc": "3614:214:1",
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nativeSrc": "3747:37:1",
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nativeSrc": "3755:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nativeSrc": "3793:29:1",
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nativeSrc": "3810:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nativeSrc": "3801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:1",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:1",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:1",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:1",
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nativeSrc": "3936:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nativeSrc": "3950:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:1",
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nativeSrc": "4074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nativeSrc": "4074:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nativeSrc": "4041:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nativeSrc": "4038:56:1",
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nativeSrc": "4104:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nativeSrc": "4144:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nativeSrc": "4118:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nativeSrc": "4203:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nativeSrc": "4203:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nativeSrc": "4280:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:1",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:1",
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:1",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:1",
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nativeSrc": "4413:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nativeSrc": "4401:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nativeSrc": "4451:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:1",
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nativeSrc": "4608:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nativeSrc": "4602:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nativeSrc": "4587:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nativeSrc": "4587:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nativeSrc": "4646:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nativeSrc": "4656:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:1",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:1",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nativeSrc": "4700:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nativeSrc": "4532:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nativeSrc": "4524:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:1",
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nativeSrc": "4554:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:1",
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:1",
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nativeSrc": "4809:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nativeSrc": "4803:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:1",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nativeSrc": "4891:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nativeSrc": "4861:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nativeSrc": "4846:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nativeSrc": "4846:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nativeSrc": "4748:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nativeSrc": "4745:179:1",
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nativeSrc": "4954:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nativeSrc": "4950:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nativeSrc": "4937:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nativeSrc": "4937:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:1",
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:1",
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:1",
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:1",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nativeSrc": "5084:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nativeSrc": "5078:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nativeSrc": "5041:77:1",
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nativeSrc": "5144:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nativeSrc": "5131:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nativeSrc": "5131:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:1",
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nativeSrc": "4342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nativeSrc": "4335:887:1",
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:1",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040518060400160405280601181526020017f53796e74686574696320426974636f696e0000000000000000000000000000008152506040518060400160405280600481526020017f7342544300000000000000000000000000000000000000000000000000000000815250816003908161008b91906103c8565b50806004908161009b91906103c8565b5050503360075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073694aa1769357215de4fac081bf1f309adc32530660055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731b44f3514812d835eb1bdb0acb33d3fa3351ee4360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610497565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061020657607f821691505b602082108103610219576102186101c2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261027b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610240565b6102858683610240565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6102c96102c46102bf8461029d565b6102a6565b61029d565b9050919050565b5f819050919050565b6102e2836102af565b6102f66102ee826102d0565b84845461024c565b825550505050565b5f5f905090565b61030d6102fe565b6103188184846102d9565b505050565b5b8181101561033b576103305f82610305565b60018101905061031e565b5050565b601f821115610380576103518161021f565b61035a84610231565b81016020851015610369578190505b61037d61037585610231565b83018261031d565b50505b505050565b5f82821c905092915050565b5f6103a05f1984600802610385565b1980831691505092915050565b5f6103b88383610391565b9150826002028217905092915050565b6103d18261018b565b67ffffffffffffffff8111156103ea576103e9610195565b5b6103f482546101ef565b6103ff82828561033f565b5f60209050601f831160018114610430575f841561041e578287015190505b61042885826103ad565b86555061048f565b601f19841661043e8661021f565b5f5b8281101561046557848901518255600182019150602085019450602081019050610440565b86831015610482578489015161047e601f891682610391565b8355505b6001600288020188555050505b505050505050565b6114a9806104a45f395ff3fe6080604052600436106100a6575f3560e01c80637b9629db116100635780637b9629db146101dc5780638da5cb5b1461020657806395d89b4114610230578063a9059cbb1461025a578063bc4d279714610296578063dd62ed3e146102a0576100a6565b806306fdde03146100aa578063095ea7b3146100d457806318160ddd1461011057806323b872dd1461013a578063313ce5671461017657806370a08231146101a0575b5f5ffd5b3480156100b5575f5ffd5b506100be6102dc565b6040516100cb9190610e8f565b60405180910390f35b3480156100df575f5ffd5b506100fa60048036038101906100f59190610f40565b61036c565b6040516101079190610f98565b60405180910390f35b34801561011b575f5ffd5b5061012461038e565b6040516101319190610fc0565b60405180910390f35b348015610145575f5ffd5b50610160600480360381019061015b9190610fd9565b610397565b60405161016d9190610f98565b60405180910390f35b348015610181575f5ffd5b5061018a6103c5565b6040516101979190611044565b60405180910390f35b3480156101ab575f5ffd5b506101c660048036038101906101c1919061105d565b6103cd565b6040516101d39190610fc0565b60405180910390f35b3480156101e7575f5ffd5b506101f0610412565b6040516101fd91906110a0565b60405180910390f35b348015610211575f5ffd5b5061021a6104af565b60405161022791906110c8565b60405180910390f35b34801561023b575f5ffd5b506102446104d4565b6040516102519190610e8f565b60405180910390f35b348015610265575f5ffd5b50610280600480360381019061027b9190610f40565b610564565b60405161028d9190610f98565b60405180910390f35b61029e610586565b005b3480156102ab575f5ffd5b506102c660048036038101906102c191906110e1565b61079a565b6040516102d39190610fc0565b60405180910390f35b6060600380546102eb9061114c565b80601f01602080910402602001604051908101604052809291908181526020018280546103179061114c565b80156103625780601f1061033957610100808354040283529160200191610362565b820191905f5260205f20905b81548152906001019060200180831161034557829003601f168201915b5050505050905090565b5f5f61037661081c565b9050610383818585610823565b600191505092915050565b5f600254905090565b5f5f6103a161081c565b90506103ae858285610835565b6103b98585856108c8565b60019150509392505050565b5f6012905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561047e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a291906111f9565b5050509150508091505090565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546104e39061114c565b80601f016020809104026020016040519081016040528092919081815260200182805461050f9061114c565b801561055a5780601f106105315761010080835404028352916020019161055a565b820191905f5260205f20905b81548152906001019060200180831161053d57829003601f168201915b5050505050905090565b5f5f61056e61081c565b905061057b8185856108c8565b600191505092915050565b5f34116105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf906112ba565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610633573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065791906111f9565b5050509150505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106c8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ec91906111f9565b5050509150505f8213801561070057505f81135b61073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690611322565b60405180910390fd5b5f8290505f8290505f670de0b6b3a7640000833461075d919061136d565b61076791906113db565b90505f826402540be4008361077c919061136d565b61078691906113db565b905061079233826109b8565b505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6108308383836001610a37565b505050565b5f610840848461079a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108c257818110156108b3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108aa9392919061140b565b60405180910390fd5b6108c184848484035f610a37565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610938575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161092f91906110c8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a8575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161099f91906110c8565b60405180910390fd5b6109b3838383610c06565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a28575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a1f91906110c8565b60405180910390fd5b610a335f8383610c06565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610aa7575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a9e91906110c8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b17575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b0e91906110c8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c00578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bf79190610fc0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c56578060025f828254610c4a9190611440565b92505081905550610d24565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610cdf578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610cd69392919061140b565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d6b578060025f8282540392505081905550610db5565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e129190610fc0565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610e6182610e1f565b610e6b8185610e29565b9350610e7b818560208601610e39565b610e8481610e47565b840191505092915050565b5f6020820190508181035f830152610ea78184610e57565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610edc82610eb3565b9050919050565b610eec81610ed2565b8114610ef6575f5ffd5b50565b5f81359050610f0781610ee3565b92915050565b5f819050919050565b610f1f81610f0d565b8114610f29575f5ffd5b50565b5f81359050610f3a81610f16565b92915050565b5f5f60408385031215610f5657610f55610eaf565b5b5f610f6385828601610ef9565b9250506020610f7485828601610f2c565b9150509250929050565b5f8115159050919050565b610f9281610f7e565b82525050565b5f602082019050610fab5f830184610f89565b92915050565b610fba81610f0d565b82525050565b5f602082019050610fd35f830184610fb1565b92915050565b5f5f5f60608486031215610ff057610fef610eaf565b5b5f610ffd86828701610ef9565b935050602061100e86828701610ef9565b925050604061101f86828701610f2c565b9150509250925092565b5f60ff82169050919050565b61103e81611029565b82525050565b5f6020820190506110575f830184611035565b92915050565b5f6020828403121561107257611071610eaf565b5b5f61107f84828501610ef9565b91505092915050565b5f819050919050565b61109a81611088565b82525050565b5f6020820190506110b35f830184611091565b92915050565b6110c281610ed2565b82525050565b5f6020820190506110db5f8301846110b9565b92915050565b5f5f604083850312156110f7576110f6610eaf565b5b5f61110485828601610ef9565b925050602061111585828601610ef9565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061116357607f821691505b6020821081036111765761117561111f565b5b50919050565b5f69ffffffffffffffffffff82169050919050565b61119a8161117c565b81146111a4575f5ffd5b50565b5f815190506111b581611191565b92915050565b6111c481611088565b81146111ce575f5ffd5b50565b5f815190506111df816111bb565b92915050565b5f815190506111f381610f16565b92915050565b5f5f5f5f5f60a0868803121561121257611211610eaf565b5b5f61121f888289016111a7565b9550506020611230888289016111d1565b9450506040611241888289016111e5565b9350506060611252888289016111e5565b9250506080611263888289016111a7565b9150509295509295909350565b7f4d7573742073656e642045544820746f206d696e7420746f6b656e73000000005f82015250565b5f6112a4601c83610e29565b91506112af82611270565b602082019050919050565b5f6020820190508181035f8301526112d181611298565b9050919050565b7f496e76616c6964206f7261636c652070726963650000000000000000000000005f82015250565b5f61130c601483610e29565b9150611317826112d8565b602082019050919050565b5f6020820190508181035f83015261133981611300565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61137782610f0d565b915061138283610f0d565b925082820261139081610f0d565b915082820484148315176113a7576113a6611340565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6113e582610f0d565b91506113f083610f0d565b925082611400576113ff6113ae565b5b828204905092915050565b5f60608201905061141e5f8301866110b9565b61142b6020830185610fb1565b6114386040830184610fb1565b949350505050565b5f61144a82610f0d565b915061145583610f0d565b925082820190508082111561146d5761146c611340565b5b9291505056fea2646970667358221220fe2a6c45c2d86b721fab0b0039a3d3f6e4b3d885ee939a4a6c4dacada0669b7264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53796E74686574696320426974636F696E000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7342544300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x3C8 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x3C8 JUMP JUMPDEST POP POP POP CALLER PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x694AA1769357215DE4FAC081BF1F309ADC325306 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x1B44F3514812D835EB1BDB0ACB33D3FA3351EE43 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x497 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x206 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x219 JUMPI PUSH2 0x218 PUSH2 0x1C2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x27B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x240 JUMP JUMPDEST PUSH2 0x285 DUP7 DUP4 PUSH2 0x240 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C9 PUSH2 0x2C4 PUSH2 0x2BF DUP5 PUSH2 0x29D JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E2 DUP4 PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x2EE DUP3 PUSH2 0x2D0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x24C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x30D PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x318 DUP2 DUP5 DUP5 PUSH2 0x2D9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH2 0x330 PUSH0 DUP3 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x31E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x380 JUMPI PUSH2 0x351 DUP2 PUSH2 0x21F JUMP JUMPDEST PUSH2 0x35A DUP5 PUSH2 0x231 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x369 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x37D PUSH2 0x375 DUP6 PUSH2 0x231 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x31D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x385 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3B8 DUP4 DUP4 PUSH2 0x391 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D1 DUP3 PUSH2 0x18B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EA JUMPI PUSH2 0x3E9 PUSH2 0x195 JUMP JUMPDEST JUMPDEST PUSH2 0x3F4 DUP3 SLOAD PUSH2 0x1EF JUMP JUMPDEST PUSH2 0x3FF DUP3 DUP3 DUP6 PUSH2 0x33F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x430 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x41E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x428 DUP6 DUP3 PUSH2 0x3AD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x43E DUP7 PUSH2 0x21F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x465 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x440 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x482 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x47E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x391 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14A9 DUP1 PUSH2 0x4A4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B9629DB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x7B9629DB EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xBC4D2797 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A0 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xFD9 JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x244 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2EB SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x317 SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x362 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x339 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x362 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x345 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x376 PUSH2 0x81C JUMP JUMPDEST SWAP1 POP PUSH2 0x383 DUP2 DUP6 DUP6 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3A1 PUSH2 0x81C JUMP JUMPDEST SWAP1 POP PUSH2 0x3AE DUP6 DUP3 DUP6 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x3B9 DUP6 DUP6 DUP6 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4E3 SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50F SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x531 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x56E PUSH2 0x81C JUMP JUMPDEST SWAP1 POP PUSH2 0x57B DUP2 DUP6 DUP6 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x5C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP3 SGT DUP1 ISZERO PUSH2 0x700 JUMPI POP PUSH0 DUP2 SGT JUMPDEST PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x736 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 DUP3 SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 CALLVALUE PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x767 SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH5 0x2540BE400 DUP4 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x786 SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP PUSH2 0x792 CALLER DUP3 PUSH2 0x9B8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x830 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA37 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x840 DUP5 DUP5 PUSH2 0x79A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x8C2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8B3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA37 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x938 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B3 DUP4 DUP4 DUP4 PUSH2 0xC06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA28 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA33 PUSH0 DUP4 DUP4 PUSH2 0xC06 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC00 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC56 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD24 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCDF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDB5 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE12 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE61 DUP3 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xE6B DUP2 DUP6 PUSH2 0xE29 JUMP JUMPDEST SWAP4 POP PUSH2 0xE7B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE39 JUMP JUMPDEST PUSH2 0xE84 DUP2 PUSH2 0xE47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEA7 DUP2 DUP5 PUSH2 0xE57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEDC DUP3 PUSH2 0xEB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0xED2 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF07 DUP2 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1F DUP2 PUSH2 0xF0D JUMP JUMPDEST DUP2 EQ PUSH2 0xF29 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF3A DUP2 PUSH2 0xF16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF56 JUMPI PUSH2 0xF55 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF63 DUP6 DUP3 DUP7 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF74 DUP6 DUP3 DUP7 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF92 DUP2 PUSH2 0xF7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH0 DUP4 ADD DUP5 PUSH2 0xF89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFBA DUP2 PUSH2 0xF0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFD3 PUSH0 DUP4 ADD DUP5 PUSH2 0xFB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFF0 JUMPI PUSH2 0xFEF PUSH2 0xEAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFFD DUP7 DUP3 DUP8 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x100E DUP7 DUP3 DUP8 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x101F DUP7 DUP3 DUP8 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x103E DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1057 PUSH0 DUP4 ADD DUP5 PUSH2 0x1035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1072 JUMPI PUSH2 0x1071 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x107F DUP5 DUP3 DUP6 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109A DUP2 PUSH2 0x1088 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1091 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10C2 DUP2 PUSH2 0xED2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DB PUSH0 DUP4 ADD DUP5 PUSH2 0x10B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F7 JUMPI PUSH2 0x10F6 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1104 DUP6 DUP3 DUP7 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1115 DUP6 DUP3 DUP7 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1163 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1176 JUMPI PUSH2 0x1175 PUSH2 0x111F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119A DUP2 PUSH2 0x117C JUMP JUMPDEST DUP2 EQ PUSH2 0x11A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11B5 DUP2 PUSH2 0x1191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C4 DUP2 PUSH2 0x1088 JUMP JUMPDEST DUP2 EQ PUSH2 0x11CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11DF DUP2 PUSH2 0x11BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11F3 DUP2 PUSH2 0xF16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH2 0x1211 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x121F DUP9 DUP3 DUP10 ADD PUSH2 0x11A7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1230 DUP9 DUP3 DUP10 ADD PUSH2 0x11D1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1241 DUP9 DUP3 DUP10 ADD PUSH2 0x11E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1252 DUP9 DUP3 DUP10 ADD PUSH2 0x11E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1263 DUP9 DUP3 DUP10 ADD PUSH2 0x11A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544820746F206D696E7420746F6B656E7300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12A4 PUSH1 0x1C DUP4 PUSH2 0xE29 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AF DUP3 PUSH2 0x1270 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12D1 DUP2 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F7261636C65207072696365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x130C PUSH1 0x14 DUP4 PUSH2 0xE29 JUMP JUMPDEST SWAP2 POP PUSH2 0x1317 DUP3 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1339 DUP2 PUSH2 0x1300 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1377 DUP3 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1382 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1390 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x13A7 JUMPI PUSH2 0x13A6 PUSH2 0x1340 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x13E5 DUP3 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x13F0 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1400 JUMPI PUSH2 0x13FF PUSH2 0x13AE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x141E PUSH0 DUP4 ADD DUP7 PUSH2 0x10B9 JUMP JUMPDEST PUSH2 0x142B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x1438 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFB1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x144A DUP3 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1455 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x146D JUMPI PUSH2 0x146C PUSH2 0x1340 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x2A PUSH13 0x45C2D86B721FAB0B0039A3D3F6 RETF 0xB3 0xD8 DUP6 RETURNCONTRACT 0x93 SWAP11 BLOBBASEFEE PUSH13 0x4DACADA0669B7264736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "22544:2286:0:-:0;;;22778:351;;;;;;;;;;13090:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13164:5;13156;:13;;;;;;:::i;:::-;;13189:7;13179;:17;;;;;;:::i;:::-;;13090:113;;22845:10:::1;22837:5;;:18;;;;;;;;;;;;;;;;;;22986:42;22946:15;;:83;;;;;;;;;;;;;;;;;;23079:42;23039:15;;:83;;;;;;;;;;;;;;;;;;22544:2286:::0;;7:99:1;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;22544:2286:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_707": {
									"entryPoint": 2083,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_767": {
									"entryPoint": 2615,
									"id": 767,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_656": {
									"entryPoint": 2488,
									"id": 656,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_156": {
									"entryPoint": 2076,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_815": {
									"entryPoint": 2101,
									"id": 815,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_546": {
									"entryPoint": 2248,
									"id": 546,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_623": {
									"entryPoint": 3078,
									"id": 623,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_443": {
									"entryPoint": 1946,
									"id": 443,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_467": {
									"entryPoint": 876,
									"id": 467,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_402": {
									"entryPoint": 973,
									"id": 402,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_380": {
									"entryPoint": 965,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLatestBtcPrice_866": {
									"entryPoint": 1042,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mintWithEther_943": {
									"entryPoint": 1414,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_362": {
									"entryPoint": 732,
									"id": 362,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_827": {
									"entryPoint": 1199,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_371": {
									"entryPoint": 1236,
									"id": 371,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_389": {
									"entryPoint": 910,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_499": {
									"entryPoint": 919,
									"id": 499,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_426": {
									"entryPoint": 1380,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 4561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 4241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5131,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 4232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 4476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7": {
									"entryPoint": 4720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 4539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12210:1",
										"nodeType": "YulBlock",
										"src": "0:12210:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:77:1",
													"nodeType": "YulBlock",
													"src": "349:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:1"
																},
																"nativeSrc": "360:23:1",
																"nodeType": "YulFunctionCall",
																"src": "360:23:1"
															},
															"nativeSrc": "360:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:1"
																		},
																		"nativeSrc": "399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:1",
																		"nodeType": "YulLiteral",
																		"src": "417:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:1"
																},
																"nativeSrc": "392:27:1",
																"nodeType": "YulFunctionCall",
																"src": "392:27:1"
															},
															"nativeSrc": "392:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:139:1"
											},
											{
												"body": {
													"nativeSrc": "480:54:1",
													"nodeType": "YulBlock",
													"src": "480:54:1",
													"statements": [
														{
															"nativeSrc": "490:38:1",
															"nodeType": "YulAssignment",
															"src": "490:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:1",
																				"nodeType": "YulLiteral",
																				"src": "515:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:1"
																		},
																		"nativeSrc": "504:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:1",
																				"nodeType": "YulLiteral",
																				"src": "524:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:1"
																		},
																		"nativeSrc": "520:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:28:1",
																"nodeType": "YulFunctionCall",
																"src": "500:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "432:102:1"
											},
											{
												"body": {
													"nativeSrc": "632:285:1",
													"nodeType": "YulBlock",
													"src": "632:285:1",
													"statements": [
														{
															"nativeSrc": "642:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:1"
																},
																"nativeSrc": "656:39:1",
																"nodeType": "YulFunctionCall",
																"src": "656:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:1",
																	"nodeType": "YulTypedName",
																	"src": "646:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:1",
															"nodeType": "YulAssignment",
															"src": "704:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:1"
																},
																"nativeSrc": "711:71:1",
																"nodeType": "YulFunctionCall",
																"src": "711:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:1",
																				"nodeType": "YulLiteral",
																				"src": "837:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:1"
																},
																"nativeSrc": "791:65:1",
																"nodeType": "YulFunctionCall",
																"src": "791:65:1"
															},
															"nativeSrc": "791:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:1"
														},
														{
															"nativeSrc": "865:46:1",
															"nodeType": "YulAssignment",
															"src": "865:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:1"
																		},
																		"nativeSrc": "881:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nativeSrc": "872:39:1",
																"nodeType": "YulFunctionCall",
																"src": "872:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:1",
														"nodeType": "YulTypedName",
														"src": "613:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:1",
														"nodeType": "YulTypedName",
														"src": "620:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:1",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"src": "540:377:1"
											},
											{
												"body": {
													"nativeSrc": "1041:195:1",
													"nodeType": "YulBlock",
													"src": "1041:195:1",
													"statements": [
														{
															"nativeSrc": "1051:26:1",
															"nodeType": "YulAssignment",
															"src": "1051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nativeSrc": "1059:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:1"
																		},
																		"nativeSrc": "1094:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:1"
																		},
																		"nativeSrc": "1113:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																},
																"nativeSrc": "1087:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:1"
															},
															"nativeSrc": "1087:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:1"
														},
														{
															"nativeSrc": "1143:86:1",
															"nodeType": "YulAssignment",
															"src": "1143:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:1"
																},
																"nativeSrc": "1151:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:1",
														"nodeType": "YulTypedName",
														"src": "1013:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:1",
														"nodeType": "YulTypedName",
														"src": "1025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:1",
														"nodeType": "YulTypedName",
														"src": "1036:4:1",
														"type": ""
													}
												],
												"src": "923:313:1"
											},
											{
												"body": {
													"nativeSrc": "1282:35:1",
													"nodeType": "YulBlock",
													"src": "1282:35:1",
													"statements": [
														{
															"nativeSrc": "1292:19:1",
															"nodeType": "YulAssignment",
															"src": "1292:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:1"
																},
																"nativeSrc": "1302:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:1",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													}
												],
												"src": "1242:75:1"
											},
											{
												"body": {
													"nativeSrc": "1412:28:1",
													"nodeType": "YulBlock",
													"src": "1412:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nativeSrc": "1422:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nativeSrc": "1422:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:1"
											},
											{
												"body": {
													"nativeSrc": "1535:28:1",
													"nodeType": "YulBlock",
													"src": "1535:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:1"
																},
																"nativeSrc": "1545:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:1"
															},
															"nativeSrc": "1545:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:1"
											},
											{
												"body": {
													"nativeSrc": "1614:81:1",
													"nodeType": "YulBlock",
													"src": "1614:81:1",
													"statements": [
														{
															"nativeSrc": "1624:65:1",
															"nodeType": "YulAssignment",
															"src": "1624:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nativeSrc": "1635:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:1",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:1",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"src": "1569:126:1"
											},
											{
												"body": {
													"nativeSrc": "1746:51:1",
													"nodeType": "YulBlock",
													"src": "1746:51:1",
													"statements": [
														{
															"nativeSrc": "1756:35:1",
															"nodeType": "YulAssignment",
															"src": "1756:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:1"
																},
																"nativeSrc": "1767:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:1",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:1",
														"nodeType": "YulTypedName",
														"src": "1738:7:1",
														"type": ""
													}
												],
												"src": "1701:96:1"
											},
											{
												"body": {
													"nativeSrc": "1846:79:1",
													"nodeType": "YulBlock",
													"src": "1846:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:1",
																"nodeType": "YulBlock",
																"src": "1903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:1"
																			},
																			"nativeSrc": "1905:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:1"
																		},
																		"nativeSrc": "1905:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:1"
																				},
																				"nativeSrc": "1876:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:1"
																		},
																		"nativeSrc": "1866:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																},
																"nativeSrc": "1859:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:1"
															},
															"nativeSrc": "1856:63:1",
															"nodeType": "YulIf",
															"src": "1856:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:1",
														"nodeType": "YulTypedName",
														"src": "1839:5:1",
														"type": ""
													}
												],
												"src": "1803:122:1"
											},
											{
												"body": {
													"nativeSrc": "1983:87:1",
													"nodeType": "YulBlock",
													"src": "1983:87:1",
													"statements": [
														{
															"nativeSrc": "1993:29:1",
															"nodeType": "YulAssignment",
															"src": "1993:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:1"
																},
																"nativeSrc": "2002:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:1"
																},
																"nativeSrc": "2031:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:1"
															},
															"nativeSrc": "2031:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:1",
														"nodeType": "YulTypedName",
														"src": "1961:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:1",
														"nodeType": "YulTypedName",
														"src": "1969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:1",
														"nodeType": "YulTypedName",
														"src": "1977:5:1",
														"type": ""
													}
												],
												"src": "1931:139:1"
											},
											{
												"body": {
													"nativeSrc": "2121:32:1",
													"nodeType": "YulBlock",
													"src": "2121:32:1",
													"statements": [
														{
															"nativeSrc": "2131:16:1",
															"nodeType": "YulAssignment",
															"src": "2131:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:1",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:1",
														"nodeType": "YulTypedName",
														"src": "2103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:1",
														"nodeType": "YulTypedName",
														"src": "2113:7:1",
														"type": ""
													}
												],
												"src": "2076:77:1"
											},
											{
												"body": {
													"nativeSrc": "2202:79:1",
													"nodeType": "YulBlock",
													"src": "2202:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:1",
																"nodeType": "YulBlock",
																"src": "2259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:1"
																			},
																			"nativeSrc": "2261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:1"
																		},
																		"nativeSrc": "2261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:1"
																				},
																				"nativeSrc": "2232:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:1"
																		},
																		"nativeSrc": "2222:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nativeSrc": "2215:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:1"
															},
															"nativeSrc": "2212:63:1",
															"nodeType": "YulIf",
															"src": "2212:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:1",
														"nodeType": "YulTypedName",
														"src": "2195:5:1",
														"type": ""
													}
												],
												"src": "2159:122:1"
											},
											{
												"body": {
													"nativeSrc": "2339:87:1",
													"nodeType": "YulBlock",
													"src": "2339:87:1",
													"statements": [
														{
															"nativeSrc": "2349:29:1",
															"nodeType": "YulAssignment",
															"src": "2349:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:1"
																},
																"nativeSrc": "2358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:1"
																},
																"nativeSrc": "2387:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:1"
															},
															"nativeSrc": "2387:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:1",
														"nodeType": "YulTypedName",
														"src": "2317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:1",
														"nodeType": "YulTypedName",
														"src": "2325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:1",
														"nodeType": "YulTypedName",
														"src": "2333:5:1",
														"type": ""
													}
												],
												"src": "2287:139:1"
											},
											{
												"body": {
													"nativeSrc": "2515:391:1",
													"nodeType": "YulBlock",
													"src": "2515:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:1",
																"nodeType": "YulBlock",
																"src": "2561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:1"
																			},
																			"nativeSrc": "2563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:1"
																		},
																		"nativeSrc": "2563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:1"
																		},
																		"nativeSrc": "2532:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:1"
																},
																"nativeSrc": "2528:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"nativeSrc": "2525:119:1",
															"nodeType": "YulIf",
															"src": "2525:119:1"
														},
														{
															"nativeSrc": "2654:117:1",
															"nodeType": "YulBlock",
															"src": "2654:117:1",
															"statements": [
																{
																	"nativeSrc": "2669:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:1"
																				},
																				"nativeSrc": "2729:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:1"
																		},
																		"nativeSrc": "2708:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:1",
															"nodeType": "YulBlock",
															"src": "2781:118:1",
															"statements": [
																{
																	"nativeSrc": "2796:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:1"
																				},
																				"nativeSrc": "2857:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:1"
																		},
																		"nativeSrc": "2836:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:1",
														"nodeType": "YulTypedName",
														"src": "2477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:1",
														"nodeType": "YulTypedName",
														"src": "2488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:1",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:1",
														"nodeType": "YulTypedName",
														"src": "2508:6:1",
														"type": ""
													}
												],
												"src": "2432:474:1"
											},
											{
												"body": {
													"nativeSrc": "2954:48:1",
													"nodeType": "YulBlock",
													"src": "2954:48:1",
													"statements": [
														{
															"nativeSrc": "2964:32:1",
															"nodeType": "YulAssignment",
															"src": "2964:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:1"
																		},
																		"nativeSrc": "2982:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nativeSrc": "2975:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:1",
														"nodeType": "YulTypedName",
														"src": "2936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:1",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"src": "2912:90:1"
											},
											{
												"body": {
													"nativeSrc": "3067:50:1",
													"nodeType": "YulBlock",
													"src": "3067:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:1"
																		},
																		"nativeSrc": "3089:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:1"
																},
																"nativeSrc": "3077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:1"
															},
															"nativeSrc": "3077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:1",
														"nodeType": "YulTypedName",
														"src": "3055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:1",
														"nodeType": "YulTypedName",
														"src": "3062:3:1",
														"type": ""
													}
												],
												"src": "3008:109:1"
											},
											{
												"body": {
													"nativeSrc": "3215:118:1",
													"nodeType": "YulBlock",
													"src": "3215:118:1",
													"statements": [
														{
															"nativeSrc": "3225:26:1",
															"nodeType": "YulAssignment",
															"src": "3225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nativeSrc": "3233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nativeSrc": "3308:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:1"
																},
																"nativeSrc": "3261:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:1"
															},
															"nativeSrc": "3261:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:1",
														"nodeType": "YulTypedName",
														"src": "3187:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:1",
														"nodeType": "YulTypedName",
														"src": "3199:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:1",
														"nodeType": "YulTypedName",
														"src": "3210:4:1",
														"type": ""
													}
												],
												"src": "3123:210:1"
											},
											{
												"body": {
													"nativeSrc": "3404:53:1",
													"nodeType": "YulBlock",
													"src": "3404:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:1"
																		},
																		"nativeSrc": "3426:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:1"
																},
																"nativeSrc": "3414:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:1"
															},
															"nativeSrc": "3414:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:1",
														"nodeType": "YulTypedName",
														"src": "3392:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:1",
														"nodeType": "YulTypedName",
														"src": "3399:3:1",
														"type": ""
													}
												],
												"src": "3339:118:1"
											},
											{
												"body": {
													"nativeSrc": "3561:124:1",
													"nodeType": "YulBlock",
													"src": "3561:124:1",
													"statements": [
														{
															"nativeSrc": "3571:26:1",
															"nodeType": "YulAssignment",
															"src": "3571:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:1"
																},
																"nativeSrc": "3579:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:1"
																		},
																		"nativeSrc": "3660:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:1"
																},
																"nativeSrc": "3607:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:1"
															},
															"nativeSrc": "3607:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:1",
														"nodeType": "YulTypedName",
														"src": "3533:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:1",
														"nodeType": "YulTypedName",
														"src": "3545:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:1",
														"nodeType": "YulTypedName",
														"src": "3556:4:1",
														"type": ""
													}
												],
												"src": "3463:222:1"
											},
											{
												"body": {
													"nativeSrc": "3791:519:1",
													"nodeType": "YulBlock",
													"src": "3791:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:1",
																"nodeType": "YulBlock",
																"src": "3837:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:1"
																			},
																			"nativeSrc": "3839:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:1"
																		},
																		"nativeSrc": "3839:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:1"
																		},
																		"nativeSrc": "3808:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:1"
																},
																"nativeSrc": "3804:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:1"
															},
															"nativeSrc": "3801:119:1",
															"nodeType": "YulIf",
															"src": "3801:119:1"
														},
														{
															"nativeSrc": "3930:117:1",
															"nodeType": "YulBlock",
															"src": "3930:117:1",
															"statements": [
																{
																	"nativeSrc": "3945:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:1"
																				},
																				"nativeSrc": "4005:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:1"
																		},
																		"nativeSrc": "3984:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:1",
															"nodeType": "YulBlock",
															"src": "4057:118:1",
															"statements": [
																{
																	"nativeSrc": "4072:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:1"
																				},
																				"nativeSrc": "4133:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:1"
																		},
																		"nativeSrc": "4112:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:1",
															"nodeType": "YulBlock",
															"src": "4185:118:1",
															"statements": [
																{
																	"nativeSrc": "4200:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:1"
																				},
																				"nativeSrc": "4261:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:1"
																		},
																		"nativeSrc": "4240:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:1",
														"nodeType": "YulTypedName",
														"src": "3745:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:1",
														"nodeType": "YulTypedName",
														"src": "3756:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:1",
														"nodeType": "YulTypedName",
														"src": "3768:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:1",
														"nodeType": "YulTypedName",
														"src": "3776:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:1",
														"nodeType": "YulTypedName",
														"src": "3784:6:1",
														"type": ""
													}
												],
												"src": "3691:619:1"
											},
											{
												"body": {
													"nativeSrc": "4359:43:1",
													"nodeType": "YulBlock",
													"src": "4359:43:1",
													"statements": [
														{
															"nativeSrc": "4369:27:1",
															"nodeType": "YulAssignment",
															"src": "4369:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:1"
																},
																"nativeSrc": "4380:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:1",
														"nodeType": "YulTypedName",
														"src": "4341:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:1",
														"nodeType": "YulTypedName",
														"src": "4351:7:1",
														"type": ""
													}
												],
												"src": "4316:86:1"
											},
											{
												"body": {
													"nativeSrc": "4469:51:1",
													"nodeType": "YulBlock",
													"src": "4469:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:1"
																		},
																		"nativeSrc": "4491:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:1"
																},
																"nativeSrc": "4479:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:1"
															},
															"nativeSrc": "4479:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:1",
														"nodeType": "YulTypedName",
														"src": "4457:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:1",
														"nodeType": "YulTypedName",
														"src": "4464:3:1",
														"type": ""
													}
												],
												"src": "4408:112:1"
											},
											{
												"body": {
													"nativeSrc": "4620:120:1",
													"nodeType": "YulBlock",
													"src": "4620:120:1",
													"statements": [
														{
															"nativeSrc": "4630:26:1",
															"nodeType": "YulAssignment",
															"src": "4630:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:1"
																},
																"nativeSrc": "4638:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:1"
																		},
																		"nativeSrc": "4715:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:1"
																},
																"nativeSrc": "4666:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:1"
															},
															"nativeSrc": "4666:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:1",
														"nodeType": "YulTypedName",
														"src": "4592:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:1",
														"nodeType": "YulTypedName",
														"src": "4604:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:1",
														"nodeType": "YulTypedName",
														"src": "4615:4:1",
														"type": ""
													}
												],
												"src": "4526:214:1"
											},
											{
												"body": {
													"nativeSrc": "4812:263:1",
													"nodeType": "YulBlock",
													"src": "4812:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:1",
																"nodeType": "YulBlock",
																"src": "4858:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:1"
																			},
																			"nativeSrc": "4860:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:1"
																		},
																		"nativeSrc": "4860:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:1"
																		},
																		"nativeSrc": "4829:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:1"
																},
																"nativeSrc": "4825:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:1"
															},
															"nativeSrc": "4822:119:1",
															"nodeType": "YulIf",
															"src": "4822:119:1"
														},
														{
															"nativeSrc": "4951:117:1",
															"nodeType": "YulBlock",
															"src": "4951:117:1",
															"statements": [
																{
																	"nativeSrc": "4966:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:1"
																				},
																				"nativeSrc": "5026:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:1"
																		},
																		"nativeSrc": "5005:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:1",
														"nodeType": "YulTypedName",
														"src": "4782:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:1",
														"nodeType": "YulTypedName",
														"src": "4793:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:1",
														"nodeType": "YulTypedName",
														"src": "4805:6:1",
														"type": ""
													}
												],
												"src": "4746:329:1"
											},
											{
												"body": {
													"nativeSrc": "5125:32:1",
													"nodeType": "YulBlock",
													"src": "5125:32:1",
													"statements": [
														{
															"nativeSrc": "5135:16:1",
															"nodeType": "YulAssignment",
															"src": "5135:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "5146:5:1",
																"nodeType": "YulIdentifier",
																"src": "5146:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5135:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5135:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "5081:76:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5107:5:1",
														"nodeType": "YulTypedName",
														"src": "5107:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5117:7:1",
														"nodeType": "YulTypedName",
														"src": "5117:7:1",
														"type": ""
													}
												],
												"src": "5081:76:1"
											},
											{
												"body": {
													"nativeSrc": "5226:52:1",
													"nodeType": "YulBlock",
													"src": "5226:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5243:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5243:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5265:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5265:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "5248:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "5248:16:1"
																		},
																		"nativeSrc": "5248:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5248:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5236:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5236:6:1"
																},
																"nativeSrc": "5236:36:1",
																"nodeType": "YulFunctionCall",
																"src": "5236:36:1"
															},
															"nativeSrc": "5236:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "5236:36:1"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "5163:115:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5214:5:1",
														"nodeType": "YulTypedName",
														"src": "5214:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5221:3:1",
														"nodeType": "YulTypedName",
														"src": "5221:3:1",
														"type": ""
													}
												],
												"src": "5163:115:1"
											},
											{
												"body": {
													"nativeSrc": "5380:122:1",
													"nodeType": "YulBlock",
													"src": "5380:122:1",
													"statements": [
														{
															"nativeSrc": "5390:26:1",
															"nodeType": "YulAssignment",
															"src": "5390:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5402:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5402:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5413:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5398:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5398:3:1"
																},
																"nativeSrc": "5398:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5398:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5390:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5390:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5468:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5481:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5481:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5492:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5492:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5477:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5477:3:1"
																		},
																		"nativeSrc": "5477:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5477:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "5426:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "5426:41:1"
																},
																"nativeSrc": "5426:69:1",
																"nodeType": "YulFunctionCall",
																"src": "5426:69:1"
															},
															"nativeSrc": "5426:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "5426:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "5284:218:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5352:9:1",
														"nodeType": "YulTypedName",
														"src": "5352:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5364:6:1",
														"nodeType": "YulTypedName",
														"src": "5364:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5375:4:1",
														"nodeType": "YulTypedName",
														"src": "5375:4:1",
														"type": ""
													}
												],
												"src": "5284:218:1"
											},
											{
												"body": {
													"nativeSrc": "5573:53:1",
													"nodeType": "YulBlock",
													"src": "5573:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5590:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5590:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5613:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5613:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5595:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5595:17:1"
																		},
																		"nativeSrc": "5595:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5595:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5583:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5583:6:1"
																},
																"nativeSrc": "5583:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5583:37:1"
															},
															"nativeSrc": "5583:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5583:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5508:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5561:5:1",
														"nodeType": "YulTypedName",
														"src": "5561:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5568:3:1",
														"nodeType": "YulTypedName",
														"src": "5568:3:1",
														"type": ""
													}
												],
												"src": "5508:118:1"
											},
											{
												"body": {
													"nativeSrc": "5730:124:1",
													"nodeType": "YulBlock",
													"src": "5730:124:1",
													"statements": [
														{
															"nativeSrc": "5740:26:1",
															"nodeType": "YulAssignment",
															"src": "5740:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5752:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5752:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5763:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5763:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5748:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5748:3:1"
																},
																"nativeSrc": "5748:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5748:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5740:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5740:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5820:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5820:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5833:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5833:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5844:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5844:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5829:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5829:3:1"
																		},
																		"nativeSrc": "5829:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5829:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5776:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5776:43:1"
																},
																"nativeSrc": "5776:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5776:71:1"
															},
															"nativeSrc": "5776:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5776:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5632:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5702:9:1",
														"nodeType": "YulTypedName",
														"src": "5702:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5714:6:1",
														"nodeType": "YulTypedName",
														"src": "5714:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5725:4:1",
														"nodeType": "YulTypedName",
														"src": "5725:4:1",
														"type": ""
													}
												],
												"src": "5632:222:1"
											},
											{
												"body": {
													"nativeSrc": "5943:391:1",
													"nodeType": "YulBlock",
													"src": "5943:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5989:83:1",
																"nodeType": "YulBlock",
																"src": "5989:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5991:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5991:77:1"
																			},
																			"nativeSrc": "5991:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5991:79:1"
																		},
																		"nativeSrc": "5991:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5991:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5964:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5964:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5973:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5973:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5960:3:1"
																		},
																		"nativeSrc": "5960:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5960:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5985:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5985:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5956:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5956:3:1"
																},
																"nativeSrc": "5956:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5956:32:1"
															},
															"nativeSrc": "5953:119:1",
															"nodeType": "YulIf",
															"src": "5953:119:1"
														},
														{
															"nativeSrc": "6082:117:1",
															"nodeType": "YulBlock",
															"src": "6082:117:1",
															"statements": [
																{
																	"nativeSrc": "6097:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6097:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6111:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6111:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6101:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6101:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6126:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6126:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6161:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6161:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6172:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6172:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6157:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6157:3:1"
																				},
																				"nativeSrc": "6157:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6157:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6181:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6181:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6136:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6136:20:1"
																		},
																		"nativeSrc": "6136:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6136:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6126:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6126:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6209:118:1",
															"nodeType": "YulBlock",
															"src": "6209:118:1",
															"statements": [
																{
																	"nativeSrc": "6224:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6224:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6238:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6238:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6228:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6228:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6254:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6254:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6289:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6289:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6300:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6300:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6285:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6285:3:1"
																				},
																				"nativeSrc": "6285:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6285:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6309:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6309:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6264:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6264:20:1"
																		},
																		"nativeSrc": "6264:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6264:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6254:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6254:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5860:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5905:9:1",
														"nodeType": "YulTypedName",
														"src": "5905:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5916:7:1",
														"nodeType": "YulTypedName",
														"src": "5916:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5928:6:1",
														"nodeType": "YulTypedName",
														"src": "5928:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5936:6:1",
														"nodeType": "YulTypedName",
														"src": "5936:6:1",
														"type": ""
													}
												],
												"src": "5860:474:1"
											},
											{
												"body": {
													"nativeSrc": "6368:152:1",
													"nodeType": "YulBlock",
													"src": "6368:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6385:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6385:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6388:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6388:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6378:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6378:6:1"
																},
																"nativeSrc": "6378:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6378:88:1"
															},
															"nativeSrc": "6378:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6378:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6482:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6482:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6485:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6485:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6475:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6475:6:1"
																},
																"nativeSrc": "6475:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6475:15:1"
															},
															"nativeSrc": "6475:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6475:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6506:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6506:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6509:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6509:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6499:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6499:6:1"
																},
																"nativeSrc": "6499:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6499:15:1"
															},
															"nativeSrc": "6499:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6499:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6340:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6340:180:1"
											},
											{
												"body": {
													"nativeSrc": "6577:269:1",
													"nodeType": "YulBlock",
													"src": "6577:269:1",
													"statements": [
														{
															"nativeSrc": "6587:22:1",
															"nodeType": "YulAssignment",
															"src": "6587:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6601:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6601:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6607:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6607:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6597:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6597:3:1"
																},
																"nativeSrc": "6597:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6597:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6587:6:1"
																}
															]
														},
														{
															"nativeSrc": "6618:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6618:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6648:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6648:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6654:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6654:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6644:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6644:3:1"
																},
																"nativeSrc": "6644:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6644:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6622:18:1",
																	"nodeType": "YulTypedName",
																	"src": "6622:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6695:51:1",
																"nodeType": "YulBlock",
																"src": "6695:51:1",
																"statements": [
																	{
																		"nativeSrc": "6709:27:1",
																		"nodeType": "YulAssignment",
																		"src": "6709:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6723:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6723:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6731:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6731:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6719:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6719:3:1"
																			},
																			"nativeSrc": "6719:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6719:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6709:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6709:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6675:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6675:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6668:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6668:6:1"
																},
																"nativeSrc": "6668:26:1",
																"nodeType": "YulFunctionCall",
																"src": "6668:26:1"
															},
															"nativeSrc": "6665:81:1",
															"nodeType": "YulIf",
															"src": "6665:81:1"
														},
														{
															"body": {
																"nativeSrc": "6798:42:1",
																"nodeType": "YulBlock",
																"src": "6798:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6812:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6812:16:1"
																			},
																			"nativeSrc": "6812:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6812:18:1"
																		},
																		"nativeSrc": "6812:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6812:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6762:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6762:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6785:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6785:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6793:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6793:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6782:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6782:2:1"
																		},
																		"nativeSrc": "6782:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6782:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6759:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6759:2:1"
																},
																"nativeSrc": "6759:38:1",
																"nodeType": "YulFunctionCall",
																"src": "6759:38:1"
															},
															"nativeSrc": "6756:84:1",
															"nodeType": "YulIf",
															"src": "6756:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6526:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6561:4:1",
														"nodeType": "YulTypedName",
														"src": "6561:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6570:6:1",
														"nodeType": "YulTypedName",
														"src": "6570:6:1",
														"type": ""
													}
												],
												"src": "6526:320:1"
											},
											{
												"body": {
													"nativeSrc": "6896:61:1",
													"nodeType": "YulBlock",
													"src": "6896:61:1",
													"statements": [
														{
															"nativeSrc": "6906:45:1",
															"nodeType": "YulAssignment",
															"src": "6906:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6921:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6921:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6928:22:1",
																		"nodeType": "YulLiteral",
																		"src": "6928:22:1",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6917:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6917:3:1"
																},
																"nativeSrc": "6917:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6917:34:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6906:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6906:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "6852:105:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6878:5:1",
														"nodeType": "YulTypedName",
														"src": "6878:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6888:7:1",
														"nodeType": "YulTypedName",
														"src": "6888:7:1",
														"type": ""
													}
												],
												"src": "6852:105:1"
											},
											{
												"body": {
													"nativeSrc": "7005:78:1",
													"nodeType": "YulBlock",
													"src": "7005:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7061:16:1",
																"nodeType": "YulBlock",
																"src": "7061:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7070:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7070:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7073:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7073:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7063:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7063:6:1"
																			},
																			"nativeSrc": "7063:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7063:12:1"
																		},
																		"nativeSrc": "7063:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7063:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7028:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7028:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7052:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "7052:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "7035:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "7035:16:1"
																				},
																				"nativeSrc": "7035:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7035:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7025:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7025:2:1"
																		},
																		"nativeSrc": "7025:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7025:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7018:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:1"
																},
																"nativeSrc": "7018:42:1",
																"nodeType": "YulFunctionCall",
																"src": "7018:42:1"
															},
															"nativeSrc": "7015:62:1",
															"nodeType": "YulIf",
															"src": "7015:62:1"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "6963:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6998:5:1",
														"nodeType": "YulTypedName",
														"src": "6998:5:1",
														"type": ""
													}
												],
												"src": "6963:120:1"
											},
											{
												"body": {
													"nativeSrc": "7151:79:1",
													"nodeType": "YulBlock",
													"src": "7151:79:1",
													"statements": [
														{
															"nativeSrc": "7161:22:1",
															"nodeType": "YulAssignment",
															"src": "7161:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7176:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7176:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7170:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7170:5:1"
																},
																"nativeSrc": "7170:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7170:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7161:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7161:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7218:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7218:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "7192:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "7192:25:1"
																},
																"nativeSrc": "7192:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7192:32:1"
															},
															"nativeSrc": "7192:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "7192:32:1"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "7089:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7129:6:1",
														"nodeType": "YulTypedName",
														"src": "7129:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7137:3:1",
														"nodeType": "YulTypedName",
														"src": "7137:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7145:5:1",
														"nodeType": "YulTypedName",
														"src": "7145:5:1",
														"type": ""
													}
												],
												"src": "7089:141:1"
											},
											{
												"body": {
													"nativeSrc": "7278:78:1",
													"nodeType": "YulBlock",
													"src": "7278:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7334:16:1",
																"nodeType": "YulBlock",
																"src": "7334:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7343:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7343:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7346:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7346:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7336:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7336:6:1"
																			},
																			"nativeSrc": "7336:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7336:12:1"
																		},
																		"nativeSrc": "7336:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7336:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7301:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7301:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7325:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "7325:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "7308:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "7308:16:1"
																				},
																				"nativeSrc": "7308:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7308:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7298:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7298:2:1"
																		},
																		"nativeSrc": "7298:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7298:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7291:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7291:6:1"
																},
																"nativeSrc": "7291:42:1",
																"nodeType": "YulFunctionCall",
																"src": "7291:42:1"
															},
															"nativeSrc": "7288:62:1",
															"nodeType": "YulIf",
															"src": "7288:62:1"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "7236:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7271:5:1",
														"nodeType": "YulTypedName",
														"src": "7271:5:1",
														"type": ""
													}
												],
												"src": "7236:120:1"
											},
											{
												"body": {
													"nativeSrc": "7424:79:1",
													"nodeType": "YulBlock",
													"src": "7424:79:1",
													"statements": [
														{
															"nativeSrc": "7434:22:1",
															"nodeType": "YulAssignment",
															"src": "7434:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7449:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7449:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7443:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7443:5:1"
																},
																"nativeSrc": "7443:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7443:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7434:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7434:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7491:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7491:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "7465:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "7465:25:1"
																},
																"nativeSrc": "7465:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7465:32:1"
															},
															"nativeSrc": "7465:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "7465:32:1"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "7362:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7402:6:1",
														"nodeType": "YulTypedName",
														"src": "7402:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7410:3:1",
														"nodeType": "YulTypedName",
														"src": "7410:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7418:5:1",
														"nodeType": "YulTypedName",
														"src": "7418:5:1",
														"type": ""
													}
												],
												"src": "7362:141:1"
											},
											{
												"body": {
													"nativeSrc": "7572:80:1",
													"nodeType": "YulBlock",
													"src": "7572:80:1",
													"statements": [
														{
															"nativeSrc": "7582:22:1",
															"nodeType": "YulAssignment",
															"src": "7582:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7597:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7597:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7591:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7591:5:1"
																},
																"nativeSrc": "7591:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7591:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7582:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7582:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7640:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7640:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7613:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "7613:26:1"
																},
																"nativeSrc": "7613:33:1",
																"nodeType": "YulFunctionCall",
																"src": "7613:33:1"
															},
															"nativeSrc": "7613:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "7613:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7509:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7550:6:1",
														"nodeType": "YulTypedName",
														"src": "7550:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7558:3:1",
														"nodeType": "YulTypedName",
														"src": "7558:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7566:5:1",
														"nodeType": "YulTypedName",
														"src": "7566:5:1",
														"type": ""
													}
												],
												"src": "7509:143:1"
											},
											{
												"body": {
													"nativeSrc": "7800:829:1",
													"nodeType": "YulBlock",
													"src": "7800:829:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7847:83:1",
																"nodeType": "YulBlock",
																"src": "7847:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7849:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7849:77:1"
																			},
																			"nativeSrc": "7849:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7849:79:1"
																		},
																		"nativeSrc": "7849:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7849:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7821:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7821:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7830:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7830:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7817:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:1"
																		},
																		"nativeSrc": "7817:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7817:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7842:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7842:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7813:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7813:3:1"
																},
																"nativeSrc": "7813:33:1",
																"nodeType": "YulFunctionCall",
																"src": "7813:33:1"
															},
															"nativeSrc": "7810:120:1",
															"nodeType": "YulIf",
															"src": "7810:120:1"
														},
														{
															"nativeSrc": "7940:127:1",
															"nodeType": "YulBlock",
															"src": "7940:127:1",
															"statements": [
																{
																	"nativeSrc": "7955:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7955:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7969:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7969:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7959:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7959:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7984:73:1",
																	"nodeType": "YulAssignment",
																	"src": "7984:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8029:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8029:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8040:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8040:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8025:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8025:3:1"
																				},
																				"nativeSrc": "8025:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8025:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8049:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8049:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "7994:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "7994:30:1"
																		},
																		"nativeSrc": "7994:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7994:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7984:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7984:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8077:128:1",
															"nodeType": "YulBlock",
															"src": "8077:128:1",
															"statements": [
																{
																	"nativeSrc": "8092:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8092:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8106:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8106:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8096:6:1",
																			"nodeType": "YulTypedName",
																			"src": "8096:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8122:73:1",
																	"nodeType": "YulAssignment",
																	"src": "8122:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8167:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8167:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8178:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8178:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8163:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8163:3:1"
																				},
																				"nativeSrc": "8163:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8163:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8187:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8187:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "8132:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "8132:30:1"
																		},
																		"nativeSrc": "8132:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8132:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8122:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8122:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8215:129:1",
															"nodeType": "YulBlock",
															"src": "8215:129:1",
															"statements": [
																{
																	"nativeSrc": "8230:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8230:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8244:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8244:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8234:6:1",
																			"nodeType": "YulTypedName",
																			"src": "8234:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8260:74:1",
																	"nodeType": "YulAssignment",
																	"src": "8260:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8306:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8306:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8317:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8317:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8302:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8302:3:1"
																				},
																				"nativeSrc": "8302:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8302:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8326:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8326:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8270:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "8270:31:1"
																		},
																		"nativeSrc": "8270:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8270:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8260:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8260:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8354:129:1",
															"nodeType": "YulBlock",
															"src": "8354:129:1",
															"statements": [
																{
																	"nativeSrc": "8369:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8369:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8383:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8383:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8373:6:1",
																			"nodeType": "YulTypedName",
																			"src": "8373:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8399:74:1",
																	"nodeType": "YulAssignment",
																	"src": "8399:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8445:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8445:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8456:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8456:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8441:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8441:3:1"
																				},
																				"nativeSrc": "8441:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8441:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8465:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8465:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8409:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "8409:31:1"
																		},
																		"nativeSrc": "8409:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8409:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8399:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8399:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8493:129:1",
															"nodeType": "YulBlock",
															"src": "8493:129:1",
															"statements": [
																{
																	"nativeSrc": "8508:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8508:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8522:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8522:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8512:6:1",
																			"nodeType": "YulTypedName",
																			"src": "8512:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8539:73:1",
																	"nodeType": "YulAssignment",
																	"src": "8539:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8584:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8584:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8595:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8595:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8580:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8580:3:1"
																				},
																				"nativeSrc": "8580:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8580:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8604:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8604:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "8549:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "8549:30:1"
																		},
																		"nativeSrc": "8549:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8549:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "8539:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8539:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "7658:971:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7738:9:1",
														"nodeType": "YulTypedName",
														"src": "7738:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7749:7:1",
														"nodeType": "YulTypedName",
														"src": "7749:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7761:6:1",
														"nodeType": "YulTypedName",
														"src": "7761:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7769:6:1",
														"nodeType": "YulTypedName",
														"src": "7769:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7777:6:1",
														"nodeType": "YulTypedName",
														"src": "7777:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7785:6:1",
														"nodeType": "YulTypedName",
														"src": "7785:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7793:6:1",
														"nodeType": "YulTypedName",
														"src": "7793:6:1",
														"type": ""
													}
												],
												"src": "7658:971:1"
											},
											{
												"body": {
													"nativeSrc": "8741:72:1",
													"nodeType": "YulBlock",
													"src": "8741:72:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8763:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8763:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8771:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8771:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8759:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8759:3:1"
																		},
																		"nativeSrc": "8759:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8759:14:1"
																	},
																	{
																		"hexValue": "4d7573742073656e642045544820746f206d696e7420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "8775:30:1",
																		"nodeType": "YulLiteral",
																		"src": "8775:30:1",
																		"type": "",
																		"value": "Must send ETH to mint tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8752:6:1"
																},
																"nativeSrc": "8752:54:1",
																"nodeType": "YulFunctionCall",
																"src": "8752:54:1"
															},
															"nativeSrc": "8752:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "8752:54:1"
														}
													]
												},
												"name": "store_literal_in_memory_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7",
												"nativeSrc": "8635:178:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8733:6:1",
														"nodeType": "YulTypedName",
														"src": "8733:6:1",
														"type": ""
													}
												],
												"src": "8635:178:1"
											},
											{
												"body": {
													"nativeSrc": "8965:220:1",
													"nodeType": "YulBlock",
													"src": "8965:220:1",
													"statements": [
														{
															"nativeSrc": "8975:74:1",
															"nodeType": "YulAssignment",
															"src": "8975:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9041:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9041:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9046:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9046:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8982:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "8982:58:1"
																},
																"nativeSrc": "8982:67:1",
																"nodeType": "YulFunctionCall",
																"src": "8982:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8975:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8975:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9147:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9147:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7",
																	"nativeSrc": "9058:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "9058:88:1"
																},
																"nativeSrc": "9058:93:1",
																"nodeType": "YulFunctionCall",
																"src": "9058:93:1"
															},
															"nativeSrc": "9058:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "9058:93:1"
														},
														{
															"nativeSrc": "9160:19:1",
															"nodeType": "YulAssignment",
															"src": "9160:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9171:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9176:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9176:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9167:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9167:3:1"
																},
																"nativeSrc": "9167:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9167:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9160:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9160:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8819:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8953:3:1",
														"nodeType": "YulTypedName",
														"src": "8953:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8961:3:1",
														"nodeType": "YulTypedName",
														"src": "8961:3:1",
														"type": ""
													}
												],
												"src": "8819:366:1"
											},
											{
												"body": {
													"nativeSrc": "9362:248:1",
													"nodeType": "YulBlock",
													"src": "9362:248:1",
													"statements": [
														{
															"nativeSrc": "9372:26:1",
															"nodeType": "YulAssignment",
															"src": "9372:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9384:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9384:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9395:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9395:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9380:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9380:3:1"
																},
																"nativeSrc": "9380:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9380:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9372:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9372:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9419:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9419:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9430:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9415:3:1"
																		},
																		"nativeSrc": "9415:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9415:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9438:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9438:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9444:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9444:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9434:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9434:3:1"
																		},
																		"nativeSrc": "9434:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9434:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9408:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9408:6:1"
																},
																"nativeSrc": "9408:47:1",
																"nodeType": "YulFunctionCall",
																"src": "9408:47:1"
															},
															"nativeSrc": "9408:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "9408:47:1"
														},
														{
															"nativeSrc": "9464:139:1",
															"nodeType": "YulAssignment",
															"src": "9464:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9598:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9598:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9472:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "9472:124:1"
																},
																"nativeSrc": "9472:131:1",
																"nodeType": "YulFunctionCall",
																"src": "9472:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9464:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9464:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9191:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9342:9:1",
														"nodeType": "YulTypedName",
														"src": "9342:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9357:4:1",
														"nodeType": "YulTypedName",
														"src": "9357:4:1",
														"type": ""
													}
												],
												"src": "9191:419:1"
											},
											{
												"body": {
													"nativeSrc": "9722:64:1",
													"nodeType": "YulBlock",
													"src": "9722:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9744:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9744:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9752:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9752:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9740:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9740:3:1"
																		},
																		"nativeSrc": "9740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9740:14:1"
																	},
																	{
																		"hexValue": "496e76616c6964206f7261636c65207072696365",
																		"kind": "string",
																		"nativeSrc": "9756:22:1",
																		"nodeType": "YulLiteral",
																		"src": "9756:22:1",
																		"type": "",
																		"value": "Invalid oracle price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9733:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:1"
																},
																"nativeSrc": "9733:46:1",
																"nodeType": "YulFunctionCall",
																"src": "9733:46:1"
															},
															"nativeSrc": "9733:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "9733:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265",
												"nativeSrc": "9616:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9714:6:1",
														"nodeType": "YulTypedName",
														"src": "9714:6:1",
														"type": ""
													}
												],
												"src": "9616:170:1"
											},
											{
												"body": {
													"nativeSrc": "9938:220:1",
													"nodeType": "YulBlock",
													"src": "9938:220:1",
													"statements": [
														{
															"nativeSrc": "9948:74:1",
															"nodeType": "YulAssignment",
															"src": "9948:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10014:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10014:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10019:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10019:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9955:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "9955:58:1"
																},
																"nativeSrc": "9955:67:1",
																"nodeType": "YulFunctionCall",
																"src": "9955:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9948:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9948:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10120:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10120:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265",
																	"nativeSrc": "10031:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "10031:88:1"
																},
																"nativeSrc": "10031:93:1",
																"nodeType": "YulFunctionCall",
																"src": "10031:93:1"
															},
															"nativeSrc": "10031:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "10031:93:1"
														},
														{
															"nativeSrc": "10133:19:1",
															"nodeType": "YulAssignment",
															"src": "10133:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10144:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10144:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10149:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10149:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10140:3:1"
																},
																"nativeSrc": "10140:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10140:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10133:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9792:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9926:3:1",
														"nodeType": "YulTypedName",
														"src": "9926:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9934:3:1",
														"nodeType": "YulTypedName",
														"src": "9934:3:1",
														"type": ""
													}
												],
												"src": "9792:366:1"
											},
											{
												"body": {
													"nativeSrc": "10335:248:1",
													"nodeType": "YulBlock",
													"src": "10335:248:1",
													"statements": [
														{
															"nativeSrc": "10345:26:1",
															"nodeType": "YulAssignment",
															"src": "10345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10357:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10357:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10368:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10353:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10353:3:1"
																},
																"nativeSrc": "10353:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10345:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10392:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10392:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10403:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10403:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10388:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10388:3:1"
																		},
																		"nativeSrc": "10388:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10388:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10411:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10411:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10417:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10417:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10407:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10407:3:1"
																		},
																		"nativeSrc": "10407:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10407:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10381:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10381:6:1"
																},
																"nativeSrc": "10381:47:1",
																"nodeType": "YulFunctionCall",
																"src": "10381:47:1"
															},
															"nativeSrc": "10381:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "10381:47:1"
														},
														{
															"nativeSrc": "10437:139:1",
															"nodeType": "YulAssignment",
															"src": "10437:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10571:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10571:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10445:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "10445:124:1"
																},
																"nativeSrc": "10445:131:1",
																"nodeType": "YulFunctionCall",
																"src": "10445:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10437:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10437:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10164:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10315:9:1",
														"nodeType": "YulTypedName",
														"src": "10315:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10330:4:1",
														"nodeType": "YulTypedName",
														"src": "10330:4:1",
														"type": ""
													}
												],
												"src": "10164:419:1"
											},
											{
												"body": {
													"nativeSrc": "10617:152:1",
													"nodeType": "YulBlock",
													"src": "10617:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10634:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10634:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10637:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10637:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10627:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10627:6:1"
																},
																"nativeSrc": "10627:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10627:88:1"
															},
															"nativeSrc": "10627:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10627:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10731:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10731:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10734:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10734:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10724:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10724:6:1"
																},
																"nativeSrc": "10724:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10724:15:1"
															},
															"nativeSrc": "10724:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10724:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10755:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10755:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10758:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10758:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10748:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10748:6:1"
																},
																"nativeSrc": "10748:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10748:15:1"
															},
															"nativeSrc": "10748:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10748:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10589:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10589:180:1"
											},
											{
												"body": {
													"nativeSrc": "10823:362:1",
													"nodeType": "YulBlock",
													"src": "10823:362:1",
													"statements": [
														{
															"nativeSrc": "10833:25:1",
															"nodeType": "YulAssignment",
															"src": "10833:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10856:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10856:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10838:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10838:17:1"
																},
																"nativeSrc": "10838:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10838:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10833:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10833:1:1"
																}
															]
														},
														{
															"nativeSrc": "10867:25:1",
															"nodeType": "YulAssignment",
															"src": "10867:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10890:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10890:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10872:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10872:17:1"
																},
																"nativeSrc": "10872:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10872:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10867:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10867:1:1"
																}
															]
														},
														{
															"nativeSrc": "10901:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10901:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10924:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10924:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10927:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10927:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10920:3:1"
																},
																"nativeSrc": "10920:9:1",
																"nodeType": "YulFunctionCall",
																"src": "10920:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10905:11:1",
																	"nodeType": "YulTypedName",
																	"src": "10905:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10938:41:1",
															"nodeType": "YulAssignment",
															"src": "10938:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10967:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "10967:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10949:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10949:17:1"
																},
																"nativeSrc": "10949:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10949:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10938:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "10938:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11156:22:1",
																"nodeType": "YulBlock",
																"src": "11156:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11158:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11158:16:1"
																			},
																			"nativeSrc": "11158:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11158:18:1"
																		},
																		"nativeSrc": "11158:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11158:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11089:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "11089:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11082:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "11082:6:1"
																				},
																				"nativeSrc": "11082:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11082:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11112:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "11112:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11119:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "11119:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11128:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "11128:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11115:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "11115:3:1"
																						},
																						"nativeSrc": "11115:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "11115:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11109:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "11109:2:1"
																				},
																				"nativeSrc": "11109:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11109:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11062:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11062:2:1"
																		},
																		"nativeSrc": "11062:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11062:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11042:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11042:6:1"
																},
																"nativeSrc": "11042:113:1",
																"nodeType": "YulFunctionCall",
																"src": "11042:113:1"
															},
															"nativeSrc": "11039:139:1",
															"nodeType": "YulIf",
															"src": "11039:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10775:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10806:1:1",
														"nodeType": "YulTypedName",
														"src": "10806:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10809:1:1",
														"nodeType": "YulTypedName",
														"src": "10809:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10815:7:1",
														"nodeType": "YulTypedName",
														"src": "10815:7:1",
														"type": ""
													}
												],
												"src": "10775:410:1"
											},
											{
												"body": {
													"nativeSrc": "11219:152:1",
													"nodeType": "YulBlock",
													"src": "11219:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11236:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11236:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11239:77:1",
																		"nodeType": "YulLiteral",
																		"src": "11239:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11229:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11229:6:1"
																},
																"nativeSrc": "11229:88:1",
																"nodeType": "YulFunctionCall",
																"src": "11229:88:1"
															},
															"nativeSrc": "11229:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "11229:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11333:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11333:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11336:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11336:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11326:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11326:6:1"
																},
																"nativeSrc": "11326:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11326:15:1"
															},
															"nativeSrc": "11326:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11326:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11357:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11357:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11360:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11360:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11350:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11350:6:1"
																},
																"nativeSrc": "11350:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11350:15:1"
															},
															"nativeSrc": "11350:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11350:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11191:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "11191:180:1"
											},
											{
												"body": {
													"nativeSrc": "11419:143:1",
													"nodeType": "YulBlock",
													"src": "11419:143:1",
													"statements": [
														{
															"nativeSrc": "11429:25:1",
															"nodeType": "YulAssignment",
															"src": "11429:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11452:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11452:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11434:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11434:17:1"
																},
																"nativeSrc": "11434:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11434:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11429:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11429:1:1"
																}
															]
														},
														{
															"nativeSrc": "11463:25:1",
															"nodeType": "YulAssignment",
															"src": "11463:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11486:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11486:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11468:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11468:17:1"
																},
																"nativeSrc": "11468:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11468:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11463:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11463:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11510:22:1",
																"nodeType": "YulBlock",
																"src": "11510:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11512:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11512:16:1"
																			},
																			"nativeSrc": "11512:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11512:18:1"
																		},
																		"nativeSrc": "11512:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11512:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11507:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11507:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11500:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11500:6:1"
																},
																"nativeSrc": "11500:9:1",
																"nodeType": "YulFunctionCall",
																"src": "11500:9:1"
															},
															"nativeSrc": "11497:35:1",
															"nodeType": "YulIf",
															"src": "11497:35:1"
														},
														{
															"nativeSrc": "11542:14:1",
															"nodeType": "YulAssignment",
															"src": "11542:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11551:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11551:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11554:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11554:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11547:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11547:3:1"
																},
																"nativeSrc": "11547:9:1",
																"nodeType": "YulFunctionCall",
																"src": "11547:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11542:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11542:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11377:185:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11408:1:1",
														"nodeType": "YulTypedName",
														"src": "11408:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11411:1:1",
														"nodeType": "YulTypedName",
														"src": "11411:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11417:1:1",
														"nodeType": "YulTypedName",
														"src": "11417:1:1",
														"type": ""
													}
												],
												"src": "11377:185:1"
											},
											{
												"body": {
													"nativeSrc": "11722:288:1",
													"nodeType": "YulBlock",
													"src": "11722:288:1",
													"statements": [
														{
															"nativeSrc": "11732:26:1",
															"nodeType": "YulAssignment",
															"src": "11732:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11744:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11744:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11755:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11755:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11740:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11740:3:1"
																},
																"nativeSrc": "11740:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11740:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11732:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11732:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11812:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11812:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11825:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11825:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11836:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11836:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11821:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11821:3:1"
																		},
																		"nativeSrc": "11821:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11821:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11768:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11768:43:1"
																},
																"nativeSrc": "11768:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11768:71:1"
															},
															"nativeSrc": "11768:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "11768:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11893:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11893:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11906:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11906:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11917:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11917:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11902:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11902:3:1"
																		},
																		"nativeSrc": "11902:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11902:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11849:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11849:43:1"
																},
																"nativeSrc": "11849:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11849:72:1"
															},
															"nativeSrc": "11849:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11849:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11975:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11975:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11988:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11988:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11999:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11999:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11984:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11984:3:1"
																		},
																		"nativeSrc": "11984:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11984:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11931:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11931:43:1"
																},
																"nativeSrc": "11931:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11931:72:1"
															},
															"nativeSrc": "11931:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11931:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11568:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11678:9:1",
														"nodeType": "YulTypedName",
														"src": "11678:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11690:6:1",
														"nodeType": "YulTypedName",
														"src": "11690:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11698:6:1",
														"nodeType": "YulTypedName",
														"src": "11698:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11706:6:1",
														"nodeType": "YulTypedName",
														"src": "11706:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11717:4:1",
														"nodeType": "YulTypedName",
														"src": "11717:4:1",
														"type": ""
													}
												],
												"src": "11568:442:1"
											},
											{
												"body": {
													"nativeSrc": "12060:147:1",
													"nodeType": "YulBlock",
													"src": "12060:147:1",
													"statements": [
														{
															"nativeSrc": "12070:25:1",
															"nodeType": "YulAssignment",
															"src": "12070:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12093:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12093:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12075:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12075:17:1"
																},
																"nativeSrc": "12075:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12075:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12070:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12070:1:1"
																}
															]
														},
														{
															"nativeSrc": "12104:25:1",
															"nodeType": "YulAssignment",
															"src": "12104:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12127:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12127:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12109:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12109:17:1"
																},
																"nativeSrc": "12109:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12109:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12104:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12104:1:1"
																}
															]
														},
														{
															"nativeSrc": "12138:16:1",
															"nodeType": "YulAssignment",
															"src": "12138:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12149:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12149:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12152:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12152:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12145:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12145:3:1"
																},
																"nativeSrc": "12145:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12145:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12138:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12138:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12178:22:1",
																"nodeType": "YulBlock",
																"src": "12178:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12180:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12180:16:1"
																			},
																			"nativeSrc": "12180:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12180:18:1"
																		},
																		"nativeSrc": "12180:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12180:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12170:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12170:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12173:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12173:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12167:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12167:2:1"
																},
																"nativeSrc": "12167:10:1",
																"nodeType": "YulFunctionCall",
																"src": "12167:10:1"
															},
															"nativeSrc": "12164:36:1",
															"nodeType": "YulIf",
															"src": "12164:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12016:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12047:1:1",
														"nodeType": "YulTypedName",
														"src": "12047:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12050:1:1",
														"nodeType": "YulTypedName",
														"src": "12050:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12056:3:1",
														"nodeType": "YulTypedName",
														"src": "12056:3:1",
														"type": ""
													}
												],
												"src": "12016:191:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must send ETH to mint tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid oracle price\")\n\n    }\n\n    function abi_encode_t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a6575f3560e01c80637b9629db116100635780637b9629db146101dc5780638da5cb5b1461020657806395d89b4114610230578063a9059cbb1461025a578063bc4d279714610296578063dd62ed3e146102a0576100a6565b806306fdde03146100aa578063095ea7b3146100d457806318160ddd1461011057806323b872dd1461013a578063313ce5671461017657806370a08231146101a0575b5f5ffd5b3480156100b5575f5ffd5b506100be6102dc565b6040516100cb9190610e8f565b60405180910390f35b3480156100df575f5ffd5b506100fa60048036038101906100f59190610f40565b61036c565b6040516101079190610f98565b60405180910390f35b34801561011b575f5ffd5b5061012461038e565b6040516101319190610fc0565b60405180910390f35b348015610145575f5ffd5b50610160600480360381019061015b9190610fd9565b610397565b60405161016d9190610f98565b60405180910390f35b348015610181575f5ffd5b5061018a6103c5565b6040516101979190611044565b60405180910390f35b3480156101ab575f5ffd5b506101c660048036038101906101c1919061105d565b6103cd565b6040516101d39190610fc0565b60405180910390f35b3480156101e7575f5ffd5b506101f0610412565b6040516101fd91906110a0565b60405180910390f35b348015610211575f5ffd5b5061021a6104af565b60405161022791906110c8565b60405180910390f35b34801561023b575f5ffd5b506102446104d4565b6040516102519190610e8f565b60405180910390f35b348015610265575f5ffd5b50610280600480360381019061027b9190610f40565b610564565b60405161028d9190610f98565b60405180910390f35b61029e610586565b005b3480156102ab575f5ffd5b506102c660048036038101906102c191906110e1565b61079a565b6040516102d39190610fc0565b60405180910390f35b6060600380546102eb9061114c565b80601f01602080910402602001604051908101604052809291908181526020018280546103179061114c565b80156103625780601f1061033957610100808354040283529160200191610362565b820191905f5260205f20905b81548152906001019060200180831161034557829003601f168201915b5050505050905090565b5f5f61037661081c565b9050610383818585610823565b600191505092915050565b5f600254905090565b5f5f6103a161081c565b90506103ae858285610835565b6103b98585856108c8565b60019150509392505050565b5f6012905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561047e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a291906111f9565b5050509150508091505090565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546104e39061114c565b80601f016020809104026020016040519081016040528092919081815260200182805461050f9061114c565b801561055a5780601f106105315761010080835404028352916020019161055a565b820191905f5260205f20905b81548152906001019060200180831161053d57829003601f168201915b5050505050905090565b5f5f61056e61081c565b905061057b8185856108c8565b600191505092915050565b5f34116105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf906112ba565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610633573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065791906111f9565b5050509150505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106c8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ec91906111f9565b5050509150505f8213801561070057505f81135b61073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690611322565b60405180910390fd5b5f8290505f8290505f670de0b6b3a7640000833461075d919061136d565b61076791906113db565b90505f826402540be4008361077c919061136d565b61078691906113db565b905061079233826109b8565b505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6108308383836001610a37565b505050565b5f610840848461079a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108c257818110156108b3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108aa9392919061140b565b60405180910390fd5b6108c184848484035f610a37565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610938575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161092f91906110c8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a8575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161099f91906110c8565b60405180910390fd5b6109b3838383610c06565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a28575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a1f91906110c8565b60405180910390fd5b610a335f8383610c06565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610aa7575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a9e91906110c8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b17575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b0e91906110c8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c00578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bf79190610fc0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c56578060025f828254610c4a9190611440565b92505081905550610d24565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610cdf578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610cd69392919061140b565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d6b578060025f8282540392505081905550610db5565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e129190610fc0565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610e6182610e1f565b610e6b8185610e29565b9350610e7b818560208601610e39565b610e8481610e47565b840191505092915050565b5f6020820190508181035f830152610ea78184610e57565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610edc82610eb3565b9050919050565b610eec81610ed2565b8114610ef6575f5ffd5b50565b5f81359050610f0781610ee3565b92915050565b5f819050919050565b610f1f81610f0d565b8114610f29575f5ffd5b50565b5f81359050610f3a81610f16565b92915050565b5f5f60408385031215610f5657610f55610eaf565b5b5f610f6385828601610ef9565b9250506020610f7485828601610f2c565b9150509250929050565b5f8115159050919050565b610f9281610f7e565b82525050565b5f602082019050610fab5f830184610f89565b92915050565b610fba81610f0d565b82525050565b5f602082019050610fd35f830184610fb1565b92915050565b5f5f5f60608486031215610ff057610fef610eaf565b5b5f610ffd86828701610ef9565b935050602061100e86828701610ef9565b925050604061101f86828701610f2c565b9150509250925092565b5f60ff82169050919050565b61103e81611029565b82525050565b5f6020820190506110575f830184611035565b92915050565b5f6020828403121561107257611071610eaf565b5b5f61107f84828501610ef9565b91505092915050565b5f819050919050565b61109a81611088565b82525050565b5f6020820190506110b35f830184611091565b92915050565b6110c281610ed2565b82525050565b5f6020820190506110db5f8301846110b9565b92915050565b5f5f604083850312156110f7576110f6610eaf565b5b5f61110485828601610ef9565b925050602061111585828601610ef9565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061116357607f821691505b6020821081036111765761117561111f565b5b50919050565b5f69ffffffffffffffffffff82169050919050565b61119a8161117c565b81146111a4575f5ffd5b50565b5f815190506111b581611191565b92915050565b6111c481611088565b81146111ce575f5ffd5b50565b5f815190506111df816111bb565b92915050565b5f815190506111f381610f16565b92915050565b5f5f5f5f5f60a0868803121561121257611211610eaf565b5b5f61121f888289016111a7565b9550506020611230888289016111d1565b9450506040611241888289016111e5565b9350506060611252888289016111e5565b9250506080611263888289016111a7565b9150509295509295909350565b7f4d7573742073656e642045544820746f206d696e7420746f6b656e73000000005f82015250565b5f6112a4601c83610e29565b91506112af82611270565b602082019050919050565b5f6020820190508181035f8301526112d181611298565b9050919050565b7f496e76616c6964206f7261636c652070726963650000000000000000000000005f82015250565b5f61130c601483610e29565b9150611317826112d8565b602082019050919050565b5f6020820190508181035f83015261133981611300565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61137782610f0d565b915061138283610f0d565b925082820261139081610f0d565b915082820484148315176113a7576113a6611340565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6113e582610f0d565b91506113f083610f0d565b925082611400576113ff6113ae565b5b828204905092915050565b5f60608201905061141e5f8301866110b9565b61142b6020830185610fb1565b6114386040830184610fb1565b949350505050565b5f61144a82610f0d565b915061145583610f0d565b925082820190508082111561146d5761146c611340565b5b9291505056fea2646970667358221220fe2a6c45c2d86b721fab0b0039a3d3f6e4b3d885ee939a4a6c4dacada0669b7264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B9629DB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x7B9629DB EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xBC4D2797 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A0 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xFD9 JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x244 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2EB SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x317 SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x362 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x339 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x362 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x345 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x376 PUSH2 0x81C JUMP JUMPDEST SWAP1 POP PUSH2 0x383 DUP2 DUP6 DUP6 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3A1 PUSH2 0x81C JUMP JUMPDEST SWAP1 POP PUSH2 0x3AE DUP6 DUP3 DUP6 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x3B9 DUP6 DUP6 DUP6 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4E3 SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50F SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x531 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x56E PUSH2 0x81C JUMP JUMPDEST SWAP1 POP PUSH2 0x57B DUP2 DUP6 DUP6 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x5C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP3 SGT DUP1 ISZERO PUSH2 0x700 JUMPI POP PUSH0 DUP2 SGT JUMPDEST PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x736 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 DUP3 SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 CALLVALUE PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x767 SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH5 0x2540BE400 DUP4 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x786 SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP PUSH2 0x792 CALLER DUP3 PUSH2 0x9B8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x830 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA37 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x840 DUP5 DUP5 PUSH2 0x79A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x8C2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8B3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA37 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x938 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B3 DUP4 DUP4 DUP4 PUSH2 0xC06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA28 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA33 PUSH0 DUP4 DUP4 PUSH2 0xC06 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC00 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC56 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD24 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCDF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDB5 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE12 SWAP2 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE61 DUP3 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xE6B DUP2 DUP6 PUSH2 0xE29 JUMP JUMPDEST SWAP4 POP PUSH2 0xE7B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE39 JUMP JUMPDEST PUSH2 0xE84 DUP2 PUSH2 0xE47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEA7 DUP2 DUP5 PUSH2 0xE57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEDC DUP3 PUSH2 0xEB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0xED2 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF07 DUP2 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1F DUP2 PUSH2 0xF0D JUMP JUMPDEST DUP2 EQ PUSH2 0xF29 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF3A DUP2 PUSH2 0xF16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF56 JUMPI PUSH2 0xF55 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF63 DUP6 DUP3 DUP7 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF74 DUP6 DUP3 DUP7 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF92 DUP2 PUSH2 0xF7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH0 DUP4 ADD DUP5 PUSH2 0xF89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFBA DUP2 PUSH2 0xF0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFD3 PUSH0 DUP4 ADD DUP5 PUSH2 0xFB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFF0 JUMPI PUSH2 0xFEF PUSH2 0xEAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFFD DUP7 DUP3 DUP8 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x100E DUP7 DUP3 DUP8 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x101F DUP7 DUP3 DUP8 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x103E DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1057 PUSH0 DUP4 ADD DUP5 PUSH2 0x1035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1072 JUMPI PUSH2 0x1071 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x107F DUP5 DUP3 DUP6 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109A DUP2 PUSH2 0x1088 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1091 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10C2 DUP2 PUSH2 0xED2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DB PUSH0 DUP4 ADD DUP5 PUSH2 0x10B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F7 JUMPI PUSH2 0x10F6 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1104 DUP6 DUP3 DUP7 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1115 DUP6 DUP3 DUP7 ADD PUSH2 0xEF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1163 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1176 JUMPI PUSH2 0x1175 PUSH2 0x111F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119A DUP2 PUSH2 0x117C JUMP JUMPDEST DUP2 EQ PUSH2 0x11A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11B5 DUP2 PUSH2 0x1191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C4 DUP2 PUSH2 0x1088 JUMP JUMPDEST DUP2 EQ PUSH2 0x11CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11DF DUP2 PUSH2 0x11BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11F3 DUP2 PUSH2 0xF16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH2 0x1211 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x121F DUP9 DUP3 DUP10 ADD PUSH2 0x11A7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1230 DUP9 DUP3 DUP10 ADD PUSH2 0x11D1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1241 DUP9 DUP3 DUP10 ADD PUSH2 0x11E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1252 DUP9 DUP3 DUP10 ADD PUSH2 0x11E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1263 DUP9 DUP3 DUP10 ADD PUSH2 0x11A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544820746F206D696E7420746F6B656E7300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12A4 PUSH1 0x1C DUP4 PUSH2 0xE29 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AF DUP3 PUSH2 0x1270 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12D1 DUP2 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F7261636C65207072696365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x130C PUSH1 0x14 DUP4 PUSH2 0xE29 JUMP JUMPDEST SWAP2 POP PUSH2 0x1317 DUP3 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1339 DUP2 PUSH2 0x1300 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1377 DUP3 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1382 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1390 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x13A7 JUMPI PUSH2 0x13A6 PUSH2 0x1340 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x13E5 DUP3 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x13F0 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1400 JUMPI PUSH2 0x13FF PUSH2 0x13AE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x141E PUSH0 DUP4 ADD DUP7 PUSH2 0x10B9 JUMP JUMPDEST PUSH2 0x142B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x1438 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFB1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x144A DUP3 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1455 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x146D JUMPI PUSH2 0x146C PUSH2 0x1340 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x2A PUSH13 0x45C2D86B721FAB0B0039A3D3F6 RETF 0xB3 0xD8 DUP6 RETURNCONTRACT 0x93 SWAP11 BLOBBASEFEE PUSH13 0x4DACADA0669B7264736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "22544:2286:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13268:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15487:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14338:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16265:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14196:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14493:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23205:211;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22747:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13470:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14804:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23497:1331;;;:::i;:::-;;15040:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13268:89;13313:13;13345:5;13338:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13268:89;:::o;15487:186::-;15560:4;15576:13;15592:12;:10;:12::i;:::-;15576:28;;15614:31;15623:5;15630:7;15639:5;15614:8;:31::i;:::-;15662:4;15655:11;;;15487:186;;;;:::o;14338:97::-;14390:7;14416:12;;14409:19;;14338:97;:::o;16265:244::-;16352:4;16368:15;16386:12;:10;:12::i;:::-;16368:30;;16408:37;16424:4;16430:7;16439:5;16408:15;:37::i;:::-;16455:26;16465:4;16471:2;16475:5;16455:9;:26::i;:::-;16498:4;16491:11;;;16265:244;;;;;:::o;14196:82::-;14245:5;14269:2;14262:9;;14196:82;:::o;14493:116::-;14558:7;14584:9;:18;14594:7;14584:18;;;;;;;;;;;;;;;;14577:25;;14493:116;;;:::o;23205:211::-;23255:3;23273:9;23289:15;;;;;;;;;;;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23270:52;;;;;;23339:5;23332:12;;;23205:211;:::o;22747:20::-;;;;;;;;;;;;;:::o;13470:93::-;13517:13;13549:7;13542:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13470:93;:::o;14804:178::-;14873:4;14889:13;14905:12;:10;:12::i;:::-;14889:28;;14927:27;14937:5;14944:2;14948:5;14927:9;:27::i;:::-;14971:4;14964:11;;;14804:178;;;;:::o;23497:1331::-;23569:1;23557:9;:13;23549:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;23661:12;23680:15;;;;;;;;;;;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23658:55;;;;;;23760:12;23779:15;;;;;;;;;;;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23757:55;;;;;;23875:1;23864:8;:12;:28;;;;;23891:1;23880:8;:12;23864:28;23856:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;23990:20;24021:8;23990:40;;24040:20;24071:8;24040:40;;24356:32;24420:4;24404:12;24392:9;:24;;;;:::i;:::-;24391:33;;;;:::i;:::-;24356:68;;24637:24;24706:12;24693:8;24665:24;:37;;;;:::i;:::-;24664:54;;;;:::i;:::-;24637:81;;24786:35;24792:10;24804:16;24786:5;:35::i;:::-;23539:1289;;;;;;23497:1331::o;15040:140::-;15120:7;15146:11;:18;15158:5;15146:18;;;;;;;;;;;;;;;:27;15165:7;15146:27;;;;;;;;;;;;;;;;15139:34;;15040:140;;;;:::o;4816:96::-;4869:7;4895:10;4888:17;;4816:96;:::o;20215:128::-;20299:37;20308:5;20315:7;20324:5;20331:4;20299:8;:37::i;:::-;20215:128;;;:::o;21904:476::-;22003:24;22030:25;22040:5;22047:7;22030:9;:25::i;:::-;22003:52;;22088:17;22069:16;:36;22065:309;;;22144:5;22125:16;:24;22121:130;;;22203:7;22212:16;22230:5;22176:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;22121:130;22292:57;22301:5;22308:7;22336:5;22317:16;:24;22343:5;22292:8;:57::i;:::-;22065:309;21993:387;21904:476;;;:::o;16882:300::-;16981:1;16965:18;;:4;:18;;;16961:86;;17033:1;17006:30;;;;;;;;;;;:::i;:::-;;;;;;;;16961:86;17074:1;17060:16;;:2;:16;;;17056:86;;17128:1;17099:32;;;;;;;;;;;:::i;:::-;;;;;;;;17056:86;17151:24;17159:4;17165:2;17169:5;17151:7;:24::i;:::-;16882:300;;;:::o;18947:208::-;19036:1;19017:21;;:7;:21;;;19013:91;;19090:1;19061:32;;;;;;;;;;;:::i;:::-;;;;;;;;19013:91;19113:35;19129:1;19133:7;19142:5;19113:7;:35::i;:::-;18947:208;;:::o;21190:432::-;21319:1;21302:19;;:5;:19;;;21298:89;;21373:1;21344:32;;;;;;;;;;;:::i;:::-;;;;;;;;21298:89;21419:1;21400:21;;:7;:21;;;21396:90;;21472:1;21444:31;;;;;;;;;;;:::i;:::-;;;;;;;;21396:90;21525:5;21495:11;:18;21507:5;21495:18;;;;;;;;;;;;;;;:27;21514:7;21495:27;;;;;;;;;;;;;;;:35;;;;21544:9;21540:76;;;21590:7;21574:31;;21583:5;21574:31;;;21599:5;21574:31;;;;;;:::i;:::-;;;;;;;;21540:76;21190:432;;;;:::o;17497:1107::-;17602:1;17586:18;;:4;:18;;;17582:540;;17738:5;17722:12;;:21;;;;;;;:::i;:::-;;;;;;;;17582:540;;;17774:19;17796:9;:15;17806:4;17796:15;;;;;;;;;;;;;;;;17774:37;;17843:5;17829:11;:19;17825:115;;;17900:4;17906:11;17919:5;17875:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17825:115;18092:5;18078:11;:19;18060:9;:15;18070:4;18060:15;;;;;;;;;;;;;;;:37;;;;17760:362;17582:540;18150:1;18136:16;;:2;:16;;;18132:425;;18315:5;18299:12;;:21;;;;;;;;;;;18132:425;;;18527:5;18510:9;:13;18520:2;18510:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;18132:425;18587:2;18572:25;;18581:4;18572:25;;;18591:5;18572:25;;;;;;:::i;:::-;;;;;;;;17497:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:76::-;5117:7;5146:5;5135:16;;5081:76;;;:::o;5163:115::-;5248:23;5265:5;5248:23;:::i;:::-;5243:3;5236:36;5163:115;;:::o;5284:218::-;5375:4;5413:2;5402:9;5398:18;5390:26;;5426:69;5492:1;5481:9;5477:17;5468:6;5426:69;:::i;:::-;5284:218;;;;:::o;5508:118::-;5595:24;5613:5;5595:24;:::i;:::-;5590:3;5583:37;5508:118;;:::o;5632:222::-;5725:4;5763:2;5752:9;5748:18;5740:26;;5776:71;5844:1;5833:9;5829:17;5820:6;5776:71;:::i;:::-;5632:222;;;;:::o;5860:474::-;5928:6;5936;5985:2;5973:9;5964:7;5960:23;5956:32;5953:119;;;5991:79;;:::i;:::-;5953:119;6111:1;6136:53;6181:7;6172:6;6161:9;6157:22;6136:53;:::i;:::-;6126:63;;6082:117;6238:2;6264:53;6309:7;6300:6;6289:9;6285:22;6264:53;:::i;:::-;6254:63;;6209:118;5860:474;;;;;:::o;6340:180::-;6388:77;6385:1;6378:88;6485:4;6482:1;6475:15;6509:4;6506:1;6499:15;6526:320;6570:6;6607:1;6601:4;6597:12;6587:22;;6654:1;6648:4;6644:12;6675:18;6665:81;;6731:4;6723:6;6719:17;6709:27;;6665:81;6793:2;6785:6;6782:14;6762:18;6759:38;6756:84;;6812:18;;:::i;:::-;6756:84;6577:269;6526:320;;;:::o;6852:105::-;6888:7;6928:22;6921:5;6917:34;6906:45;;6852:105;;;:::o;6963:120::-;7035:23;7052:5;7035:23;:::i;:::-;7028:5;7025:34;7015:62;;7073:1;7070;7063:12;7015:62;6963:120;:::o;7089:141::-;7145:5;7176:6;7170:13;7161:22;;7192:32;7218:5;7192:32;:::i;:::-;7089:141;;;;:::o;7236:120::-;7308:23;7325:5;7308:23;:::i;:::-;7301:5;7298:34;7288:62;;7346:1;7343;7336:12;7288:62;7236:120;:::o;7362:141::-;7418:5;7449:6;7443:13;7434:22;;7465:32;7491:5;7465:32;:::i;:::-;7362:141;;;;:::o;7509:143::-;7566:5;7597:6;7591:13;7582:22;;7613:33;7640:5;7613:33;:::i;:::-;7509:143;;;;:::o;7658:971::-;7761:6;7769;7777;7785;7793;7842:3;7830:9;7821:7;7817:23;7813:33;7810:120;;;7849:79;;:::i;:::-;7810:120;7969:1;7994:63;8049:7;8040:6;8029:9;8025:22;7994:63;:::i;:::-;7984:73;;7940:127;8106:2;8132:63;8187:7;8178:6;8167:9;8163:22;8132:63;:::i;:::-;8122:73;;8077:128;8244:2;8270:64;8326:7;8317:6;8306:9;8302:22;8270:64;:::i;:::-;8260:74;;8215:129;8383:2;8409:64;8465:7;8456:6;8445:9;8441:22;8409:64;:::i;:::-;8399:74;;8354:129;8522:3;8549:63;8604:7;8595:6;8584:9;8580:22;8549:63;:::i;:::-;8539:73;;8493:129;7658:971;;;;;;;;:::o;8635:178::-;8775:30;8771:1;8763:6;8759:14;8752:54;8635:178;:::o;8819:366::-;8961:3;8982:67;9046:2;9041:3;8982:67;:::i;:::-;8975:74;;9058:93;9147:3;9058:93;:::i;:::-;9176:2;9171:3;9167:12;9160:19;;8819:366;;;:::o;9191:419::-;9357:4;9395:2;9384:9;9380:18;9372:26;;9444:9;9438:4;9434:20;9430:1;9419:9;9415:17;9408:47;9472:131;9598:4;9472:131;:::i;:::-;9464:139;;9191:419;;;:::o;9616:170::-;9756:22;9752:1;9744:6;9740:14;9733:46;9616:170;:::o;9792:366::-;9934:3;9955:67;10019:2;10014:3;9955:67;:::i;:::-;9948:74;;10031:93;10120:3;10031:93;:::i;:::-;10149:2;10144:3;10140:12;10133:19;;9792:366;;;:::o;10164:419::-;10330:4;10368:2;10357:9;10353:18;10345:26;;10417:9;10411:4;10407:20;10403:1;10392:9;10388:17;10381:47;10445:131;10571:4;10445:131;:::i;:::-;10437:139;;10164:419;;;:::o;10589:180::-;10637:77;10634:1;10627:88;10734:4;10731:1;10724:15;10758:4;10755:1;10748:15;10775:410;10815:7;10838:20;10856:1;10838:20;:::i;:::-;10833:25;;10872:20;10890:1;10872:20;:::i;:::-;10867:25;;10927:1;10924;10920:9;10949:30;10967:11;10949:30;:::i;:::-;10938:41;;11128:1;11119:7;11115:15;11112:1;11109:22;11089:1;11082:9;11062:83;11039:139;;11158:18;;:::i;:::-;11039:139;10823:362;10775:410;;;;:::o;11191:180::-;11239:77;11236:1;11229:88;11336:4;11333:1;11326:15;11360:4;11357:1;11350:15;11377:185;11417:1;11434:20;11452:1;11434:20;:::i;:::-;11429:25;;11468:20;11486:1;11468:20;:::i;:::-;11463:25;;11507:1;11497:35;;11512:18;;:::i;:::-;11497:35;11554:1;11551;11547:9;11542:14;;11377:185;;;;:::o;11568:442::-;11717:4;11755:2;11744:9;11740:18;11732:26;;11768:71;11836:1;11825:9;11821:17;11812:6;11768:71;:::i;:::-;11849:72;11917:2;11906:9;11902:18;11893:6;11849:72;:::i;:::-;11931;11999:2;11988:9;11984:18;11975:6;11931:72;:::i;:::-;11568:442;;;;;;:::o;12016:191::-;12056:3;12075:20;12093:1;12075:20;:::i;:::-;12070:25;;12109:20;12127:1;12109:20;:::i;:::-;12104:25;;12152:1;12149;12145:9;12138:16;;12173:3;12170:1;12167:10;12164:36;;;12180:18;;:::i;:::-;12164:36;12016:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1057800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2939",
								"decimals()": "427",
								"getLatestBtcPrice()": "infinite",
								"mintWithEther()": "infinite",
								"name()": "infinite",
								"owner()": "2530",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22544,
									"end": 24830,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22778,
									"end": 23129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "53796E74686574696320426974636F696E000000000000000000000000000000"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "PUSH",
									"source": 0,
									"value": "7342544300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13164,
									"end": 13169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13156,
									"end": 13161,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 13156,
									"end": 13169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13156,
									"end": 13169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13156,
									"end": 13169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 13156,
									"end": 13169,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13156,
									"end": 13169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13156,
									"end": 13169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13156,
									"end": 13169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13156,
									"end": 13169,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 13156,
									"end": 13169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13156,
									"end": 13169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13189,
									"end": 13196,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13179,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13179,
									"end": 13196,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13179,
									"end": 13196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13179,
									"end": 13196,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13179,
									"end": 13196,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13179,
									"end": 13196,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13179,
									"end": 13196,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13179,
									"end": 13196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13179,
									"end": 13196,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13179,
									"end": 13196,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13179,
									"end": 13196,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13090,
									"end": 13203,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22845,
									"end": 22855,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22842,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 22837,
									"end": 22842,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22837,
									"end": 22855,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22986,
									"end": 23028,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "694AA1769357215DE4FAC081BF1F309ADC325306"
								},
								{
									"begin": 22946,
									"end": 22961,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 22946,
									"end": 22961,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23029,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23079,
									"end": 23121,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1B44F3514812D835EB1BDB0ACB33D3FA3351EE43"
								},
								{
									"begin": 23039,
									"end": 23054,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 23039,
									"end": 23054,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23039,
									"end": 23122,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22544,
									"end": 24830,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe2a6c45c2d86b721fab0b0039a3d3f6e4b3d885ee939a4a6c4dacada0669b7264736f6c634300081e0033",
									".code": [
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "7B9629DB"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "7B9629DB"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "BC4D2797"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22544,
											"end": 24830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13268,
											"end": 13357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13268,
											"end": 13357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15487,
											"end": 15673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15487,
											"end": 15673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15487,
											"end": 15673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14338,
											"end": 14435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14338,
											"end": 14435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16265,
											"end": 16509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 16265,
											"end": 16509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16265,
											"end": 16509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14196,
											"end": 14278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14196,
											"end": 14278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14493,
											"end": 14609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14493,
											"end": 14609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14493,
											"end": 14609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23205,
											"end": 23416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23205,
											"end": 23416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22747,
											"end": 22767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 22747,
											"end": 22767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13470,
											"end": 13563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13470,
											"end": 13563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14804,
											"end": 14982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14804,
											"end": 14982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14804,
											"end": 14982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23497,
											"end": 24828,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23497,
											"end": 24828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23497,
											"end": 24828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23497,
											"end": 24828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23497,
											"end": 24828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23497,
											"end": 24828,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23497,
											"end": 24828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23497,
											"end": 24828,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 15040,
											"end": 15180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15040,
											"end": 15180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15040,
											"end": 15180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13326,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13345,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13338,
											"end": 13350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13338,
											"end": 13350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15560,
											"end": 15564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15576,
											"end": 15589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15592,
											"end": 15604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 15592,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 15592,
											"end": 15604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15604,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 15592,
											"end": 15604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15614,
											"end": 15645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15623,
											"end": 15628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15630,
											"end": 15637,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15644,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15614,
											"end": 15622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15614,
											"end": 15645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15614,
											"end": 15645,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15614,
											"end": 15645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15662,
											"end": 15666,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15655,
											"end": 15666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14390,
											"end": 14397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14416,
											"end": 14428,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14416,
											"end": 14428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14409,
											"end": 14428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16352,
											"end": 16356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16368,
											"end": 16383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16386,
											"end": 16398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 16386,
											"end": 16396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16386,
											"end": 16398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16386,
											"end": 16398,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 16386,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16408,
											"end": 16445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 16424,
											"end": 16428,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16430,
											"end": 16437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16439,
											"end": 16444,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16408,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16408,
											"end": 16445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16408,
											"end": 16445,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 16408,
											"end": 16445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16455,
											"end": 16481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16465,
											"end": 16469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16475,
											"end": 16480,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16455,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 16455,
											"end": 16481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16455,
											"end": 16481,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16455,
											"end": 16481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16502,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16491,
											"end": 16502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14245,
											"end": 14250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14269,
											"end": 14271,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14262,
											"end": 14271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14262,
											"end": 14271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14584,
											"end": 14593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14594,
											"end": 14601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23255,
											"end": 23258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23273,
											"end": 23282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23289,
											"end": 23304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23289,
											"end": 23320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23320,
											"name": "PUSH",
											"source": 0,
											"value": "FEAF968C"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23289,
											"end": 23322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23289,
											"end": 23322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23339,
											"end": 23344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23332,
											"end": 23344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23332,
											"end": 23344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23332,
											"end": 23344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23205,
											"end": 23416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22747,
											"end": 22767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13517,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13549,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13542,
											"end": 13556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13542,
											"end": 13556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14873,
											"end": 14877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14889,
											"end": 14902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14905,
											"end": 14917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14905,
											"end": 14915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14905,
											"end": 14917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14905,
											"end": 14917,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14905,
											"end": 14917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14889,
											"end": 14917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14889,
											"end": 14917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14937,
											"end": 14942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14946,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14953,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14927,
											"end": 14954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14954,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14927,
											"end": 14954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14975,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14964,
											"end": 14975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14964,
											"end": 14975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14964,
											"end": 14975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23497,
											"end": 24828,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23497,
											"end": 24828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23569,
											"end": 23570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23557,
											"end": 23566,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23557,
											"end": 23570,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23549,
											"end": 23603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23549,
											"end": 23603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23680,
											"end": 23695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23680,
											"end": 23711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23711,
											"name": "PUSH",
											"source": 0,
											"value": "FEAF968C"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23680,
											"end": 23713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 23680,
											"end": 23713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23760,
											"end": 23772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23779,
											"end": 23794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23779,
											"end": 23810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23810,
											"name": "PUSH",
											"source": 0,
											"value": "FEAF968C"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23779,
											"end": 23812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23779,
											"end": 23812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23757,
											"end": 23812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23757,
											"end": 23812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23757,
											"end": 23812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23757,
											"end": 23812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23757,
											"end": 23812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23757,
											"end": 23812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23864,
											"end": 23872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23864,
											"end": 23876,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 23864,
											"end": 23892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23864,
											"end": 23892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23864,
											"end": 23892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23864,
											"end": 23892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23864,
											"end": 23892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23880,
											"end": 23888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23892,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 23864,
											"end": 23892,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23864,
											"end": 23892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 23856,
											"end": 23917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23856,
											"end": 23917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24021,
											"end": 24029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24040,
											"end": 24060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24071,
											"end": 24079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24040,
											"end": 24080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24040,
											"end": 24080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24420,
											"end": 24424,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 24404,
											"end": 24416,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24401,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24392,
											"end": 24416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24392,
											"end": 24416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24416,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24392,
											"end": 24416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 24391,
											"end": 24424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24391,
											"end": 24424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24391,
											"end": 24424,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 24391,
											"end": 24424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24637,
											"end": 24661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24706,
											"end": 24718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24693,
											"end": 24701,
											"name": "PUSH",
											"source": 0,
											"value": "2540BE400"
										},
										{
											"begin": 24665,
											"end": 24689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24665,
											"end": 24702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24665,
											"end": 24702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24702,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24665,
											"end": 24702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24664,
											"end": 24718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24664,
											"end": 24718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24718,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24664,
											"end": 24718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24637,
											"end": 24718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24637,
											"end": 24718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24792,
											"end": 24802,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24786,
											"end": 24821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24821,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24786,
											"end": 24821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23539,
											"end": 24828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23539,
											"end": 24828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23539,
											"end": 24828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23539,
											"end": 24828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23539,
											"end": 24828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23539,
											"end": 24828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23497,
											"end": 24828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15146,
											"end": 15157,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15158,
											"end": 15163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15146,
											"end": 15164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15165,
											"end": 15172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15173,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4912,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4816,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4905,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20215,
											"end": 20343,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 20215,
											"end": 20343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20299,
											"end": 20336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 20308,
											"end": 20313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20315,
											"end": 20322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20331,
											"end": 20335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20299,
											"end": 20307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 20299,
											"end": 20336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20299,
											"end": 20336,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 20299,
											"end": 20336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20215,
											"end": 20343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20215,
											"end": 20343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20215,
											"end": 20343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20215,
											"end": 20343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21904,
											"end": 22380,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 21904,
											"end": 22380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22003,
											"end": 22027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22030,
											"end": 22055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 22040,
											"end": 22045,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22047,
											"end": 22054,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22030,
											"end": 22039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 22030,
											"end": 22055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22030,
											"end": 22055,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 22030,
											"end": 22055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22003,
											"end": 22055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22003,
											"end": 22055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22069,
											"end": 22085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22069,
											"end": 22105,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22065,
											"end": 22374,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22065,
											"end": 22374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 22065,
											"end": 22374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22144,
											"end": 22149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22125,
											"end": 22141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22125,
											"end": 22149,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22121,
											"end": 22251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22121,
											"end": 22251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 22121,
											"end": 22251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22203,
											"end": 22210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22212,
											"end": 22228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22230,
											"end": 22235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 22176,
											"end": 22236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22121,
											"end": 22251,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 22121,
											"end": 22251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22292,
											"end": 22349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 22301,
											"end": 22306,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22308,
											"end": 22315,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 22341,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22317,
											"end": 22333,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22317,
											"end": 22341,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22343,
											"end": 22348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22292,
											"end": 22300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 22292,
											"end": 22349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22292,
											"end": 22349,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 22292,
											"end": 22349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22065,
											"end": 22374,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 22065,
											"end": 22374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21993,
											"end": 22380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21904,
											"end": 22380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21904,
											"end": 22380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21904,
											"end": 22380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21904,
											"end": 22380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 17182,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 16882,
											"end": 17182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16981,
											"end": 16982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16965,
											"end": 16983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16965,
											"end": 16983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 16969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 16983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16965,
											"end": 16983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 16983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 17047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 16961,
											"end": 17047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 17006,
											"end": 17036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17036,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 17047,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 16961,
											"end": 17047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17060,
											"end": 17076,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17060,
											"end": 17076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17060,
											"end": 17062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17060,
											"end": 17076,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17060,
											"end": 17076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17060,
											"end": 17076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17056,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 17056,
											"end": 17142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 17099,
											"end": 17131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17056,
											"end": 17142,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 17056,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17151,
											"end": 17175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 17159,
											"end": 17163,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17165,
											"end": 17167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17169,
											"end": 17174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17151,
											"end": 17158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17151,
											"end": 17175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17151,
											"end": 17175,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 17151,
											"end": 17175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 17182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 17182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 17182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 17182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19036,
											"end": 19037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19017,
											"end": 19038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19017,
											"end": 19038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19017,
											"end": 19038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19038,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 19013,
											"end": 19104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19090,
											"end": 19091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 19061,
											"end": 19093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19061,
											"end": 19093,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19104,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 19013,
											"end": 19104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19113,
											"end": 19148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 19129,
											"end": 19130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19133,
											"end": 19140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19142,
											"end": 19147,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19113,
											"end": 19120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 19113,
											"end": 19148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19113,
											"end": 19148,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 19113,
											"end": 19148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18947,
											"end": 19155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21622,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 21190,
											"end": 21622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21319,
											"end": 21320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21302,
											"end": 21321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21302,
											"end": 21321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21302,
											"end": 21307,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21302,
											"end": 21321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21302,
											"end": 21321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21302,
											"end": 21321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 21298,
											"end": 21387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21373,
											"end": 21374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 21344,
											"end": 21376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21387,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 21298,
											"end": 21387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21419,
											"end": 21420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21400,
											"end": 21421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21400,
											"end": 21421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21400,
											"end": 21407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21400,
											"end": 21421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21400,
											"end": 21421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21400,
											"end": 21421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21396,
											"end": 21486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21396,
											"end": 21486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21472,
											"end": 21473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 21444,
											"end": 21475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21444,
											"end": 21475,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21396,
											"end": 21486,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21396,
											"end": 21486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21525,
											"end": 21530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21506,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21507,
											"end": 21512,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21514,
											"end": 21521,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21495,
											"end": 21522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21530,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21544,
											"end": 21553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21540,
											"end": 21616,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21540,
											"end": 21616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21540,
											"end": 21616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21590,
											"end": 21597,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21583,
											"end": 21588,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21599,
											"end": 21604,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21574,
											"end": 21605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21574,
											"end": 21605,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21540,
											"end": 21616,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21540,
											"end": 21616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 18604,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17497,
											"end": 18604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17602,
											"end": 17603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17586,
											"end": 17604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17586,
											"end": 17604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17586,
											"end": 17604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17586,
											"end": 17604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17582,
											"end": 18122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 17582,
											"end": 18122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17738,
											"end": 17743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17734,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17722,
											"end": 17734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 17722,
											"end": 17743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17722,
											"end": 17743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17582,
											"end": 18122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17582,
											"end": 18122,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17582,
											"end": 18122,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 17582,
											"end": 18122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17774,
											"end": 17793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17796,
											"end": 17805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17806,
											"end": 17810,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 17811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17774,
											"end": 17811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17774,
											"end": 17811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17843,
											"end": 17848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17829,
											"end": 17840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17829,
											"end": 17848,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17825,
											"end": 17940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17825,
											"end": 17940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17825,
											"end": 17940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17900,
											"end": 17904,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17906,
											"end": 17917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17924,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 17875,
											"end": 17925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17875,
											"end": 17925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17825,
											"end": 17940,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17825,
											"end": 17940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18092,
											"end": 18097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18078,
											"end": 18089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18078,
											"end": 18097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18070,
											"end": 18074,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18060,
											"end": 18075,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18097,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17760,
											"end": 18122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17582,
											"end": 18122,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17582,
											"end": 18122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 18151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18136,
											"end": 18152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18136,
											"end": 18152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18136,
											"end": 18138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18136,
											"end": 18152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18136,
											"end": 18152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18136,
											"end": 18152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18132,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 18132,
											"end": 18557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18315,
											"end": 18320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18311,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18299,
											"end": 18311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18132,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 18132,
											"end": 18557,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18132,
											"end": 18557,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 18132,
											"end": 18557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18527,
											"end": 18532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18520,
											"end": 18522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18510,
											"end": 18532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18132,
											"end": 18557,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 18132,
											"end": 18557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18591,
											"end": 18596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 18572,
											"end": 18597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18572,
											"end": 18597,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 18604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 18604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 18604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 18604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5157,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5081,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5278,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5163,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5265,
											"end": 5270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5248,
											"end": 5271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5271,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5248,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5243,
											"end": 5246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5502,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5284,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5398,
											"end": 5416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5490,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5474,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5426,
											"end": 5495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5495,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5426,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5502,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5626,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5508,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5613,
											"end": 5618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5595,
											"end": 5619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5619,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5595,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5854,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5632,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5844,
											"end": 5845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5833,
											"end": 5842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5829,
											"end": 5846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5776,
											"end": 5847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5847,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5776,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 6334,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5860,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 5987,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5973,
											"end": 5982,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5971,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5960,
											"end": 5983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5988,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 6072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 5953,
											"end": 6072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5991,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 5991,
											"end": 6070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6070,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5991,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 6072,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 5953,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6181,
											"end": 6188,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6161,
											"end": 6170,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6136,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6136,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6136,
											"end": 6189,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6136,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6309,
											"end": 6316,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6289,
											"end": 6298,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6264,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6264,
											"end": 6317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6264,
											"end": 6317,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6264,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6254,
											"end": 6317,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6254,
											"end": 6317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 6334,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 6334,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 6334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 6334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6520,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6340,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6385,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6378,
											"end": 6466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6482,
											"end": 6483,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6506,
											"end": 6507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6514,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6846,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6526,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6608,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6609,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6587,
											"end": 6609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6587,
											"end": 6609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6655,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 6652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6665,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6665,
											"end": 6746,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6723,
											"end": 6729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 6736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 6736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 6736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6665,
											"end": 6746,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6665,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6793,
											"end": 6795,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6785,
											"end": 6791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6796,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6797,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6756,
											"end": 6840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6812,
											"end": 6830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6840,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6756,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6957,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6852,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6928,
											"end": 6950,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6921,
											"end": 6926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6917,
											"end": 6951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 6951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 6951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7083,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6963,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7035,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 7052,
											"end": 7057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7035,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 7035,
											"end": 7058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7035,
											"end": 7058,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 7035,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7059,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 7015,
											"end": 7077,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7070,
											"end": 7071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7075,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7077,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 7015,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7230,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7089,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7218,
											"end": 7223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7192,
											"end": 7224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7230,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7356,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 7236,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 7325,
											"end": 7330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7308,
											"end": 7331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 7308,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7332,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7288,
											"end": 7350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7343,
											"end": 7344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7350,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7288,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7503,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 7362,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7434,
											"end": 7456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7434,
											"end": 7456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7465,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 7491,
											"end": 7496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7465,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 7465,
											"end": 7497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7465,
											"end": 7497,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 7465,
											"end": 7497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7503,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7652,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7509,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7566,
											"end": 7571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7597,
											"end": 7603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7613,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7640,
											"end": 7645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7613,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 7613,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7613,
											"end": 7646,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7613,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7652,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 8629,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7658,
											"end": 8629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7777,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7793,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7830,
											"end": 7839,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7828,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7846,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7930,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7810,
											"end": 7930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7849,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7849,
											"end": 7928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7928,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7849,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7930,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7810,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7994,
											"end": 8057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 8049,
											"end": 8056,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8038,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8025,
											"end": 8047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7994,
											"end": 8057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8057,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7994,
											"end": 8057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8057,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8132,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 8187,
											"end": 8194,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8167,
											"end": 8176,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8132,
											"end": 8195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8195,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 8132,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8195,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8077,
											"end": 8205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8244,
											"end": 8246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8270,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 8326,
											"end": 8333,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8306,
											"end": 8315,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8270,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8270,
											"end": 8334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8270,
											"end": 8334,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 8270,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8334,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8385,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8409,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 8465,
											"end": 8472,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 8462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8454,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8441,
											"end": 8463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8409,
											"end": 8473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8473,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 8409,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8354,
											"end": 8483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8549,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 8604,
											"end": 8611,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8593,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8580,
											"end": 8602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8549,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8549,
											"end": 8612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8549,
											"end": 8612,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 8549,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8539,
											"end": 8612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8539,
											"end": 8612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 8629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 8629,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 8629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 8629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 8629,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 8629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 8629,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 8629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 8629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8635,
											"end": 8813,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 8635,
											"end": 8813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8775,
											"end": 8805,
											"name": "PUSH",
											"source": 1,
											"value": "4D7573742073656E642045544820746F206D696E7420746F6B656E7300000000"
										},
										{
											"begin": 8771,
											"end": 8772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 8773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8635,
											"end": 8813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8635,
											"end": 8813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 9185,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 8819,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8961,
											"end": 8964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8982,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 9046,
											"end": 9048,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 9041,
											"end": 9044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8982,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8982,
											"end": 9049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8982,
											"end": 9049,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 8982,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 9049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 9049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 9147,
											"end": 9150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9058,
											"end": 9151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9151,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 9058,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9176,
											"end": 9178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9167,
											"end": 9179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9160,
											"end": 9179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9160,
											"end": 9179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 9185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 9185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 9185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 9185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9191,
											"end": 9610,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9191,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9357,
											"end": 9361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9395,
											"end": 9397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9384,
											"end": 9393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9380,
											"end": 9398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9434,
											"end": 9454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9430,
											"end": 9431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 9598,
											"end": 9602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 9472,
											"end": 9603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9603,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 9472,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9191,
											"end": 9610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9191,
											"end": 9610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9191,
											"end": 9610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9191,
											"end": 9610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9786,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 9616,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9756,
											"end": 9778,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C6964206F7261636C65207072696365000000000000000000000000"
										},
										{
											"begin": 9752,
											"end": 9753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9744,
											"end": 9750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9934,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 10019,
											"end": 10021,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 10014,
											"end": 10017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 9955,
											"end": 10022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 10022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 10022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10120,
											"end": 10123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10031,
											"end": 10124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10149,
											"end": 10151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10140,
											"end": 10152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9792,
											"end": 10158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10330,
											"end": 10334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10368,
											"end": 10370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10357,
											"end": 10366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10417,
											"end": 10426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10407,
											"end": 10427,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10401,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10388,
											"end": 10405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10381,
											"end": 10428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 10571,
											"end": 10575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10445,
											"end": 10576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 10576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 10576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10769,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 10589,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10714,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10634,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10627,
											"end": 10715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 10738,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10731,
											"end": 10732,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10724,
											"end": 10739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10762,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10755,
											"end": 10756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10748,
											"end": 10763,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11185,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 10775,
											"end": 11185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10815,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10838,
											"end": 10858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10838,
											"end": 10858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10858,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10838,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10872,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10890,
											"end": 10891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10872,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10872,
											"end": 10892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10872,
											"end": 10892,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10872,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10867,
											"end": 10892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10867,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 10925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10929,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 10979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 10967,
											"end": 10978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 10979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10949,
											"end": 10979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 10979,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 10949,
											"end": 10979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11119,
											"end": 11126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11130,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11112,
											"end": 11113,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11109,
											"end": 11131,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11089,
											"end": 11090,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11082,
											"end": 11091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11062,
											"end": 11145,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11039,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 11039,
											"end": 11178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11158,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 11158,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 11158,
											"end": 11176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11158,
											"end": 11176,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 11158,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11039,
											"end": 11178,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 11039,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10823,
											"end": 11185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11185,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11191,
											"end": 11371,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 11191,
											"end": 11371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11239,
											"end": 11316,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11236,
											"end": 11237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11340,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11333,
											"end": 11334,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11326,
											"end": 11341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11360,
											"end": 11364,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11357,
											"end": 11358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11350,
											"end": 11365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11377,
											"end": 11562,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 11377,
											"end": 11562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11417,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11434,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 11452,
											"end": 11453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11434,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11434,
											"end": 11454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11434,
											"end": 11454,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 11434,
											"end": 11454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 11486,
											"end": 11487,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11468,
											"end": 11488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11488,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 11468,
											"end": 11488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11488,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11507,
											"end": 11508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11497,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11497,
											"end": 11532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 11512,
											"end": 11530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11497,
											"end": 11532,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11497,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11551,
											"end": 11552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11547,
											"end": 11556,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11377,
											"end": 11562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11377,
											"end": 11562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11377,
											"end": 11562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11377,
											"end": 11562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11377,
											"end": 11562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 12010,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 11568,
											"end": 12010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11717,
											"end": 11721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11755,
											"end": 11757,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11744,
											"end": 11753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11732,
											"end": 11758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11732,
											"end": 11758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11768,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11836,
											"end": 11837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11825,
											"end": 11834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11821,
											"end": 11838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11812,
											"end": 11818,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11768,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 11768,
											"end": 11839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11768,
											"end": 11839,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11768,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 11917,
											"end": 11919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11906,
											"end": 11915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11902,
											"end": 11920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 11899,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 11849,
											"end": 11921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11921,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 11849,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11931,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 11999,
											"end": 12001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11988,
											"end": 11997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11984,
											"end": 12002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11975,
											"end": 11981,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11931,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 11931,
											"end": 12003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11931,
											"end": 12003,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 11931,
											"end": 12003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 12010,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 12010,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 12010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 12010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 12010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 12010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 12010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12016,
											"end": 12207,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 12016,
											"end": 12207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12056,
											"end": 12059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 12093,
											"end": 12094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12075,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 12075,
											"end": 12095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12075,
											"end": 12095,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 12075,
											"end": 12095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12070,
											"end": 12095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12070,
											"end": 12095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12109,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 12127,
											"end": 12128,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12109,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 12109,
											"end": 12129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12109,
											"end": 12129,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 12109,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12104,
											"end": 12129,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12104,
											"end": 12129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12152,
											"end": 12153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12145,
											"end": 12154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12138,
											"end": 12154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12138,
											"end": 12154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12170,
											"end": 12171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12167,
											"end": 12177,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 12164,
											"end": 12200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 12180,
											"end": 12198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12200,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 12164,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12016,
											"end": 12207,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12016,
											"end": 12207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12016,
											"end": 12207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12016,
											"end": 12207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12016,
											"end": 12207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"SyntheticAssetToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getLatestBtcPrice()": "7b9629db",
							"mintWithEther()": "bc4d2797",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestBtcPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintWithEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SyntheticAssetToken_flattened.sol\":\"SyntheticAssetToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SyntheticAssetToken_flattened.sol\":{\"keccak256\":\"0x2118a669479810f254d32a19a123b24f375a195506250cb7af0699bb8d5754c5\",\"urls\":[\"bzz-raw://74420bb1f06681424c6e9c16c205fe9610d1fe676594f6c951342affb3b7eaf3\",\"dweb:/ipfs/QmUeBfQz7s2mKEJVEu7WjLKP41kwdZY1w7AaVdt8U2mco8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 324,
								"contract": "SyntheticAssetToken_flattened.sol:SyntheticAssetToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 330,
								"contract": "SyntheticAssetToken_flattened.sol:SyntheticAssetToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "SyntheticAssetToken_flattened.sol:SyntheticAssetToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 334,
								"contract": "SyntheticAssetToken_flattened.sol:SyntheticAssetToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 336,
								"contract": "SyntheticAssetToken_flattened.sol:SyntheticAssetToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 822,
								"contract": "SyntheticAssetToken_flattened.sol:SyntheticAssetToken",
								"label": "ethUsdPriceFeed",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 825,
								"contract": "SyntheticAssetToken_flattened.sol:SyntheticAssetToken",
								"label": "btcUsdPriceFeed",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 827,
								"contract": "SyntheticAssetToken_flattened.sol:SyntheticAssetToken",
								"label": "owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> SyntheticAssetToken_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "SyntheticAssetToken_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"SyntheticAssetToken_flattened.sol": {
				"ast": {
					"absolutePath": "SyntheticAssetToken_flattened.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							174
						],
						"ERC20": [
							816
						],
						"IERC1155Errors": [
							310
						],
						"IERC20": [
							122
						],
						"IERC20Errors": [
							215
						],
						"IERC20Metadata": [
							145
						],
						"IERC721Errors": [
							263
						],
						"SyntheticAssetToken": [
							944
						]
					},
					"id": 945,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "114:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "149:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "157:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "183:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "183:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "182:7:0"
									},
									"scope": 45,
									"src": "140:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "203:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "240:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "240:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "239:15:0"
									},
									"scope": 45,
									"src": "194:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "268:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "301:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:9:0"
									},
									"scope": 45,
									"src": "259:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "323:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "348:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "341:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "341:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "391:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "384:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "407:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "400:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "400:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "423:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "415:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "442:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "434:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "460:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "453:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "453:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:93:0"
									},
									"scope": 45,
									"src": "314:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "490:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "550:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "543:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "566:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "559:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "582:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "574:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "601:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "593:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "619:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "612:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "612:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:93:0"
									},
									"scope": 45,
									"src": "481:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 945,
							"src": "104:534:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 46,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "772:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 47,
								"nodeType": "StructuredDocumentation",
								"src": "798:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 122,
							"linearizedBaseContracts": [
								122
							],
							"name": "IERC20",
							"nameLocation": "880:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "893:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 56,
									"name": "Transfer",
									"nameLocation": "1062:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1087:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1071:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1109:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1093:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1121:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1113:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:57:0"
									},
									"src": "1056:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1134:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 65,
									"name": "Approval",
									"nameLocation": "1293:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1318:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1302:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1341:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1325:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1358:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1350:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:63:0"
									},
									"src": "1287:78:0"
								},
								{
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1450:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 122,
									"src": "1441:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1502:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1587:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1605:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1597:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:17:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1637:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:9:0"
									},
									"scope": 122,
									"src": "1578:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1652:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1879:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1896:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1888:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:27:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1933:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 86,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1933:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:6:0"
									},
									"scope": 122,
									"src": "1870:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "1945:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2223:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2256:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2248:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2232:32:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2288:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2287:9:0"
									},
									"scope": 122,
									"src": "2214:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2303:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2984:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3000:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2992:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3017:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3009:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2991:32:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:6:0"
									},
									"scope": 122,
									"src": "2975:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "3054:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3365:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3386:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3378:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3400:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3392:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3412:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3404:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:41:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3437:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3437:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3436:6:0"
									},
									"scope": 122,
									"src": "3356:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 945,
							"src": "870:2575:0",
							"usedErrors": [],
							"usedEvents": [
								56,
								65
							]
						},
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3617:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 125,
										"name": "IERC20",
										"nameLocations": [
											"3760:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 122,
										"src": "3760:6:0"
									},
									"id": 126,
									"nodeType": "InheritanceSpecifier",
									"src": "3760:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 124,
								"nodeType": "StructuredDocumentation",
								"src": "3644:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 145,
							"linearizedBaseContracts": [
								145,
								122
							],
							"name": "IERC20Metadata",
							"nameLocation": "3742:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3773:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3841:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3845:2:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3871:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3871:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3870:15:0"
									},
									"scope": 145,
									"src": "3832:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "3892:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3962:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3968:2:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3994:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3994:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:15:0"
									},
									"scope": 145,
									"src": "3953:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "4015:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4094:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4102:2:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4128:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 141,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4128:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4127:7:0"
									},
									"scope": 145,
									"src": "4085:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 945,
							"src": "3732:405:0",
							"usedErrors": [],
							"usedEvents": [
								56,
								65
							]
						},
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4261:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "4287:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 174,
							"linearizedBaseContracts": [
								174
							],
							"name": "Context",
							"nameLocation": "4802:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "4878:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 152,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4895:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4899:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4895:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 151,
												"id": 154,
												"nodeType": "Return",
												"src": "4888:17:0"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4825:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4835:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "4869:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4868:9:0"
									},
									"scope": 174,
									"src": "4816:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "4985:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 161,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5002:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5006:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "5002:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 160,
												"id": 163,
												"nodeType": "Return",
												"src": "4995:15:0"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4927:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4935:2:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4969:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4969:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:16:0"
									},
									"scope": 174,
									"src": "4918:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "5095:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5112:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 169,
												"id": 171,
												"nodeType": "Return",
												"src": "5105:8:0"
											}
										]
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "5032:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5052:2:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "5086:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5085:9:0"
									},
									"scope": 174,
									"src": "5023:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 945,
							"src": "4784:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "5269:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 176,
								"nodeType": "StructuredDocumentation",
								"src": "5295:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 215,
							"linearizedBaseContracts": [
								215
							],
							"name": "IERC20Errors",
							"nameLocation": "5447:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "5466:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 185,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5786:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5819:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5811:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5835:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5827:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5810:49:0"
									},
									"src": "5780:80:0"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "5866:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 190,
									"name": "ERC20InvalidSender",
									"nameLocation": "6029:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6056:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6048:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6047:16:0"
									},
									"src": "6023:41:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "6070:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 195,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "6240:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "6269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "6261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6260:18:0"
									},
									"src": "6234:45:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "6285:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 204,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6641:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "6668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6693:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "6685:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6712:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "6704:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:52:0"
									},
									"src": "6635:85:0"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "6726:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 209,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6911:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6940:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6932:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6931:18:0"
									},
									"src": "6905:45:0"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6956:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 214,
									"name": "ERC20InvalidSpender",
									"nameLocation": "7162:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "7182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7181:17:0"
									},
									"src": "7156:43:0"
								}
							],
							"scope": 945,
							"src": "5437:1764:0",
							"usedErrors": [
								185,
								190,
								195,
								204,
								209,
								214
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 216,
								"nodeType": "StructuredDocumentation",
								"src": "7203:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 263,
							"linearizedBaseContracts": [
								263
							],
							"name": "IERC721Errors",
							"nameLocation": "7357:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "7377:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 221,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7607:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "7626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7625:15:0"
									},
									"src": "7601:40:0"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "7647:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 226,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7790:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7821:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "7813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7812:17:0"
									},
									"src": "7784:46:0"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "7836:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 235,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "8136:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8165:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "8157:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8181:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "8173:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8198:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "8190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8156:48:0"
									},
									"src": "8130:75:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "8211:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 240,
									"name": "ERC721InvalidSender",
									"nameLocation": "8374:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8402:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "8394:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8393:16:0"
									},
									"src": "8368:42:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "8416:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 245,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "8586:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8616:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "8608:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8607:18:0"
									},
									"src": "8580:46:0"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "8632:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 252,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8890:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8925:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8917:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8943:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8935:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8916:35:0"
									},
									"src": "8884:68:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "8958:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 257,
									"name": "ERC721InvalidApprover",
									"nameLocation": "9143:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "9173:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "9165:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9164:18:0"
									},
									"src": "9137:46:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "9189:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 262,
									"name": "ERC721InvalidOperator",
									"nameLocation": "9397:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9427:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "9419:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9418:18:0"
									},
									"src": "9391:46:0"
								}
							],
							"scope": 945,
							"src": "7347:2092:0",
							"usedErrors": [
								221,
								226,
								235,
								240,
								245,
								252,
								257,
								262
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 264,
								"nodeType": "StructuredDocumentation",
								"src": "9441:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 310,
							"linearizedBaseContracts": [
								310
							],
							"name": "IERC1155Errors",
							"nameLocation": "9597:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "9618:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 275,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9990:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10025:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "10017:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "10041:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "10033:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "10058:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "10050:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10074:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "10066:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10016:66:0"
									},
									"src": "9984:99:0"
								},
								{
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "10089:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 280,
									"name": "ERC1155InvalidSender",
									"nameLocation": "10252:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10281:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "10273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10272:16:0"
									},
									"src": "10246:43:0"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "10295:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 285,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "10465:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "10496:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "10488:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10487:18:0"
									},
									"src": "10459:47:0"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "10512:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 292,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10779:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10816:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "10808:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10834:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "10826:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10807:33:0"
									},
									"src": "10773:68:0"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "10847:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 297,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "11032:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "11063:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "11055:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11054:18:0"
									},
									"src": "11026:47:0"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "11079:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 302,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "11287:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11318:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "11310:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11309:18:0"
									},
									"src": "11281:47:0"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "11334:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 309,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11625:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11659:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "11651:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11678:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "11670:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11650:41:0"
									},
									"src": "11619:73:0"
								}
							],
							"scope": 945,
							"src": "9587:2107:0",
							"usedErrors": [
								275,
								280,
								285,
								292,
								297,
								302,
								309
							],
							"usedEvents": []
						},
						{
							"id": 311,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11826:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 313,
										"name": "Context",
										"nameLocations": [
											"12641:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 174,
										"src": "12641:7:0"
									},
									"id": 314,
									"nodeType": "InheritanceSpecifier",
									"src": "12641:7:0"
								},
								{
									"baseName": {
										"id": 315,
										"name": "IERC20",
										"nameLocations": [
											"12650:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 122,
										"src": "12650:6:0"
									},
									"id": 316,
									"nodeType": "InheritanceSpecifier",
									"src": "12650:6:0"
								},
								{
									"baseName": {
										"id": 317,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12658:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 145,
										"src": "12658:14:0"
									},
									"id": 318,
									"nodeType": "InheritanceSpecifier",
									"src": "12658:14:0"
								},
								{
									"baseName": {
										"id": 319,
										"name": "IERC20Errors",
										"nameLocations": [
											"12674:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 215,
										"src": "12674:12:0"
									},
									"id": 320,
									"nodeType": "InheritanceSpecifier",
									"src": "12674:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 312,
								"nodeType": "StructuredDocumentation",
								"src": "11856:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816,
								215,
								145,
								122,
								174
							],
							"name": "ERC20",
							"nameLocation": "12632:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 324,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12737:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 816,
									"src": "12693:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 323,
										"keyName": "account",
										"keyNameLocation": "12709:7:0",
										"keyType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12701:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12693:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 322,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12720:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 330,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12825:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 816,
									"src": "12753:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 329,
										"keyName": "account",
										"keyNameLocation": "12769:7:0",
										"keyType": {
											"id": 325,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12761:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12753:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 328,
											"keyName": "spender",
											"keyNameLocation": "12796:7:0",
											"keyType": {
												"id": 326,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12788:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12780:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 327,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12807:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12859:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 816,
									"src": "12843:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12843:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12893:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 816,
									"src": "12878:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12878:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 336,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12919:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 816,
									"src": "12904:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 335,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12904:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "13146:57:0",
										"statements": [
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "13156:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 345,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "13164:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13156:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "13156:13:0"
											},
											{
												"expression": {
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 348,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "13179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 349,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "13189:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13179:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "13179:17:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "12933:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 353,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "13116:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "13102:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "13137:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "13123:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13123:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13101:44:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13146:0:0"
									},
									"scope": 816,
									"src": "13090:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										132
									],
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "13328:29:0",
										"statements": [
											{
												"expression": {
													"id": 359,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "13345:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 358,
												"id": 360,
												"nodeType": "Return",
												"src": "13338:12:0"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "13209:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "13277:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13281:2:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "13313:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 356,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13313:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13312:15:0"
									},
									"scope": 816,
									"src": "13268:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										138
									],
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "13532:31:0",
										"statements": [
											{
												"expression": {
													"id": 368,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 336,
													"src": "13549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 367,
												"id": 369,
												"nodeType": "Return",
												"src": "13542:14:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "13363:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13479:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13485:2:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "13517:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 365,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13517:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13516:15:0"
									},
									"scope": 816,
									"src": "13470:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										144
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "14252:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14269:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 376,
												"id": 378,
												"nodeType": "Return",
												"src": "14262:9:0"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "13569:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "14205:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14213:2:0"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "14245:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 374,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14245:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14244:7:0"
									},
									"scope": 816,
									"src": "14196:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										71
									],
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "14399:36:0",
										"statements": [
											{
												"expression": {
													"id": 386,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "14416:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 385,
												"id": 387,
												"nodeType": "Return",
												"src": "14409:19:0"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "14284:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14347:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14358:2:0"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "14390:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14389:9:0"
									},
									"scope": 816,
									"src": "14338:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										79
									],
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "14567:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 397,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "14584:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 399,
													"indexExpression": {
														"id": 398,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "14594:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14584:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 400,
												"nodeType": "Return",
												"src": "14577:25:0"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "14441:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14502:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14520:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "14512:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14511:17:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "14558:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14557:9:0"
									},
									"scope": 816,
									"src": "14493:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										89
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "14879:103:0",
										"statements": [
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14897:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "14889:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 412,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14889:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "14905:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14905:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14889:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "14937:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "14944:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "14948:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "14927:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14927:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "14927:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14971:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 411,
												"id": 424,
												"nodeType": "Return",
												"src": "14964:11:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "14615:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14813:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14830:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "14822:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14842:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "14834:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14821:27:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "14873:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14873:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14872:6:0"
									},
									"scope": 816,
									"src": "14804:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "15129:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 436,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "15146:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 438,
														"indexExpression": {
															"id": 437,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15158:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15146:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 440,
													"indexExpression": {
														"id": 439,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "15165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15146:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 435,
												"id": 441,
												"nodeType": "Return",
												"src": "15139:34:0"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "14988:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "15049:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15067:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "15059:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15082:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "15074:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15058:32:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "15120:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15119:9:0"
									},
									"scope": 816,
									"src": "15040:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										109
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "15566:107:0",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15584:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "15576:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 453,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15576:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 455,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "15592:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15592:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15576:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 459,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "15623:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "15630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "15639:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 458,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															707,
															767
														],
														"referencedDeclaration": 707,
														"src": "15614:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15614:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "15614:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15662:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 452,
												"id": 465,
												"nodeType": "Return",
												"src": "15655:11:0"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "15186:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15496:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15512:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "15504:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15529:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "15521:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15503:32:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "15560:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15560:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15559:6:0"
									},
									"scope": 816,
									"src": "15487:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										121
									],
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "16358:151:0",
										"statements": [
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16376:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "16368:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 479,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16368:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 483,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 481,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "16386:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16386:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16368:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "16424:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "16430:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "16439:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "16408:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16408:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "16408:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "16465:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "16471:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "16475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "16455:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16455:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "16455:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16498:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 478,
												"id": 497,
												"nodeType": "Return",
												"src": "16491:11:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "15679:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16274:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16295:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "16287:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16309:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "16301:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16321:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "16313:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16286:41:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "16352:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:6:0"
									},
									"scope": 816,
									"src": "16265:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "16951:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 509,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "16965:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16981:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16973:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 510,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16973:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16973:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16965:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 523,
												"nodeType": "IfStatement",
												"src": "16961:86:0",
												"trueBody": {
													"id": 522,
													"nodeType": "Block",
													"src": "16985:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17033:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17025:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 516,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17025:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17025:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 515,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "17006:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17006:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 521,
															"nodeType": "RevertStatement",
															"src": "16999:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17060:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17074:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17066:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17066:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17060:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "IfStatement",
												"src": "17056:86:0",
												"trueBody": {
													"id": 537,
													"nodeType": "Block",
													"src": "17078:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17128:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17120:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 531,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17120:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17120:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 530,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "17099:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17099:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 536,
															"nodeType": "RevertStatement",
															"src": "17092:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "17159:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17165:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17169:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "17151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17151:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "17151:24:0"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "16515:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16891:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16909:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "16901:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16923:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "16915:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16935:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "16927:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16900:41:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16951:0:0"
									},
									"scope": 816,
									"src": "16882:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "17572:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 556,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "17586:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17602:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17594:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 557,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17594:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17594:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17586:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "17760:362:0",
													"statements": [
														{
															"assignments": [
																568
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 568,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17782:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 593,
																	"src": "17774:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 567,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17774:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 572,
															"initialValue": {
																"baseExpression": {
																	"id": 569,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "17796:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 571,
																"indexExpression": {
																	"id": 570,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "17806:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17796:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17774:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 573,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "17829:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 574,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "17843:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17829:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 583,
															"nodeType": "IfStatement",
															"src": "17825:115:0",
															"trueBody": {
																"id": 582,
																"nodeType": "Block",
																"src": "17850:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 577,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 549,
																					"src": "17900:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 578,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 568,
																					"src": "17906:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 579,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 553,
																					"src": "17919:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 576,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 185,
																				"src": "17875:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17875:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 581,
																		"nodeType": "RevertStatement",
																		"src": "17868:57:0"
																	}
																]
															}
														},
														{
															"id": 592,
															"nodeType": "UncheckedBlock",
															"src": "17953:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 584,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 324,
																				"src": "18060:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 586,
																			"indexExpression": {
																				"id": 585,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 549,
																				"src": "18070:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18060:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 587,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 568,
																				"src": "18078:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 588,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 553,
																				"src": "18092:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18078:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18060:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 591,
																	"nodeType": "ExpressionStatement",
																	"src": "18060:37:0"
																}
															]
														}
													]
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "17582:540:0",
												"trueBody": {
													"id": 566,
													"nodeType": "Block",
													"src": "17606:148:0",
													"statements": [
														{
															"expression": {
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 562,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "17722:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 563,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "17738:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17722:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 565,
															"nodeType": "ExpressionStatement",
															"src": "17722:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 595,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "18136:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18150:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18142:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 596,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18142:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18142:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18136:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "18351:206:0",
													"statements": [
														{
															"id": 613,
															"nodeType": "UncheckedBlock",
															"src": "18365:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 607,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 324,
																				"src": "18510:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 609,
																			"indexExpression": {
																				"id": 608,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "18520:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18510:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 610,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 553,
																			"src": "18527:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18510:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 612,
																	"nodeType": "ExpressionStatement",
																	"src": "18510:22:0"
																}
															]
														}
													]
												},
												"id": 615,
												"nodeType": "IfStatement",
												"src": "18132:425:0",
												"trueBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "18154:191:0",
													"statements": [
														{
															"id": 605,
															"nodeType": "UncheckedBlock",
															"src": "18168:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 601,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "18299:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 602,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 553,
																			"src": "18315:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18299:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 604,
																	"nodeType": "ExpressionStatement",
																	"src": "18299:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 617,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "18581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "18587:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "18591:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 616,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "18572:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18572:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "EmitStatement",
												"src": "18567:30:0"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "17188:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17506:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17522:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "17514:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17536:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "17528:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17548:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "17540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17513:41:0"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17572:0:0"
									},
									"scope": 816,
									"src": "17497:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "19003:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 631,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "19017:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19036:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19028:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 632,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19028:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19028:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19017:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 645,
												"nodeType": "IfStatement",
												"src": "19013:91:0",
												"trueBody": {
													"id": 644,
													"nodeType": "Block",
													"src": "19040:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19090:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19082:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 638,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19082:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19082:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 637,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "19061:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19061:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 643,
															"nodeType": "RevertStatement",
															"src": "19054:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19129:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19121:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 647,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19121:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19121:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "19133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "19142:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "19113:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19113:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "19113:35:0"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "18610:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18956:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "18962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18987:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "18979:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18961:32:0"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19003:0:0"
									},
									"scope": 816,
									"src": "18947:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "19529:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 664,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "19543:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19554:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 665,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19554:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19554:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19543:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 678,
												"nodeType": "IfStatement",
												"src": "19539:89:0",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "19566:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19614:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19606:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 671,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19606:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19606:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 670,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "19587:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19587:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 676,
															"nodeType": "RevertStatement",
															"src": "19580:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "19645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19662:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19654:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 681,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19654:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19654:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "19666:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 679,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "19637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19637:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "19637:35:0"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "19161:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19482:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19496:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "19488:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "19505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19487:32:0"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19529:0:0"
									},
									"scope": 816,
									"src": "19473:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "20289:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 700,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "20308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "20315:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "20324:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20331:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 699,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															707,
															767
														],
														"referencedDeclaration": 767,
														"src": "20299:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20299:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "20299:37:0"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "19685:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20224:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "20233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20256:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "20248:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20273:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "20265:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20232:47:0"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20289:0:0"
									},
									"scope": 816,
									"src": "20215:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "21288:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 719,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "21302:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21319:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 720,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21311:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21311:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21302:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 733,
												"nodeType": "IfStatement",
												"src": "21298:89:0",
												"trueBody": {
													"id": 732,
													"nodeType": "Block",
													"src": "21323:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21373:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21365:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 726,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21365:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21365:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 725,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "21344:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21344:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 731,
															"nodeType": "RevertStatement",
															"src": "21337:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 734,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "21400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21419:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21411:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 735,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21411:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21411:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21400:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "21396:90:0",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "21423:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21472:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21464:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 741,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21464:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21464:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 740,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "21444:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21444:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 746,
															"nodeType": "RevertStatement",
															"src": "21437:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 749,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "21495:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 752,
															"indexExpression": {
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "21507:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21495:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 753,
														"indexExpression": {
															"id": 751,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "21514:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21495:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 754,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "21525:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21495:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "21495:35:0"
											},
											{
												"condition": {
													"id": 757,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 716,
													"src": "21544:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 765,
												"nodeType": "IfStatement",
												"src": "21540:76:0",
												"trueBody": {
													"id": 764,
													"nodeType": "Block",
													"src": "21555:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 759,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "21583:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 760,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 712,
																		"src": "21590:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 761,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "21599:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 758,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "21574:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21574:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 763,
															"nodeType": "EmitStatement",
															"src": "21569:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "20349:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "21199:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21216:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "21208:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21208:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21231:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "21223:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21248:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "21240:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "21260:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "21255:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21207:63:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21288:0:0"
									},
									"scope": 816,
									"src": "21190:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "21993:387:0",
										"statements": [
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "22011:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 814,
														"src": "22003:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 783,
												"initialValue": {
													"arguments": [
														{
															"id": 780,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "22040:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "22047:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 779,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "22030:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22030:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22003:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 784,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "22069:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22093:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 786,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "22093:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 785,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "22088:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22088:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "22102:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "22088:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22069:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "22065:309:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "22107:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 791,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "22125:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 792,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "22144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22125:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 801,
															"nodeType": "IfStatement",
															"src": "22121:130:0",
															"trueBody": {
																"id": 800,
																"nodeType": "Block",
																"src": "22151:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 795,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 772,
																					"src": "22203:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 796,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 778,
																					"src": "22212:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 797,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 774,
																					"src": "22230:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 794,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "22176:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22176:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 799,
																		"nodeType": "RevertStatement",
																		"src": "22169:67:0"
																	}
																]
															}
														},
														{
															"id": 811,
															"nodeType": "UncheckedBlock",
															"src": "22264:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 803,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 770,
																				"src": "22301:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 804,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 772,
																				"src": "22308:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 805,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 778,
																					"src": "22317:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 806,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 774,
																					"src": "22336:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22317:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22343:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 802,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				707,
																				767
																			],
																			"referencedDeclaration": 767,
																			"src": "22292:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22292:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 810,
																	"nodeType": "ExpressionStatement",
																	"src": "22292:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "21628:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21913:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21937:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "21929:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21952:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "21944:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21969:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "21961:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21928:47:0"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21993:0:0"
									},
									"scope": 816,
									"src": "21904:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 945,
							"src": "12614:9768:0",
							"usedErrors": [
								185,
								190,
								195,
								204,
								209,
								214
							],
							"usedEvents": [
								56,
								65
							]
						},
						{
							"id": 817,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "22419:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 818,
										"name": "ERC20",
										"nameLocations": [
											"22576:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "22576:5:0"
									},
									"id": 819,
									"nodeType": "InheritanceSpecifier",
									"src": "22576:5:0"
								}
							],
							"canonicalName": "SyntheticAssetToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 944,
							"linearizedBaseContracts": [
								944,
								816,
								215,
								145,
								122,
								174
							],
							"name": "SyntheticAssetToken",
							"nameLocation": "22553:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 822,
									"mutability": "mutable",
									"name": "ethUsdPriceFeed",
									"nameLocation": "22674:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "22643:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 821,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 820,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"22643:21:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "22643:21:0"
										},
										"referencedDeclaration": 45,
										"src": "22643:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 825,
									"mutability": "mutable",
									"name": "btcUsdPriceFeed",
									"nameLocation": "22726:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "22695:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 824,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 823,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"22695:21:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "22695:21:0"
										},
										"referencedDeclaration": 45,
										"src": "22695:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 827,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "22762:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "22747:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 826,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22747:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "22827:302:0",
										"statements": [
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 834,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "22837:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 835,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "22845:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22849:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "22845:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22837:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "22837:18:0"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 839,
														"name": "ethUsdPriceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "22946:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307836393441413137363933353732313544453446414330383162663166333039614443333235333036",
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22986:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x694AA1769357215DE4FAC081bf1f309aDC325306"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 840,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "22964:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22964:65:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "22946:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "22946:83:0"
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "btcUsdPriceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "23039:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307831623434463335313438313264383335454231424442306163423333643366413333353145653433",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23079:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 846,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "23057:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23057:65:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "23039:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "23039:83:0"
											}
										]
									},
									"id": 852,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53796e74686574696320426974636f696e",
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22798:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f06a2325ec70e87f694c8405ec190045e909479f48a31b2a711ca88d6a8bad84",
														"typeString": "literal_string \"Synthetic Bitcoin\""
													},
													"value": "Synthetic Bitcoin"
												},
												{
													"hexValue": "73425443",
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22819:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6587d61b59ac1e9c9f12c71f220fb1b1740d054e81277d4466a0d348e0e266e1",
														"typeString": "literal_string \"sBTC\""
													},
													"value": "sBTC"
												}
											],
											"id": 832,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 829,
												"name": "ERC20",
												"nameLocations": [
													"22792:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 816,
												"src": "22792:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22792:34:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22789:2:0"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22827:0:0"
									},
									"scope": 944,
									"src": "22778:351:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "23260:156:0",
										"statements": [
											{
												"assignments": [
													null,
													858,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "23277:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 865,
														"src": "23273:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 857,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "23273:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 862,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 859,
															"name": "btcUsdPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "23289:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23305:15:0",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "23289:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23289:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23270:52:0"
											},
											{
												"expression": {
													"id": 863,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 858,
													"src": "23339:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 856,
												"id": 864,
												"nodeType": "Return",
												"src": "23332:12:0"
											}
										]
									},
									"functionSelector": "7b9629db",
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestBtcPrice",
									"nameLocation": "23214:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23231:2:0"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "23255:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 854,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "23255:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23254:5:0"
									},
									"scope": 944,
									"src": "23205:211:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "23539:1289:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 870,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "23557:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "23561:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "23557:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23569:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23557:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e642045544820746f206d696e7420746f6b656e73",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23572:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7",
																"typeString": "literal_string \"Must send ETH to mint tokens\""
															},
															"value": "Must send ETH to mint tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a2411f362c3dfcc25b3db59dd4db5248bb6044a5d00f25779025fe8492270f7",
																"typeString": "literal_string \"Must send ETH to mint tokens\""
															}
														],
														"id": 869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23549:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "23549:54:0"
											},
											{
												"assignments": [
													null,
													878,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "ethPrice",
														"nameLocation": "23665:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "23661:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 877,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "23661:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 882,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 879,
															"name": "ethUsdPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "23680:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23696:15:0",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "23680:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23680:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23658:55:0"
											},
											{
												"assignments": [
													null,
													884,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "btcPrice",
														"nameLocation": "23764:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "23760:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 883,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "23760:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 888,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 885,
															"name": "btcUsdPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "23779:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23795:15:0",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "23779:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23779:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23757:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 890,
																	"name": "ethPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "23864:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23875:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "23864:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 893,
																	"name": "btcPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "23880:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23891:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "23880:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "23864:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f7261636c65207072696365",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23894:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265",
																"typeString": "literal_string \"Invalid oracle price\""
															},
															"value": "Invalid oracle price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265",
																"typeString": "literal_string \"Invalid oracle price\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23856:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "23856:61:0"
											},
											{
												"assignments": [
													901
												],
												"declarations": [
													{
														"constant": false,
														"id": 901,
														"mutability": "mutable",
														"name": "ethPriceUint",
														"nameLocation": "23998:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "23990:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 900,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23990:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [
														{
															"id": 904,
															"name": "ethPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "24021:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "24013:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 902,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24013:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24013:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23990:40:0"
											},
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "btcPriceUint",
														"nameLocation": "24048:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "24040:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 907,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24040:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 913,
												"initialValue": {
													"arguments": [
														{
															"id": 911,
															"name": "btcPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "24071:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "24063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24063:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24063:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24040:40:0"
											},
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "depositValueInUsd_scaled",
														"nameLocation": "24364:24:0",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "24356:32:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 914,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 916,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "24392:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24396:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "24392:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 918,
																	"name": "ethPriceUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "24404:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24392:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 920,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24391:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24420:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "24391:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24356:68:0"
											},
											{
												"assignments": [
													925
												],
												"declarations": [
													{
														"constant": false,
														"id": 925,
														"mutability": "mutable",
														"name": "btcAmount_scaled",
														"nameLocation": "24645:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "24637:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 924,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24637:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 935,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 926,
																	"name": "depositValueInUsd_scaled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "24665:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000_by_1",
																				"typeString": "int_const 10000000000"
																			},
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24693:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3130",
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24699:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "24693:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000_by_1",
																				"typeString": "int_const 10000000000"
																			}
																		}
																	],
																	"id": 930,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24692:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000000000_by_1",
																		"typeString": "int_const 10000000000"
																	}
																},
																"src": "24665:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 932,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24664:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 933,
														"name": "btcPriceUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "24706:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24664:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24637:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 937,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "24792:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24796:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24792:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "btcAmount_scaled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "24804:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "24786:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24786:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "24786:35:0"
											}
										]
									},
									"functionSelector": "bc4d2797",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintWithEther",
									"nameLocation": "23506:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23519:2:0"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23539:0:0"
									},
									"scope": 944,
									"src": "23497:1331:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 945,
							"src": "22544:2286:0",
							"usedErrors": [
								185,
								190,
								195,
								204,
								209,
								214
							],
							"usedEvents": [
								56,
								65
							]
						}
					],
					"src": "79:24752:0"
				},
				"id": 0
			}
		}
	}
}